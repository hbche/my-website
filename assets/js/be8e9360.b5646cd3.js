"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6126],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),g=a,b=p["".concat(l,".").concat(g)]||p[g]||m[g]||o;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},154:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b",authors:{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png"},description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",tags:["rust","cargo","tutorial"],date:new Date("2023-10-08T00:00:00.000Z")},i=void 0,s={permalink:"/my-website/blog/2023/10/08/rust-data-type",source:"@site/blog/2023-10-08-rust-data-type/index.md",title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b",description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",date:"2023-10-08T00:00:00.000Z",formattedDate:"2023\u5e7410\u67088\u65e5",tags:[{label:"rust",permalink:"/my-website/blog/tags/rust"},{label:"cargo",permalink:"/my-website/blog/tags/cargo"},{label:"tutorial",permalink:"/my-website/blog/tags/tutorial"}],readingTime:6.665,hasTruncateMarker:!0,authors:[{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png",imageURL:"https://github.com/hbche.png"}],frontMatter:{title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b",authors:{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png",imageURL:"https://github.com/hbche.png"},description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",tags:["rust","cargo","tutorial"],date:"2023-10-08T00:00:00.000Z"},prevItem:{title:"IEEE-754\u6807\u51c6",permalink:"/my-website/blog/2023/10/08/ieee-754"},nextItem:{title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u53d8\u91cf",permalink:"/my-website/blog/2023/10/07/rust-valiables"}},l={authorsImageUrls:[void 0]},u=[],c={toc:u},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Rust \u662f\u4e00\u79cd",(0,a.kt)("strong",{parentName:"p"},"\u9759\u6001\u7c7b\u578b"),"(statically typed)\u7684\u8bed\u8a00\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5fc5\u987b\u5728\u7f16\u8bd1\u5668\u77e5\u9053\u6240\u6709\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u901a\u5e38\u53ef\u4ee5\u6839\u636e\u503c\u548c\u4f7f\u7528\u65b9\u5f0f\u63a8\u5bfc\u51fa\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u3002\u4f8b\u5982\u6211\u4eec\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u5fc5\u987b\u52a0\u4e0a\u4e00\u4e2a\u7c7b\u578b\u6807\u6ce8\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let guess: u32 = "42".parse().expect("Not a number");\n')),(0,a.kt)("p",null,"\u5982\u679c\u4e0d\u6dfb\u52a0\u7c7b\u578b\u6807\u6ce8\u7684\u8bdd\uff0cRust \u5c06\u663e\u793a\u5982\u4e0b\u9519\u8bef"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'error[E0282]: type annotations needed\n --\x3e src\\main.rs:2:9\n  |\n2 |     let guess = "42".parse().expect("Not a number");\n  |         ^^^^^\n  |\nhelp: consider giving `guess` an explicit type\n  |\n2 |     let guess: /* Type */ = "42".parse().expect("Not a number");\n  |              ++++++++++++\n\nFor more information about this error, try `rustc --explain E0282`.\nerror: could not compile `guessing` (bin "guessing") due to previous error\n')))}m.isMDXComponent=!0}}]);