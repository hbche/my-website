"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4864],{5261:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/2023/10/09/rust-ownership","metadata":{"permalink":"/my-website/blog/2023/10/09/rust-ownership","source":"@site/blog/2023-10-09-rust-ownership/index.md","title":"Rust \u6240\u6709\u6743","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-09T00:00:00.000Z","formattedDate":"2023\u5e7410\u67089\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u6240\u6709\u6743","permalink":"/my-website/blog/tags/\u6240\u6709\u6743"}],"readingTime":42.445,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u6240\u6709\u6743","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u6240\u6709\u6743"],"date":"2023-10-09T00:00:00.000Z","time":56100},"nextItem":{"title":"Rust \u7ed3\u6784\u4f53","permalink":"/my-website/blog/2023/10/09/rust-structure"}},"content":"\u6240\u6709\u6743\uff08\u7cfb\u7edf\uff09\u662f Rust \u6700\u4e3a\u4e0e\u4f17\u4e0d\u540c\u7684\u7279\u6027\uff0c\u5b83\u8ba9 Rust \u65e0\u9700\u5783\u573e\u56de\u6536\u5668\uff08garbage collector\uff09\u5373\u53ef\u4fdd\u8bc1\u5185\u5b58\u5b89\u5168\u3002\u56e0\u6b64\uff0c\u7406\u89e3 Rust \u4e2d\u6240\u6709\u6743\u7684\u8fd0\u4f5c\u65b9\u5f0f\u975e\u5e38\u91cd\u8981\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u6240\u6709\u6743\u4ee5\u53ca\u76f8\u5173\u529f\u80fd\uff1a\u501f\u7528\u3001slice \u4ee5\u53ca Rust \u5982\u4f55\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u6570\u636e\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u4ec0\u4e48\u662f\u6240\u6709\u6743\\n\\n\u6240\u6709\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u5fc5\u987b\u7ba1\u7406\u5176\u4f7f\u7528\u8ba1\u7b97\u673a\u5185\u5b58\u7684\u65b9\u5f0f\u3002\u4e00\u4e9b\u8bed\u8a00\u4e2d\u5177\u6709\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e0d\u65ad\u5730\u5bfb\u627e\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\uff1b\u5728\u53e6\u4e00\u4e9b\u8bed\u8a00\u4e2d\uff0c\u5f00\u53d1\u8005\u5fc5\u987b\u4eb2\u81ea\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u3002Rust \u5219\u9009\u62e9\u4e86\u7b2c\u4e09\u79cd\u65b9\u5f0f\uff1a\u901a\u8fc7\u6240\u6709\u6743\u7cfb\u7edf\u7ba1\u7406\u5185\u5b58\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e\u4e00\u7cfb\u5217\u7684\u89c4\u5219\u8fdb\u884c\u68c0\u67e5\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u6240\u6709\u6743\u7cfb\u7edf\u7684\u4efb\u4f55\u529f\u80fd\u90fd\u4e0d\u4f1a\u51cf\u6162\u7a0b\u5e8f\u3002\\n\\n<details>\\n<summary><b>\u6808\uff08Stack\uff09\u4e0e\u5806\uff08Heap\uff09</b></summary>\\n\\n\u5728\u5f88\u591a\u8bed\u8a00\u4e2d\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u7ecf\u5e38\u8003\u8651\u5230\u6808\u4e0e\u5806\u3002\u4e0d\u8fc7\u5728\u50cf Rust \u8fd9\u6837\u7684\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u503c\u662f\u4f4d\u4e8e\u6808\u4e0a\u8fd8\u662f\u5806\u4e0a\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u4e86\u8bed\u8a00\u7684\u884c\u4e3a\u4ee5\u53ca\u4e3a\u4f55\u5fc5\u987b\u505a\u51fa\u8fd9\u6837\u7684\u6289\u62e9\u3002\\n\\n\u6808\u548c\u5806\u90fd\u662f\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u53ef\u4f9b\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u7ed3\u6784\u4e0d\u540c\u3002\u6808\u4ee5\u653e\u5165\u503c\u7684\u987a\u5e8f\u5b58\u50a8\u503c\u5e76\u4ee5\u76f8\u53cd\u987a\u5e8f\u53d6\u51fa\u503c\u3002\u8fd9\u4e5f\u88ab\u79f0\u4f5c **\u540e\u8fdb\u5148\u51fa**\uff08last in, first out\uff09\u3002\u60f3\u8c61\u4e00\u4e0b\u4e00\u53e0\u76d8\u5b50\uff1a\u5f53\u589e\u52a0\u66f4\u591a\u76d8\u5b50\u65f6\uff0c\u628a\u5b83\u4eec\u653e\u5728\u76d8\u5b50\u5806\u7684\u9876\u90e8\uff0c\u5f53\u9700\u8981\u76d8\u5b50\u65f6\uff0c\u4e5f\u4ece\u9876\u90e8\u62ff\u8d70\u3002\u4e0d\u80fd\u4ece\u4e2d\u95f4\u4e5f\u4e0d\u80fd\u4ece\u5e95\u90e8\u589e\u52a0\u6216\u62ff\u8d70\u76d8\u5b50\uff01\u589e\u52a0\u6570\u636e\u53eb\u505a **\u8fdb\u6808**\uff08pushing onto the stack\uff09\uff0c\u800c\u79fb\u51fa\u6570\u636e\u53eb\u505a **\u51fa\u6808**\uff08popping off the stack\uff09\u3002\\n\\n\u6808\u4e2d\u7684\u6240\u6709\u6570\u636e\u90fd\u5fc5\u987b\u5360\u7528**\u5df2\u77e5\u4e14\u56fa\u5b9a\u7684\u5927\u5c0f**\u3002\u5728\u7f16\u8bd1\u65f6\u5927\u5c0f\u672a\u77e5\u6216\u5927\u5c0f\u53ef\u80fd\u53d8\u5316\u7684\u6570\u636e\uff0c\u8981\u6539\u4e3a\u5b58\u50a8\u5728\u5806\u4e0a\u3002\u5806\u662f\u7f3a\u4e4f\u7ec4\u7ec7\u7684\uff1a\u5f53\u5411\u5806\u653e\u5165\u6570\u636e\u65f6\uff0c\u4f60\u8981\u8bf7\u6c42\u4e00\u5b9a\u5927\u5c0f\u7684\u7a7a\u95f4\u3002\u5185\u5b58\u5206\u914d\u5668\uff08memory allocator\uff09\u5728\u5806\u7684\u67d0\u5904\u627e\u5230\u4e00\u5757\u8db3\u591f\u5927\u7684\u7a7a\u4f4d\uff0c\u628a\u5b83\u6807\u8bb0\u4e3a\u5df2\u4f7f\u7528\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u4f4d\u7f6e\u5730\u5740\u7684 **\u6307\u9488**\uff08pointer\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4f5c **\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58**\uff08allocating on the heap\uff09\uff0c\u6709\u65f6\u7b80\u79f0\u4e3a \u201c\u5206\u914d\u201d\uff08allocating\uff09\u3002\u5c06\u6570\u636e\u63a8\u5165\u6808\u4e2d\u5e76\u4e0d\u88ab\u8ba4\u4e3a\u662f\u5206\u914d\u3002\u56e0\u4e3a\u6307\u9488\u7684\u5927\u5c0f\u662f\u5df2\u77e5\u5e76\u4e14\u56fa\u5b9a\u7684\uff0c\u4f60\u53ef\u4ee5\u5c06\u6307\u9488\u5b58\u50a8\u5728\u6808\u4e0a\uff0c\u4e0d\u8fc7\u5f53\u9700\u8981\u5b9e\u9645\u6570\u636e\u65f6\uff0c\u5fc5\u987b\u8bbf\u95ee\u6307\u9488\u3002\\n\\n\u60f3\u8c61\u4e00\u4e0b\u53bb\u9910\u9986\u5c31\u5ea7\u5403\u996d\u3002\u5f53\u8fdb\u5165\u65f6\uff0c\u4f60\u8bf4\u660e\u6709\u51e0\u4e2a\u4eba\uff0c\u9910\u9986\u5458\u5de5\u4f1a\u627e\u5230\u4e00\u4e2a\u591f\u5927\u7684\u7a7a\u684c\u5b50\u5e76\u9886\u4f60\u4eec\u8fc7\u53bb\u3002\u5982\u679c\u6709\u4eba\u6765\u8fdf\u4e86\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be2\u95ee\u6765\u627e\u5230\u4f60\u4eec\u5750\u5728\u54ea\u3002\\n\\n\u5165\u6808\u6bd4\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u8981\u5feb\uff0c\u56e0\u4e3a\uff08\u5165\u6808\u65f6\uff09\u5206\u914d\u5668\u65e0\u9700\u4e3a\u5b58\u50a8\u65b0\u6570\u636e\u53bb\u641c\u7d22\u5185\u5b58\u7a7a\u95f4\uff1b\u5176\u4f4d\u7f6e\u603b\u662f\u5728\u6808\u9876\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u5219\u9700\u8981\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u8fd9\u662f\u56e0\u4e3a\u5206\u914d\u5668\u5fc5\u987b\u9996\u5148\u627e\u5230\u4e00\u5757\u8db3\u591f\u5b58\u653e\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u63a5\u7740\u505a\u4e00\u4e9b\u8bb0\u5f55\u4e3a\u4e0b\u4e00\u6b21\u5206\u914d\u505a\u51c6\u5907\u3002\\n\\n\u8bbf\u95ee\u5806\u4e0a\u7684\u6570\u636e\u6bd4\u8bbf\u95ee\u6808\u4e0a\u7684\u6570\u636e\u6162\uff0c\u56e0\u4e3a**\u5fc5\u987b\u901a\u8fc7\u6307\u9488\u6765\u8bbf\u95ee**\u3002\u73b0\u4ee3\u5904\u7406\u5668\u5728\u5185\u5b58\u4e2d\u8df3\u8f6c\u8d8a\u5c11\u5c31\u8d8a\u5feb\uff08\u7f13\u5b58\uff09\u3002\u7ee7\u7eed\u7c7b\u6bd4\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u670d\u52a1\u5458\u5728\u9910\u5385\u91cc\u5904\u7406\u591a\u4e2a\u684c\u5b50\u7684\u70b9\u83dc\u3002\u5728\u4e00\u4e2a\u684c\u5b50\u62a5\u5b8c\u6240\u6709\u83dc\u540e\u518d\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u684c\u5b50\u662f\u6700\u6709\u6548\u7387\u7684\u3002\u4ece\u684c\u5b50 A \u542c\u4e00\u4e2a\u83dc\uff0c\u63a5\u7740\u684c\u5b50 B \u542c\u4e00\u4e2a\u83dc\uff0c\u7136\u540e\u518d\u684c\u5b50 A\uff0c\u7136\u540e\u518d\u684c\u5b50 B \u8fd9\u6837\u7684\u6d41\u7a0b\u4f1a\u66f4\u52a0\u7f13\u6162\u3002\u51fa\u4e8e\u540c\u6837\u539f\u56e0\uff0c\u5904\u7406\u5668\u5728\u5904\u7406\u7684\u6570\u636e\u5f7c\u6b64\u8f83\u8fd1\u7684\u65f6\u5019\uff08\u6bd4\u5982\u5728\u6808\u4e0a\uff09\u6bd4\u8f83\u8fdc\u7684\u65f6\u5019\uff08\u6bd4\u5982\u53ef\u80fd\u5728\u5806\u4e0a\uff09\u80fd\u66f4\u597d\u7684\u5de5\u4f5c\u3002\u5728\u5806\u4e0a\u5206\u914d\u5927\u91cf\u7684\u7a7a\u95f4\u4e5f\u53ef\u80fd\u6d88\u8017\u65f6\u95f4\u3002\\n\\n\u5f53\u4f60\u7684\u4ee3\u7801\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\uff08\u5305\u62ec\u53ef\u80fd\u6307\u5411\u5806\u4e0a\u6570\u636e\u7684\u6307\u9488\uff09\u548c\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u88ab\u538b\u5165\u6808\u4e2d\u3002\u5f53\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u8fd9\u4e9b\u503c\u88ab\u79fb\u51fa\u6808\u3002\\n\\n\u8ddf\u8e2a\u54ea\u90e8\u5206\u4ee3\u7801\u6b63\u5728\u4f7f\u7528\u5806\u4e0a\u7684\u54ea\u4e9b\u6570\u636e\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5806\u4e0a\u7684\u91cd\u590d\u6570\u636e\u91cf\uff0c\u4ee5\u53ca\u6e05\u7406\u5806\u4e0a\u4e0d\u518d\u4f7f\u7528\u7684\u6570\u636e\u786e\u4fdd\u4e0d\u4f1a\u8017\u5c3d\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u95ee\u9898\u6b63\u662f\u6240\u6709\u6743\u7cfb\u7edf\u8981\u5904\u7406\u7684\u3002\u4e00\u65e6\u7406\u89e3\u4e86\u6240\u6709\u6743\uff0c\u4f60\u5c31\u4e0d\u9700\u8981\u7ecf\u5e38\u8003\u8651\u6808\u548c\u5806\u4e86\uff0c\u4e0d\u8fc7\u660e\u767d\u4e86\u6240\u6709\u6743\u7684\u5b58\u5728\u5c31\u662f\u4e3a\u4e86\u7ba1\u7406\u5806\u6570\u636e\uff0c\u80fd\u591f\u5e2e\u52a9\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6240\u6709\u6743\u8981\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5de5\u4f5c\u3002\\n\\n</details>\\n\\n### \u6240\u6709\u6743\u89c4\u5219\\n\\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6240\u6709\u6743\u7684\u89c4\u5219\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u4e3e\u4f8b\u8bf4\u660e\u65f6\uff0c\u8bf7\u8c28\u8bb0\u8fd9\u4e9b\u89c4\u5219\uff1a\\n\\n- Rust \u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5176 **\u6240\u6709\u8005** (owner) \u7684\u53d8\u91cf\\n- \u503c\u5728\u4efb\u4e00\u65f6\u523b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6240\u6709\u8005\\n- \u5f53\u6240\u6709\u8005\uff08\u53d8\u91cf\uff09\u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u8fd9\u4e2a\u503c\u5c06\u88ab\u4e22\u5f03\\n\\n### \u53d8\u91cf\u4e0e\u4f5c\u7528\u57df\\n\\n\u5728\u6240\u6709\u6743\u7684\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u770b\u770b\u4e00\u4e9b\u53d8\u91cf\u7684 **\u4f5c\u7528\u57df**\uff08scope\uff09\u3002\u4f5c\u7528\u57df\u662f\u4e00\u4e2a\u9879\uff08item\uff09\u5728\u7a0b\u5e8f\u4e2d\u6709\u6548\u7684\u8303\u56f4\u3002\u5047\u8bbe\u6709\u8fd9\u6837\u4e00\u4e2a\u53d8\u91cf\uff1a\\n\\n```rust\\nlet s = String::from(\\"hello\\");\\n```\\n\\n\u53d8\u91cf `s` \u7ed1\u5b9a\u5230\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u503c\u662f\u786c\u7f16\u7801\u8fdb\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u7684\u3002\u8be5\u53d8\u91cf\u4ece\u58f0\u660e\u7684\u90a3\u4e00\u523b\u5f00\u59cb\u76f4\u5230\u5f53\u524d **\u4f5c\u7528\u57df** \u7ed3\u675f\u65f6\u90fd\u662f\u6709\u6548\u7684\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u7ed9\u51fa\u4e86\u53d8\u91cf `s` \u7684\u6709\u6548\u8303\u56f4:\\n\\n```rust\\n{   // s \u5728\u8fd9\u91cc\u65e0\u6548, \u5b83\u5c1a\u672a\u58f0\u660e\\n    let s = String::from(\\"hello\\");  // \u4ece\u6b64\u5904\u8d77, s \u5f00\u59cb\u6709\u6548\\n    // \u4f7f\u7528 s\\n}   // \u6b64\u4f5c\u7528\u57df\u5df2\u7ecf\u7ed3\u675f, s \u4e0d\u518d\u6709\u6548\\n```\\n\\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u65f6\u95f4\u70b9\uff1a\\n\\n- \u5f53 `s` **\u8fdb\u5165\u4f5c\u7528\u57df** \u65f6\uff0c\u5b83\u5c31\u662f\u6709\u6548\u7684\u3002\\n- \u8fd9\u4e00\u76f4\u6301\u7eed\u5230\u5b83 **\u79bb\u5f00\u4f5c\u7528\u57df** \u4e3a\u6b62\u3002\\n\\n\u76ee\u524d\u4e3a\u6b62\uff0c\u53d8\u91cf\u662f\u5426\u6709\u6548\u4e0e\u4f5c\u7528\u57df\u7684\u5173\u7cfb\u8ddf\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u662f\u7c7b\u4f3c\u7684\u3002\u73b0\u5728\u6211\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\u4ecb\u7ecd `String` \u7c7b\u578b\u3002\\n\\n### String \u7c7b\u578b\\n\\n\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u4e0d\u8fc7\u5b83\u4eec\u5e76\u4e0d\u9002\u5408\u4f7f\u7528\u6587\u672c\u7684\u6bcf\u4e00\u79cd\u573a\u666f\u3002\u539f\u56e0\u4e4b\u4e00\u5c31\u662f\u5b83\u4eec\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u5e76\u975e\u6240\u6709\u5b57\u7b26\u4e32\u7684\u503c\u90fd\u80fd\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5c31\u77e5\u9053\uff1a\u4f8b\u5982\uff0c\u8981\u662f\u60f3\u83b7\u53d6\u7528\u6237\u8f93\u5165\u5e76\u5b58\u50a8\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4e3a\u6b64\uff0cRust \u6709\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c`String`\u3002\u8fd9\u4e2a\u7c7b\u578b\u7ba1\u7406\u88ab\u5206\u914d\u5230\u5806\u4e0a\u7684\u6570\u636e\uff0c\u6240\u4ee5\u80fd\u591f\u5b58\u50a8\u5728\u7f16\u8bd1\u65f6\u672a\u77e5\u5927\u5c0f\u7684\u6587\u672c\u3002\u53ef\u4ee5\u4f7f\u7528 `from` \u51fd\u6570\u57fa\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u6765\u521b\u5efa `String`\uff0c\u5982\u4e0b\uff1a\\n\\n```rust\\nlet s = String::from(\\"Hello\\");\\n```\\n\\n\u53cc\u5192\u53f7\uff08::\uff09\u8fd0\u7b97\u7b26\u5141\u8bb8\u6211\u4eec\u5c06\u7279\u5b9a\u7684 `from` \u51fd\u6570\u7f6e\u4e8e `String` \u7c7b\u578b\u7684\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u4e0b\u3002\\n\\n\u53ef\u4ee5 \u4fee\u6539\u6b64\u7c7b\u5b57\u7b26\u4e32 \uff1a\\n\\n```rust\\nlet mut s = String::from(\\"Hello\\");\\ns.push_str(\\", world!\\");\\nprintln!(\\"{}\\", s);\\n```\\n\\n\u90a3\u4e48\u8fd9\u91cc\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\u4e3a\u4ec0\u4e48 String \u53ef\u53d8\u800c\u5b57\u9762\u91cf\u5374\u4e0d\u884c\u5462\uff1f\u533a\u522b\u5728\u4e8e\u4e24\u4e2a\u7c7b\u578b\u5bf9\u5185\u5b58\u7684\u5904\u7406\u4e0a\u3002\\n\\n### \u5185\u5b58\u4e0e\u5206\u914d\\n\\n\u5c31\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u7f16\u8bd1\u65f6\u5c31\u77e5\u9053\u5176\u5185\u5bb9\uff0c\u6240\u4ee5\u6587\u672c\u88ab\u76f4\u63a5\u786c\u7f16\u7801\u8fdb\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u8fd9\u4f7f\u5f97\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u5feb\u901f\u4e14\u9ad8\u6548\u3002\u4e0d\u8fc7\u8fd9\u4e9b\u7279\u6027\u90fd\u53ea\u5f97\u76ca\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u4e0d\u53ef\u53d8\u6027\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u4e3a\u4e86\u6bcf\u4e00\u4e2a\u5728\u7f16\u8bd1\u65f6\u5927\u5c0f\u672a\u77e5\u7684\u6587\u672c\u800c\u5c06\u4e00\u5757\u5185\u5b58\u653e\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14\u5b83\u7684\u5927\u5c0f\u8fd8\u53ef\u80fd\u968f\u7740\u7a0b\u5e8f\u8fd0\u884c\u800c\u6539\u53d8\u3002\\n\\n<details>\\n<summary>\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4e0e\u5b57\u7b26\u4e32\u53d8\u91cf\u5185\u5b58\u5206\u5e03</summary>\\n\\n\u5728 Rust \u4e2d\uff0c\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff08string literals\uff09\u662f\u5728\u6808\uff08stack\uff09\u4e0a\u5b58\u50a8\u7684\u3002\\n\\n\u5728 Rust \u7684\u5185\u5b58\u7ba1\u7406\u4e2d\uff0c\u5806\uff08heap\uff09\u548c\u6808\uff08stack\uff09\u662f\u4e24\u79cd\u4e3b\u8981\u7684\u65b9\u5f0f\u3002\u6808\u7528\u4e8e\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u8c03\u7528\u7684\u4fe1\u606f\uff0c\u5176\u5b58\u50a8\u7684\u6570\u636e\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u5c31\u4f1a\u88ab\u9500\u6bc1\u3002\u800c\u5806\u5219\u662f\u7528\u4e8e\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u5b58\u50a8\u5168\u5c40\u53d8\u91cf\u6216\u957f\u671f\u5b58\u6d3b\u7684\u6570\u636e\u3002\\n\\n\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u4e00\u79cd\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u77e5\u5176\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5b83\u4eec\u88ab\u5b58\u50a8\u5728\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u4e5f\u5c31\u662f\u6808\u4e0a\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u901a\u8fc7\u52a8\u6001\u5206\u914d\u7684\u65b9\u5f0f\uff08\u5982\u4f7f\u7528 `String` \u7c7b\u578b\uff09\u521b\u5efa\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u4e32\u5c06\u4f1a\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u3002\\n\\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\uff1a\\n\\n```rust\\nfn main() {\\n    let s1 = \\"Hello, world!\\"; // \u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u5b58\u50a8\u5728\u6808\u4e0a\\n    let s2 = String::from(\\"Hello, world!\\"); // \u52a8\u6001\u5206\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u5b58\u50a8\u5728\u5806\u4e0a\\n}\\n```\\n\\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c`s1` \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u5b83\u4f1a\u5728\u6808\u4e0a\u5206\u914d\u5185\u5b58\u3002\u800c `s2` \u662f\u901a\u8fc7 `String::from` \u52a8\u6001\u5206\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u5b83\u4f1a\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u5728\u6808\u4e0a\uff0c\u4f46\u7531\u4e8e\u5b83\u4eec\u7684\u751f\u547d\u5468\u671f\u4e0e\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u76f8\u540c\uff08\u5b83\u4eec\u662f\u5168\u5c40\u7684\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u4e0d\u4f1a\u88ab\u9500\u6bc1\u7684\u3002\\n\\n</details>\\n\\n\u5bf9\u4e8e `String` \u7c7b\u578b\uff0c\u4e3a\u4e86\u652f\u6301\u4e00\u4e2a\u53ef\u53d8\uff0c\u53ef\u589e\u957f\u7684\u6587\u672c\u7247\u6bb5\uff0c\u9700\u8981\u5728\u5806\u4e0a\u5206\u914d\u4e00\u5757\u5728\u7f16\u8bd1\u65f6\u672a\u77e5\u5927\u5c0f\u7684\u5185\u5b58\u6765\u5b58\u653e\u5185\u5bb9\u3002\u8fd9\u610f\u5473\u7740\uff1a\\n\\n- \u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u5411\u5185\u5b58\u5206\u914d\u5668\u8bf7\u6c42\u5185\u5b58\u3002\\n- \u9700\u8981\u4e00\u4e2a\u5f53\u6211\u4eec\u5904\u7406\u5b8c `String` \u65f6\u5c06\u5185\u5b58\u8fd4\u56de\u7ed9\u5206\u914d\u5668\u7684\u65b9\u6cd5\u3002\\n\\n\u7b2c\u4e00\u90e8\u5206\u7531\u6211\u4eec\u5b8c\u6210\uff1a\u5f53\u8c03\u7528 `String::from` \u65f6\uff0c\u5b83\u7684\u5b9e\u73b0\uff08implementation\uff09\u8bf7\u6c42\u5176\u6240\u9700\u7684\u5185\u5b58\u3002\u8fd9\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u662f\u975e\u5e38\u901a\u7528\u7684\u3002\\n\\n\u7136\u800c\uff0c\u7b2c\u4e8c\u90e8\u5206\u5b9e\u73b0\u8d77\u6765\u5c31\u5404\u6709\u533a\u522b\u4e86\u3002\u5728\u6709 **\u5783\u573e\u56de\u6536**\uff08garbage collector\uff0cGC\uff09\u7684\u8bed\u8a00\u4e2d\uff0c `GC` \u8bb0\u5f55\u5e76\u6e05\u9664\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u800c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u5b83\u3002\u6ca1\u6709 `GC` \u7684\u8bdd\uff0c\u8bc6\u522b\u51fa\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\u5e76\u8c03\u7528\u4ee3\u7801\u663e\u5f0f\u91ca\u653e\u5c31\u662f\u6211\u4eec\u7684\u8d23\u4efb\u4e86\uff0c\u8ddf\u8bf7\u6c42\u5185\u5b58\u7684\u65f6\u5019\u4e00\u6837\u3002\u4ece\u5386\u53f2\u7684\u89d2\u5ea6\u4e0a\u8bf4\u6b63\u786e\u5904\u7406\u5185\u5b58\u56de\u6536\u66fe\u7ecf\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u7f16\u7a0b\u95ee\u9898\u3002\u5982\u679c\u5fd8\u8bb0\u56de\u6536\u4e86\u4f1a\u6d6a\u8d39\u5185\u5b58\u3002\u5982\u679c\u8fc7\u65e9\u56de\u6536\u4e86\uff0c\u5c06\u4f1a\u51fa\u73b0\u65e0\u6548\u53d8\u91cf\u3002\u5982\u679c\u91cd\u590d\u56de\u6536\uff0c\u8fd9\u4e5f\u662f\u4e2a bug\u3002\u6211\u4eec\u9700\u8981\u7cbe\u786e\u5730\u4e3a\u4e00\u4e2a `allocate` \u914d\u5bf9\u4e00\u4e2a `free`\u3002\\n\\nRust \u91c7\u53d6\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u7b56\u7565\uff1a\u5185\u5b58\u5728\u62e5\u6709\u5b83\u7684\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u540e\u5c31\u88ab\u81ea\u52a8\u91ca\u653e\u3002\u4e0b\u9762\u662f\u793a\u4f8b\u4e2d\u4f5c\u7528\u57df\u4f8b\u5b50\u7684\u4e00\u4e2a\u4f7f\u7528 `String` \u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u7248\u672c\uff1a\\n\\n```rust\\n    {\\n        let s = String::from(\\"hello\\"); // \u4ece\u6b64\u5904\u8d77\uff0cs \u5f00\u59cb\u6709\u6548\\n\\n        // \u4f7f\u7528 s\\n    }                                  // \u6b64\u4f5c\u7528\u57df\u5df2\u7ed3\u675f\uff0c\\n                                       // s \u4e0d\u518d\u6709\u6548\\n```\\n\\n\u8fd9\u662f\u4e00\u4e2a\u5c06 `String` \u9700\u8981\u7684\u5185\u5b58\u8fd4\u56de\u7ed9\u5206\u914d\u5668\u7684\u5f88\u81ea\u7136\u7684\u4f4d\u7f6e\uff1a\u5f53 s \u79bb\u5f00\u4f5c\u7528\u57df\u7684\u65f6\u5019\u3002\u5f53\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\uff0cRust \u4e3a\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u53eb\u505a `drop`\uff0c\u5728\u8fd9\u91cc `String` \u7684\u4f5c\u8005\u53ef\u4ee5\u653e\u7f6e\u91ca\u653e\u5185\u5b58\u7684\u4ee3\u7801\u3002Rust \u5728\u7ed3\u5c3e\u7684 `}` \u5904\u81ea\u52a8\u8c03\u7528 `drop`\u3002\\n\\n> \u6ce8\u610f\uff1a\u5728 C++ \u4e2d\uff0c\u8fd9\u79cd item \u5728\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u91ca\u653e\u8d44\u6e90\u7684\u6a21\u5f0f\u6709\u65f6\u88ab\u79f0\u4f5c **\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316**\uff08Resource Acquisition Is Initialization (RAII)\uff09\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7 RAII \u6a21\u5f0f\u7684\u8bdd\u5e94\u8be5\u5bf9 Rust \u7684 drop \u51fd\u6570\u5e76\u4e0d\u964c\u751f\u3002\\n\\n\u8fd9\u4e2a\u6a21\u5f0f\u5bf9\u7f16\u5199 Rust \u4ee3\u7801\u7684\u65b9\u5f0f\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\u73b0\u5728\u5b83\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4e0d\u8fc7\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e0b\u4ee3\u7801\u7684\u884c\u4e3a\u53ef\u80fd\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\uff0c\u6bd4\u5982\u5f53\u6709\u591a\u4e2a\u53d8\u91cf\u4f7f\u7528\u5728\u5806\u4e0a\u5206\u914d\u7684\u5185\u5b58\u65f6\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u63a2\u7d22\u4e00\u4e9b\u8fd9\u6837\u7684\u573a\u666f\u3002\\n\\n### \u53d8\u91cf\u4e0e\u6570\u636e\u4ea4\u4e92\u7684\u65b9\u5f0f\uff08\u4e00\uff09\uff1a\u79fb\u52a8\\n\\n\u5728 Rust \u4e2d\uff0c\u591a\u4e2a\u53d8\u91cf\u80fd\u591f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u4e0e\u540c\u4e00\u6570\u636e\u4ea4\u4e92\u3002\u8ba9\u6211\u4eec\u770b\u770b\u4e0b\u9762\u7684\u793a\u4f8b:\\n\\n```rust\\nlet x = 5;\\nlet y = x;\\n```\\n\\n\u6211\u4eec\u5927\u81f4\u53ef\u4ee5\u731c\u5230\u8fd9\u5728\u5e72\u4ec0\u4e48\uff1a\u201c\u5c06 `5` \u7ed1\u5b9a\u5230 `x`\uff1b\u63a5\u7740\u751f\u6210\u4e00\u4e2a\u503c `x` \u7684\u62f7\u8d1d\u5e76\u7ed1\u5b9a\u5230 `y`\u201d\u3002\u73b0\u5728\u6709\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c`x` \u548c `y`\uff0c\u90fd\u7b49\u4e8e `5`\u3002\u8fd9\u4e5f\u6b63\u662f\u4e8b\u5b9e\u4e0a\u53d1\u751f\u4e86\u7684\uff0c\u56e0\u4e3a\u6574\u6570\u662f\u6709\u5df2\u77e5\u56fa\u5b9a\u5927\u5c0f\u7684\u7b80\u5355\u503c\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a `5` \u88ab\u653e\u5165\u4e86\u6808\u4e2d\u3002\\n\\n\u73b0\u5728\u770b\u770b\u8fd9\u4e2a `String` \u7248\u672c\uff1a\\n\\n```rust\\nlet s1 = String::from(\\"hello\\");\\nlet s2 = s1;\\n```\\n\\n\u8fd9\u770b\u8d77\u6765\u4e0e\u4e0a\u9762\u7684\u4ee3\u7801\u975e\u5e38\u7c7b\u4f3c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u80fd\u4f1a\u5047\u8bbe\u4ed6\u4eec\u7684\u8fd0\u884c\u65b9\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\uff1a\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e8c\u884c\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e2a `s1` \u7684\u62f7\u8d1d\u5e76\u7ed1\u5b9a\u5230 `s2` \u4e0a\u3002\u4e0d\u8fc7\uff0c\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u5b8c\u5168\u662f\u8fd9\u6837\u3002\\n\\n\u770b\u770b\u4e0b\u56fe\u4ee5\u4e86\u89e3 `String` \u7684\u5e95\u5c42\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002`String` \u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u5982\u56fe\u5de6\u4fa7\u6240\u793a\uff1a\u4e00\u4e2a\u6307\u5411\u5b58\u653e\u5b57\u7b26\u4e32\u5185\u5bb9\u5185\u5b58\u7684\u6307\u9488\uff0c\u4e00\u4e2a\u957f\u5ea6\uff0c\u548c\u4e00\u4e2a\u5bb9\u91cf\u3002\u8fd9\u4e00\u7ec4\u6570\u636e\u5b58\u50a8\u5728\u6808\u4e0a\u3002\u53f3\u4fa7\u5219\u662f\u5806\u4e0a\u5b58\u653e\u5185\u5bb9\u7684\u5185\u5b58\u90e8\u5206\u3002\\n\\n![](./ownership-01.svg)\\n\\n<h5>\u56fe 4-1\uff1a\u5c06\u503c \\"hello\\" \u7ed1\u5b9a\u7ed9 s1 \u7684 String \u5728\u5185\u5b58\u4e2d\u7684\u8868\u73b0\u5f62\u5f0f</h5>\\n\\n\u957f\u5ea6\u8868\u793a `String` \u7684\u5185\u5bb9\u5f53\u524d\u4f7f\u7528\u4e86\u591a\u5c11\u5b57\u8282\u7684\u5185\u5b58\u3002\u5bb9\u91cf\u662f `String` \u4ece\u5206\u914d\u5668\u603b\u5171\u83b7\u53d6\u4e86\u591a\u5c11\u5b57\u8282\u7684\u5185\u5b58\u3002\u957f\u5ea6\u4e0e\u5bb9\u91cf\u7684\u533a\u522b\u662f\u5f88\u91cd\u8981\u7684\uff0c\u4e0d\u8fc7\u5728\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\u5e76\u4e0d\u91cd\u8981\uff0c\u6240\u4ee5\u73b0\u5728\u53ef\u4ee5\u5ffd\u7565\u5bb9\u91cf\u3002\\n\\n\u5f53\u6211\u4eec\u5c06 `s1` \u8d4b\u503c\u7ed9 `s2`\uff0c`String` \u7684\u6570\u636e\u88ab\u590d\u5236\u4e86\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4ece\u6808\u4e0a\u62f7\u8d1d\u4e86\u5b83\u7684\u6307\u9488\u3001\u957f\u5ea6\u548c\u5bb9\u91cf\u3002\u6211\u4eec\u5e76\u6ca1\u6709\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u5806\u4e0a\u6570\u636e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5185\u5b58\u4e2d\u6570\u636e\u7684\u8868\u73b0\u5982\u4e0b\u56fe\u6240\u793a\u3002\\n\\n![](./ownership-02.svg)\\n\\n<h5>\u56fe 4-2\uff1a\u53d8\u91cf s2 \u7684\u5185\u5b58\u8868\u73b0\uff0c\u5b83\u6709\u4e00\u4efd s1 \u6307\u9488\u3001\u957f\u5ea6\u548c\u5bb9\u91cf\u7684\u62f7\u8d1d</h5>\\n\\n\u8fd9\u4e2a\u8868\u73b0\u5f62\u5f0f\u770b\u8d77\u6765 `\u5e76\u4e0d\u50cf` \u4e0b\u56fe\u4e2d\u7684\u90a3\u6837\uff0c\u5982\u679c Rust \u4e5f\u62f7\u8d1d\u4e86\u5806\u4e0a\u7684\u6570\u636e\uff0c\u90a3\u4e48\u5185\u5b58\u770b\u8d77\u6765\u5c31\u662f\u8fd9\u6837\u7684\u3002\u5982\u679c Rust \u8fd9\u4e48\u505a\u4e86\uff0c\u90a3\u4e48\u64cd\u4f5c `s2 = s1` \u5728\u5806\u4e0a\u6570\u636e\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u4f1a\u5bf9\u8fd0\u884c\u65f6\u6027\u80fd\u9020\u6210\u975e\u5e38\u5927\u7684\u5f71\u54cd\u3002\\n\\n![](./ownership-03.svg)\\n\\n<h5>\u56fe 4-3\uff1a\u53e6\u4e00\u4e2a s2 = s1 \u65f6\u53ef\u80fd\u7684\u5185\u5b58\u8868\u73b0\uff0c\u5982\u679c Rust \u540c\u65f6\u4e5f\u62f7\u8d1d\u4e86\u5806\u4e0a\u7684\u6570\u636e\u7684\u8bdd</h5>\\n\\n\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u8fc7\u5f53\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u540e\uff0cRust \u81ea\u52a8\u8c03\u7528 `drop` \u51fd\u6570\u5e76\u6e05\u7406\u53d8\u91cf\u7684\u5806\u5185\u5b58\u3002\u4e0d\u8fc7\u56fe 4-2 \u5c55\u793a\u4e86\u4e24\u4e2a\u6570\u636e\u6307\u9488\u6307\u5411\u4e86\u540c\u4e00\u4f4d\u7f6e\u3002\u8fd9\u5c31\u6709\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u5f53 `s2` \u548c `s1` \u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u4ed6\u4eec\u90fd\u4f1a\u5c1d\u8bd5\u91ca\u653e\u76f8\u540c\u7684\u5185\u5b58\u3002\u8fd9\u662f\u4e00\u4e2a\u53eb\u505a **\u4e8c\u6b21\u91ca\u653e**\uff08double free\uff09\u7684\u9519\u8bef\uff0c\u4e5f\u662f\u4e4b\u524d\u63d0\u5230\u8fc7\u7684\u5185\u5b58\u5b89\u5168\u6027 bug \u4e4b\u4e00\u3002\u4e24\u6b21\u91ca\u653e\uff08\u76f8\u540c\uff09\u5185\u5b58\u4f1a\u5bfc\u81f4\u5185\u5b58\u6c61\u67d3\uff0c\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6f5c\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\u3002\\n\\n\u4e3a\u4e86\u786e\u4fdd\u5185\u5b58\u5b89\u5168\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b Rust \u7684\u5904\u7406\u6709\u53e6\u4e00\u4e2a\u7ec6\u8282\u503c\u5f97\u6ce8\u610f\u3002\u5728 `let s2 = s1` \u4e4b\u540e\uff0cRust \u8ba4\u4e3a `s1` \u4e0d\u518d\u6709\u6548\uff0c\u56e0\u6b64 Rust \u4e0d\u9700\u8981\u5728 `s1` \u79bb\u5f00\u4f5c\u7528\u57df\u540e\u6e05\u7406\u4efb\u4f55\u4e1c\u897f\u3002\u770b\u770b\u5728 `s2` \u88ab\u521b\u5efa\u4e4b\u540e\u5c1d\u8bd5\u4f7f\u7528 `s1` \u4f1a\u53d1\u751f\u4ec0\u4e48\uff1b\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u80fd\u8fd0\u884c\uff1a\\n\\n```rust\\nlet s1 = String::from(\\"hello\\");\\nlet s2 = s1.trim();\\nprintln!(\\"{}, world!\\", s1);\\n```\\n\\n\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u7c7b\u4f3c\u5982\u4e0b\u7684\u9519\u8bef\uff0c\u56e0\u4e3a Rust \u7981\u6b62\u4f60\u4f7f\u7528\u65e0\u6548\u7684\u5f15\u7528\u3002\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\ownership> cargo run\\n   Compiling ownership v0.1.0 (E:\\\\github\\\\rust-projects\\\\ownership)\\nwarning: unused variable: `s2`\\n --\x3e src\\\\main.rs:3:9\\n  |\\n3 |     let s2 = s1;\\n  |         ^^ help: if this is intentional, prefix it with an underscore: `_s2`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\nerror[E0382]: borrow of moved value: `s1`\\n --\x3e src\\\\main.rs:4:27\\n  |\\n2 |     let s1 = String::from(\\"Hello\\");\\n  |         -- move occurs because `s1` has type `String`, which does not implement the `Copy` trait\\n3 |     let s2 = s1;\\n  |              -- value moved here\\n4 |     println!(\\"{} world!\\", s1);\\n  |                           ^^ value borrowed here after move\\n  |\\n  = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\\nhelp: consider cloning the value if the performance cost is acceptable\\n  |\\n3 |     let s2 = s1.clone();\\n  |                ++++++++\\n\\nFor more information about this error, try `rustc --explain E0382`.\\nwarning: `ownership` (bin \\"ownership\\") generated 1 warning\\nerror: could not compile `ownership` (bin \\"ownership\\") due to previous error; 1 warning emitted\\n```\\n\\n\u5982\u679c\u4f60\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u542c\u8bf4\u8fc7\u672f\u8bed **\u6d45\u62f7\u8d1d**\uff08shallow copy\uff09\u548c **\u6df1\u62f7\u8d1d**\uff08deep copy\uff09\uff0c\u90a3\u4e48\u62f7\u8d1d\u6307\u9488\u3001\u957f\u5ea6\u548c\u5bb9\u91cf\u800c\u4e0d\u62f7\u8d1d\u6570\u636e\u53ef\u80fd\u542c\u8d77\u6765\u50cf\u6d45\u62f7\u8d1d\u3002\u4e0d\u8fc7\u56e0\u4e3a Rust \u540c\u65f6\u4f7f\u7b2c\u4e00\u4e2a\u53d8\u91cf\u65e0\u6548\u4e86\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u88ab\u79f0\u4e3a **\u79fb\u52a8**\uff08move\uff09\uff0c\u800c\u4e0d\u662f\u6d45\u62f7\u8d1d\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u89e3\u8bfb\u4e3a `s1` \u88ab **\u79fb\u52a8** \u5230\u4e86 `s2` \u4e2d\u3002\u90a3\u4e48\u5177\u4f53\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![](./ownership-04.svg)\\n\\n<h5>\u56fe 4-4\uff1as1 \u65e0\u6548\u4e4b\u540e\u7684\u5185\u5b58\u8868\u73b0</h5>\\n\\n\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u6211\u4eec\u7684\u95ee\u9898\uff01\u56e0\u4e3a\u53ea\u6709 `s2` \u662f\u6709\u6548\u7684\uff0c\u5f53\u5176\u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u5b83\u5c31\u91ca\u653e\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u5b8c\u6bd5\u3002\\n\\n\u53e6\u5916\uff0c\u8fd9\u91cc\u8fd8\u9690\u542b\u4e86\u4e00\u4e2a\u8bbe\u8ba1\u9009\u62e9\uff1aRust \u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa\u6570\u636e\u7684 \u201c\u6df1\u62f7\u8d1d\u201d\u3002\u56e0\u6b64\uff0c\u4efb\u4f55 **\u81ea\u52a8** \u7684\u590d\u5236\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u5bf9\u8fd0\u884c\u65f6\u6027\u80fd\u5f71\u54cd\u8f83\u5c0f\u3002\\n\\n### \u53d8\u91cf\u4e0e\u6570\u636e\u4ea4\u4e92\u7684\u65b9\u5f0f\uff08\u4e8c\uff09\uff1a\u514b\u9686\\n\\n\u5982\u679c\u6211\u4eec \u786e\u5b9e \u9700\u8981\u6df1\u5ea6\u590d\u5236 String \u4e2d\u5806\u4e0a\u7684\u6570\u636e\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6808\u4e0a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53eb\u505a clone \u7684\u901a\u7528\u51fd\u6570\u3002\\n\\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 `clone` \u65b9\u6cd5\u7684\u4f8b\u5b50\uff1a\\n\\n```rust\\nfn main() {\\n    let s1 = String::from(\\"Hello\\");\\n    let s2 = s1.clone();\\n    println!(\\"s1 = {}, s2 = {}\\", s1, s2);\\n}\\n```\\n\\n\u8fd9\u6bb5\u4ee3\u7801\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5e76\u4e14\u660e\u786e\u4ea7\u751f\u56fe 4-3 \u4e2d\u884c\u4e3a\uff0c\u8fd9\u91cc\u5806\u4e0a\u7684\u6570\u636e \u786e\u5b9e \u88ab\u590d\u5236\u4e86\u3002\\n\\n\u5f53\u51fa\u73b0 `clone` \u8c03\u7528\u65f6\uff0c\u4f60\u77e5\u9053\u4e00\u4e9b\u7279\u5b9a\u7684\u4ee3\u7801\u88ab\u6267\u884c\u800c\u4e14\u8fd9\u4e9b\u4ee3\u7801\u53ef\u80fd\u76f8\u5f53\u6d88\u8017\u8d44\u6e90\u3002\u4f60\u5f88\u5bb9\u6613\u5bdf\u89c9\u5230\u4e00\u4e9b\u4e0d\u5bfb\u5e38\u7684\u4e8b\u60c5\u6b63\u5728\u53d1\u751f\u3002\\n\\n### \u53ea\u5728\u6808\u4e0a\u7684\u6570\u636e\uff1a\u62f7\u8d1d\\n\\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6ca1\u6709\u63d0\u5230\u7684\u5c0f\u7a8d\u95e8\u3002\u8fd9\u4e9b\u4ee3\u7801\u4f7f\u7528\u4e86\u6574\u578b\u5e76\u4e14\u662f\u6709\u6548\u7684\\n\\n```rust\\nfn main() {\\n    let x = 5;\\n    let y = x;\\n    println!(\\"x = {}, y = {}\\", x, y);\\n}\\n```\\n\\n\u4f46\u8fd9\u6bb5\u4ee3\u7801\u4f3c\u4e4e\u4e0e\u6211\u4eec\u521a\u521a\u5b66\u5230\u7684\u5185\u5bb9\u76f8\u77db\u76fe\uff1a\u6ca1\u6709\u8c03\u7528 `clone`\uff0c\u4e0d\u8fc7 `x` \u4f9d\u7136\u6709\u6548\u4e14\u6ca1\u6709\u88ab\u79fb\u52a8\u5230 `y` \u4e2d\u3002\\n\\n\u539f\u56e0\u662f\u50cf\u6574\u578b\u8fd9\u6837\u7684\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\u5927\u5c0f\u7684\u7c7b\u578b\u88ab\u6574\u4e2a\u5b58\u50a8\u5728\u6808\u4e0a\uff0c\u6240\u4ee5\u62f7\u8d1d\u5176\u5b9e\u9645\u7684\u503c\u662f\u5feb\u901f\u7684\u3002\u8fd9\u610f\u5473\u7740\u6ca1\u6709\u7406\u7531\u5728\u521b\u5efa\u53d8\u91cf `y` \u540e\u4f7f `x` \u65e0\u6548\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u91cc\u6ca1\u6709\u6df1\u6d45\u62f7\u8d1d\u7684\u533a\u522b\uff0c\u6240\u4ee5\u8fd9\u91cc\u8c03\u7528 `clone` \u5e76\u4e0d\u4f1a\u4e0e\u901a\u5e38\u7684\u6d45\u62f7\u8d1d\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u7ba1\u5b83\u3002\\n\\nRust \u6709\u4e00\u4e2a\u53eb\u505a `Copy trait` \u7684\u7279\u6b8a\u6807\u6ce8\uff0c\u53ef\u4ee5\u7528\u5728\u7c7b\u4f3c\u6574\u578b\u8fd9\u6837\u7684\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u7c7b\u578b\u4e0a\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 `Copy trait`\uff0c\u90a3\u4e48\u4e00\u4e2a\u65e7\u7684\u53d8\u91cf\u5728\u5c06\u5176\u8d4b\u503c\u7ed9\u5176\u4ed6\u53d8\u91cf\u540e\u4ecd\u7136\u53ef\u7528\u3002Rust \u4e0d\u5141\u8bb8\u81ea\u8eab\u6216\u5176\u4efb\u4f55\u90e8\u5206\u5b9e\u73b0\u4e86 `Drop trait` \u7684\u7c7b\u578b\u4f7f\u7528 `Copy trait`\u3002\u5982\u679c\u6211\u4eec\u5bf9\u5176\u503c\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u7c7b\u578b\u4f7f\u7528 `Copy` \u6807\u6ce8\uff0c\u5c06\u4f1a\u51fa\u73b0\u4e00\u4e2a\u7f16\u8bd1\u65f6\u9519\u8bef\u3002\\n\\n\u90a3\u4e48\u54ea\u4e9b\u7c7b\u578b\u5b9e\u73b0\u4e86 `Copy trait` \u5462\uff1f\u4f60\u53ef\u4ee5\u67e5\u770b\u7ed9\u5b9a\u7c7b\u578b\u7684\u6587\u6863\u6765\u786e\u8ba4\uff0c\u4e0d\u8fc7\u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u89c4\u5219\uff0c\u4efb\u4f55\u4e00\u7ec4\u7b80\u5355\u6807\u91cf\u503c\u7684\u7ec4\u5408\u90fd\u53ef\u4ee5\u5b9e\u73b0 `Copy`\uff0c\u4efb\u4f55\u4e0d\u9700\u8981\u5206\u914d\u5185\u5b58\u6216\u67d0\u79cd\u5f62\u5f0f\u8d44\u6e90\u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u5b9e\u73b0 `Copy` \u3002\u5982\u4e0b\u662f\u4e00\u4e9b `Copy` \u7684\u7c7b\u578b\uff1a\\n\\n- \u6240\u6709\u6574\u6570\u7c7b\u578b\uff0c\u6bd4\u5982 `u32`\u3002\\n- \u5e03\u5c14\u7c7b\u578b\uff0c`bool`\uff0c\u5b83\u7684\u503c\u662f `true` \u548c `false` \u3002\\n- \u6240\u6709\u6d6e\u70b9\u6570\u7c7b\u578b\uff0c\u6bd4\u5982 `f64`\u3002\\n- \u5b57\u7b26\u7c7b\u578b\uff0c`char`\u3002\\n- \u5143\u7ec4\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5305\u542b\u7684\u7c7b\u578b\u4e5f\u90fd\u5b9e\u73b0 `Copy` \u7684\u65f6\u5019\u3002\u6bd4\u5982\uff0c`(i32, i32)` \u5b9e\u73b0\u4e86 `Copy`\uff0c\u4f46 `(i32, String)` \u5c31\u6ca1\u6709\u3002\\n\\n### \u6240\u6709\u6743\u4e0e\u51fd\u6570\\n\\n\u5c06\u503c\u4f20\u9012\u7ed9\u51fd\u6570\u5728\u8bed\u4e49\u4e0a\u4e0e\u7ed9\u53d8\u91cf\u8d4b\u503c\u76f8\u4f3c\u3002\u5411\u51fd\u6570\u4f20\u9012\u503c\u53ef\u80fd\u4f1a\u79fb\u52a8\u6216\u8005\u590d\u5236\uff0c\u5c31\u50cf\u8d4b\u503c\u8bed\u53e5\u4e00\u6837\u3002\\n\\n```rust\\nfn main() {\\n    let s = String::from(\\"Hello ownership\\");\\n    takes_ownership(s);\\n\\n    let i = 5;\\n    makes_copy(i);\\n}\\n\\nfn takes_ownership(some_string: String) {\\n    println!(\\"{}\\", some_string);\\n}\\n\\nfn makes_copy(some_integer: i32) {\\n    println!(\\"{}\\", some_integer);\\n}\\n```\\n\\n\u5f53\u5c1d\u8bd5\u5728\u8c03\u7528 `takes_ownership` \u540e\u4f7f\u7528 `s` \u65f6\uff0cRust \u4f1a\u629b\u51fa\u4e00\u4e2a\u7f16\u8bd1\u65f6\u9519\u8bef\u3002\u8fd9\u4e9b\u9759\u6001\u68c0\u67e5\u4f7f\u6211\u4eec\u514d\u4e8e\u72af\u9519\u3002\u8bd5\u8bd5\u5728 `main` \u51fd\u6570\u4e2d\u6dfb\u52a0\u4f7f\u7528 `s` \u548c `x` \u7684\u4ee3\u7801\u6765\u770b\u770b\u54ea\u91cc\u80fd\u4f7f\u7528\u4ed6\u4eec\uff0c\u4ee5\u53ca\u6240\u6709\u6743\u89c4\u5219\u4f1a\u5728\u54ea\u91cc\u963b\u6b62\u6211\u4eec\u8fd9\u4e48\u505a\u3002\\n\\n```rust\\nfn main() {\\n    let s = String::from(\\"Hello ownership\\");\\n    takes_ownership(s);\\n\\n    println!(\\"s = {}\\", s);\\n\\n    let i = 5;\\n    makes_copy(i);\\n    println!(\\"i = {}\\", i);\\n}\\n\\nfn takes_ownership(some_string: String) {\\n    println!(\\"{}\\", some_string);\\n}\\n\\nfn makes_copy(some_integer: i32) {\\n    println!(\\"{}\\", some_integer);\\n}\\n```\\n\\n\u5982\u679c\u5728 `takes_ownership` \u51fd\u6570\u8c03\u7528\u540e\u6253\u5370 `s`\uff0c\u5c06\u4f1a\u62a5\u9519\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\ownership> cargo run\\n   Compiling ownership v0.1.0 (E:\\\\github\\\\rust-projects\\\\ownership)\\nerror[E0382]: borrow of moved value: `s`\\n  --\x3e src\\\\main.rs:5:24\\n   |\\n2  |     let s = String::from(\\"Hello ownership\\");\\n   |         - move occurs because `s` has type `String`, which does not implement the `Copy` trait\\n3  |     takes_ownership(s);\\n   |                     - value moved here\\n4  |\\n5  |     println!(\\"s = {}\\", s);\\n   |                        ^ value borrowed here after move\\n   |\\nnote: consider changing this parameter type in function `takes_ownership` to borrow instead if owning the value isn\'t necessary\\n  --\x3e src\\\\main.rs:12:33\\n   |\\n12 | fn takes_ownership(some_string: String) {\\n   |    ---------------              ^^^^^^ this parameter takes ownership of the value\\n   |    |\\n   |    in this function\\n   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\\nhelp: consider cloning the value if the performance cost is acceptable\\n   |\\n3  |     takes_ownership(s.clone());\\n   |                      ++++++++\\n\\nFor more information about this error, try `rustc --explain E0382`.\\nerror: could not compile `ownership` (bin \\"ownership\\") due to previous error\\n```\\n\\n\u5982\u679c\u5728 `takes_ownership` \u51fd\u6570\u8c03\u7528\u4e2d\u4f20\u5165\u7684\u662f `s.clone()` \u540e\u7684\u7ed3\u679c\uff0c\u8fdb\u884c\u6df1\u514b\u9686\uff0c\u90a3\u4e48 `s` \u5c06\u4e0d\u4f1a\u5728 `takes_ownership` \u8c03\u7528\u540e\u53d1\u751f\u79fb\u52a8\u3002\\n\\n```rust\\nfn main() {\\n    let s = String::from(\\"Hello ownership\\");\\n    takes_ownership(s.clone());\\n\\n    println!(\\"s = {}\\", s);\\n\\n    let i = 5;\\n    makes_copy(i);\\n    println!(\\"i = {}\\", i);\\n}\\n\\nfn takes_ownership(some_string: String) {\\n    println!(\\"{}\\", some_string);\\n}\\n\\nfn makes_copy(some_integer: i32) {\\n    println!(\\"{}\\", some_integer);\\n}\\n```\\n\\n### \u8fd4\u56de\u503c\u4e0e\u4f5c\u7528\u57df\\n\\n\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u8f6c\u79fb\u6240\u6709\u6743\u3002\\n\\n```rust\\nfn main() {\\n  let s1 = gives_ownership();         // gives_ownership \u5c06\u8fd4\u56de\u503c\\n                                      // \u79fb\u7ed9 s1\\n\\n  let s2 = String::from(\\"hello\\");     // s2 \u8fdb\u5165\u4f5c\u7528\u57df\\n\\n  let s3 = takes_and_gives_back(s2);  // s2 \u88ab\u79fb\u52a8\u5230\\n                                      // takes_and_gives_back \u4e2d,\\n                                      // \u5b83\u4e5f\u5c06\u8fd4\u56de\u503c\u79fb\u7ed9 s3\\n} // \u8fd9\u91cc, s3 \u79fb\u51fa\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\u3002s2 \u4e5f\u79fb\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u5df2\u88ab\u79fb\u8d70\uff0c\\n  // \u6240\u4ee5\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u53d1\u751f\u3002s1 \u79fb\u51fa\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\\n\\nfn gives_ownership() -> String {           // gives_ownership \u5c06\u8fd4\u56de\u503c\u79fb\u52a8\u7ed9\\n                                           // \u8c03\u7528\u5b83\u7684\u51fd\u6570\\n\\n  let some_string = String::from(\\"yours\\"); // some_string \u8fdb\u5165\u4f5c\u7528\u57df\\n\\n  some_string                              // \u8fd4\u56de some_string \u5e76\u79fb\u51fa\u7ed9\u8c03\u7528\u7684\u51fd\u6570\\n}\\n\\n// takes_and_gives_back \u5c06\u4f20\u5165\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u8be5\u503c\\nfn takes_and_gives_back(a_string: String) -> String { // a_string \u8fdb\u5165\u4f5c\u7528\u57df\\n\\n  a_string  // \u8fd4\u56de a_string \u5e76\u79fb\u51fa\u7ed9\u8c03\u7528\u7684\u51fd\u6570\\n}\\n```\\n\\n\u53d8\u91cf\u7684\u6240\u6709\u6743\u603b\u662f\u9075\u5faa\u76f8\u540c\u7684\u6a21\u5f0f\uff1a\u5c06\u503c\u8d4b\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\u65f6\u79fb\u52a8\u5b83\u3002\u5f53\u6301\u6709\u5806\u4e2d\u6570\u636e\u503c\u7684\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u5176\u503c\u5c06\u901a\u8fc7 `drop` \u88ab\u6e05\u7406\u6389\uff0c\u9664\u975e\u6570\u636e\u88ab\u79fb\u52a8\u4e3a\u53e6\u4e00\u4e2a\u53d8\u91cf\u6240\u6709\u3002\\n\\n\u5728\u6bcf\u4e00\u4e2a\u51fd\u6570\u4e2d\u90fd\u83b7\u53d6\u6240\u6709\u6743\u5e76\u63a5\u7740\u8fd4\u56de\u6240\u6709\u6743\u6709\u4e9b\u5570\u55e6\u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u51fd\u6570\u4f7f\u7528\u4e00\u4e2a\u503c\u4f46\u4e0d\u83b7\u53d6\u6240\u6709\u6743\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5982\u679c\u6211\u4eec\u8fd8\u8981\u63a5\u7740\u4f7f\u7528\u5b83\u7684\u8bdd\uff0c\u6bcf\u6b21\u90fd\u4f20\u8fdb\u53bb\u518d\u8fd4\u56de\u6765\u5c31\u6709\u70b9\u70e6\u4eba\u4e86\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u60f3\u8fd4\u56de\u51fd\u6570\u4f53\u4e2d\u4ea7\u751f\u7684\u4e00\u4e9b\u6570\u636e\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5143\u7ec4\u6765\u8fd4\u56de\u591a\u4e2a\u503c:\\n\\n```rust\\nfn main() {\\n    let s1 = String::from(\\"hello\\");\\n\\n    let (s2, len) = calculate_length(s1);\\n\\n    println!(\\"The length of \'{}\' is {}.\\", s2, len);\\n}\\n\\nfn calculate_length(s: String) -> (String, usize) {\\n    let length = s.len(); // len() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\\n\\n    (s, length)\\n}\\n```\\n\\n\u4f46\u662f\u8fd9\u672a\u514d\u6709\u4e9b\u5f62\u5f0f\u4e3b\u4e49\uff0c\u800c\u4e14\u8fd9\u79cd\u573a\u666f\u5e94\u8be5\u5f88\u5e38\u89c1\u3002\u5e78\u8fd0\u7684\u662f\uff0cRust \u5bf9\u6b64\u63d0\u4f9b\u4e86\u4e00\u4e2a\u529f\u80fd\uff0c\u53eb\u505a **\u5f15\u7528**\uff08references\uff09\u3002\\n\\n### \u95ee\u7b54\\n\\n1.  Rust \u7684\u6240\u6709\u6743\u662f\u5426\u4e0e\u5176\u5b58\u50a8\u5f62\u5f0f\u6709\u5173?\\n\\n    <details>\\n\\n    <summary>\u70b9\u51fb\u67e5\u770b\u7b54\u6848</summary>\\n    \u5728Rust\u4e2d\uff0c\u6240\u6709\u6743\uff08ownership\uff09\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5b83\u4e0e\u53d8\u91cf\u7ed1\u5b9a\u548c\u751f\u547d\u5468\u671f\u5bc6\u5207\u76f8\u5173\u3002\u7136\u800c\uff0c\u6240\u6709\u6743\u5e76\u4e0d\u76f4\u63a5\u4e0e\u6570\u636e\u662f\u5426\u5b58\u50a8\u5728\u6808\u4e0a\u6216\u5806\u4e0a\u6709\u5173\u3002\\n\\n    \u5728 Rust \u4e2d\uff0c\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u6240\u6709\u6743\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u62e5\u6709\u67d0\u4e2a\u503c\u7684\u6240\u6709\u6743\u3002\u4e00\u65e6\u53d8\u91cf\u79bb\u5f00\u5176\u4f5c\u7528\u57df\uff0c\u5176\u6240\u6709\u6743\u5c31\u4f1a\u5931\u6548\uff0c\u8be5\u503c\u5c31\u4f1a\u53d8\u6210\u65e0\u6548\u7684\u3002\\n\\n    \u5bf9\u4e8e\u5728\u6808\u4e0a\u5b58\u50a8\u7684\u6570\u636e\uff0c\u6240\u6709\u6743\u901a\u5e38\u4e0e\u51fd\u6570\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u7ed1\u5b9a\u3002\u5f53\u51fd\u6570\u6267\u884c\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u88ab\u521b\u5efa\u5e76\u5b58\u50a8\u5728\u6808\u4e0a\uff0c\u5b83\u4eec\u5728\u51fd\u6570\u7684\u4f5c\u7528\u57df\u5185\u62e5\u6709\u5176\u503c\u3002\u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u5e76\u8fd4\u56de\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u7684\u6240\u6709\u6743\u4f1a\u5931\u6548\uff0c\u5b83\u4eec\u7684\u503c\u4f1a\u88ab\u9500\u6bc1\u3002\\n\\n    \u4e0e\u6b64\u7c7b\u4f3c\uff0c\u5806\u4e0a\u7684\u6570\u636e\u4e5f\u5177\u6709\u6240\u6709\u6743\uff0c\u4f46\u8be5\u6240\u6709\u6743\u662f\u901a\u8fc7\u5f15\u7528\u548c\u751f\u547d\u5468\u671f\u6765\u7ba1\u7406\u7684\u3002\u5bf9\u4e8e\u901a\u8fc7\u5f15\u7528\u5206\u914d\u5728\u5806\u4e0a\u7684\u6570\u636e\uff0c\u5176\u6240\u6709\u6743\u4e0e\u5f15\u7528\u4e00\u8d77\u5b58\u5728\uff0c\u53ea\u8981\u5f15\u7528\u4ecd\u7136\u6709\u6548\uff0c\u8be5\u6570\u636e\u7684\u6240\u6709\u6743\u5c31\u4e0d\u4f1a\u5931\u6548\u3002\u4e00\u65e6\u5f15\u7528\u5931\u6548\u6216\u88ab\u89e3\u5f15\u7528\uff0c\u8be5\u6570\u636e\u7684\u6240\u6709\u6743\u5c31\u4f1a\u5931\u6548\uff0c\u76f8\u5e94\u7684\u5185\u5b58\u5c31\u4f1a\u53d8\u6210\u65e0\u6548\u7684\u3002\\n\\n    \u56e0\u6b64\uff0c\u5c3d\u7ba1\u5728 Rust \u4e2d\u6570\u636e\u7684\u5b58\u50a8\u4f4d\u7f6e\uff08\u6808\u6216\u5806\uff09\u4e0e\u5176\u6240\u6709\u6743\u7684\u7ba1\u7406\u65b9\u5f0f\u6709\u5173\uff0c\u4f46\u5b83\u4eec\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\u3002\u6570\u636e\u7684\u5b58\u50a8\u4f4d\u7f6e\u53d6\u51b3\u4e8e\u5176\u5206\u914d\u65b9\u5f0f\uff08\u9759\u6001\u5206\u914d\u6216\u52a8\u6001\u5206\u914d\uff09\uff0c\u800c\u6570\u636e\u7684\u6240\u6709\u6743\u5219\u53d6\u51b3\u4e8e\u5176\u7ed1\u5b9a\u65b9\u5f0f\u548c\u751f\u547d\u5468\u671f\u3002\\n\\n    </details>\\n\\n## \u5f15\u7528\u4e0e\u501f\u7528\\n\\n```rust\\nfn main() {\\n    let s1 = String::from(\\"hello\\");\\n\\n    let (s2, len) = calculate_length(s1);\\n\\n    println!(\\"s1 = {}\\", s1);\\n\\n    println!(\\"The length of \'{}\' is {}.\\", s2, len);\\n}\\n\\nfn calculate_length(s: String) -> (String, usize) {\\n    let length = s.len(); // len() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\\n\\n    (s, length)\\n}\\n```\\n\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u6211\u4eec\u5728 `calculate_length(s1)` \u8c03\u7528\u540e\u6253\u5370 `s1`\uff0c\u7531\u4e8e\u51fd\u6570\u8d4b\u503c\u5c06\u4f1a\u4f7f\u5f97\u53c2\u6570\u53d1\u751f\u6240\u6709\u6743\u79fb\u52a8\uff0c\u540e\u7eed\u4f7f\u7528 `s1` \u65f6\u5c06\u53d1\u751f\u9519\u8bef\uff0c\u5982\u4f55\u907f\u514d `s1` \u79fb\u52a8\u5462\uff1f\\n\\n\u4e0b\u9762\u662f\u5982\u4f55\u5b9a\u4e49\u5e76\u4f7f\u7528\u4e00\u4e2a\uff08\u65b0\u7684\uff09`calculate_length` \u51fd\u6570\uff0c\u5b83\u4ee5\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\u800c\u4e0d\u662f\u83b7\u53d6\u503c\u7684\u6240\u6709\u6743:\\n\\n```rust\\nfn main() {\\n    let s = String::from(\\"hello\\");\\n\\n    let len = calculate_length(&s);\\n\\n    println!(\\"The length of \'{}\' is {}.\\", s, len);\\n}\\n\\nfn calculate_length(s: &String) -> usize {\\n    s.len() // len() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\\n}\\n```\\n\\n\u9996\u5148\uff0c\u6ce8\u610f\u53d8\u91cf\u58f0\u660e\u548c\u51fd\u6570\u8fd4\u56de\u503c\u4e2d\u7684\u6240\u6709\u5143\u7ec4\u4ee3\u7801\u90fd\u6d88\u5931\u4e86\u3002\u5176\u6b21\uff0c\u6ce8\u610f\u6211\u4eec\u4f20\u9012 `&s1` \u7ed9 `calculate_length`\uff0c\u540c\u65f6\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u6211\u4eec\u83b7\u53d6 `&String` \u800c\u4e0d\u662f `String`\u3002\\n\\n\u8fd9\u4e9b `&` \u7b26\u53f7\u5c31\u662f **\u5f15\u7528**\uff0c\u5b83\u4eec\u5141\u8bb8\u4f60\u4f7f\u7528\u503c\u4f46\u4e0d\u83b7\u53d6\u5176\u6240\u6709\u6743\u3002\\n\\n![](./ownership-05.svg)\\n\\n<h5>\u56fe 4-5\uff1a&String s \u6307\u5411 String s1 \u793a\u610f\u56fe</h5>\\n\\n\u4ed4\u7ec6\u770b\u770b\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\\n\\n```rust\\n    let s1 = String::from(\\"hello\\");\\n\\n    let len = calculate_length(&s1);\\n```\\n\\n`&s1` \u8bed\u6cd5\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a **\u6307\u5411** \u503c `s1` \u7684\u5f15\u7528\uff0c\u4f46\u662f\u5e76\u4e0d\u62e5\u6709\u5b83\u3002\u56e0\u4e3a\u5e76\u4e0d\u62e5\u6709\u8fd9\u4e2a\u503c\uff0c\u6240\u4ee5\u5f53\u5f15\u7528\u505c\u6b62\u4f7f\u7528\u65f6\uff0c\u5b83\u6240\u6307\u5411\u7684\u503c\u4e5f\u4e0d\u4f1a\u88ab\u4e22\u5f03\u3002\\n\\n\u540c\u7406\uff0c\u51fd\u6570\u7b7e\u540d\u4f7f\u7528 `&` \u6765\u8868\u660e\u53c2\u6570 `s` \u7684\u7c7b\u578b\u662f\u4e00\u4e2a\u5f15\u7528\u3002\u8ba9\u6211\u4eec\u589e\u52a0\u4e00\u4e9b\u89e3\u91ca\u6027\u7684\u6ce8\u91ca\uff1a\\n\\n```rust\\nfn calculate_length(s: &String) -> usize { // s \u662f\u5bf9 String \u7684\u5f15\u7528\\n    s.len()\\n} // \u8fd9\u91cc\uff0cs \u79bb\u5f00\u4e86\u4f5c\u7528\u57df\u3002\u4f46\u56e0\u4e3a\u5b83\u5e76\u4e0d\u62e5\u6709\u5f15\u7528\u503c\u7684\u6240\u6709\u6743\uff0c\\n  // \u6240\u4ee5\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u53d1\u751f\\n```\\n\\n\u53d8\u91cf `s` \u6709\u6548\u7684\u4f5c\u7528\u57df\u4e0e\u51fd\u6570\u53c2\u6570\u7684\u4f5c\u7528\u57df\u4e00\u6837\uff0c\u4e0d\u8fc7\u5f53\u5f15\u7528\u505c\u6b62\u4f7f\u7528\u65f6\u5e76\u4e0d\u4e22\u5f03\u5b83\u6307\u5411\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6240\u6709\u6743\u3002\u5f53\u51fd\u6570\u4f7f\u7528\u5f15\u7528\u800c\u4e0d\u662f\u5b9e\u9645\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u65e0\u9700\u8fd4\u56de\u503c\u6765\u4ea4\u8fd8\u6240\u6709\u6743\uff0c\u56e0\u4e3a\u5c31\u4e0d\u66fe\u62e5\u6709\u6240\u6709\u6743\u3002\\n\\n\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u5f15\u7528\u7684\u884c\u4e3a\u79f0\u4e3a **\u501f\u7528**\uff08borrowing\uff09\u3002\u6b63\u5982\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u62e5\u6709\u67d0\u6837\u4e1c\u897f\uff0c\u4f60\u53ef\u4ee5\u4ece\u4ed6\u90a3\u91cc\u501f\u6765\u3002\u5f53\u4f60\u4f7f\u7528\u5b8c\u6bd5\uff0c\u5fc5\u987b\u8fd8\u56de\u53bb\u3002\\n\\n\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u4fee\u6539\u501f\u7528\u7684\u53d8\u91cf\u5462\uff1f\\n\\n```rust\\nfn main() {\\n    let s = String::from(\\"hello\\");\\n\\n    change(&s);\\n}\\n\\nfn change(some_string: &String) {\\n    some_string.push_str(\\", world\\");\\n}\\n```\\n\\n\u8fd9\u91cc\u5c06\u53d1\u751f\u4e00\u4e2a\u9519\u8bef\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\ownership> cargo run\\n   Compiling ownership v0.1.0 (E:\\\\github\\\\rust-projects\\\\ownership)\\nerror[E0596]: cannot borrow `*some_string` as mutable, as it is behind a `&` reference\\n --\x3e src\\\\main.rs:8:5\\n  |\\n8 |     some_string.push_str(\\", world\\");\\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `some_string` is a `&` reference, so the data it refers to cannot be borrowed as mutable\\n  |\\nhelp: consider changing this to be a mutable reference\\n  |\\n7 | fn change(some_string: &mut String) {\\n  |                         +++\\n\\nFor more information about this error, try `rustc --explain E0596`.\\nerror: could not compile `ownership` (bin \\"ownership\\") due to previous error\\n```\\n\\n\u6b63\u5982\u53d8\u91cf\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u4e0d\u53ef\u53d8\u7684\u4e00\u6837\uff0c\u5f15\u7528\u4e5f\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u5f15\u7528\u4fee\u6539\u5185\u5bb9\u3002\\n\\n### \u53ef\u53d8\u5f15\u7528\\n\\n\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5c0f\u8c03\u6574\u5c31\u53ef\u4fee\u590d\u4e0a\u9762\u7684\u9519\u8bef\uff1a\\n\\n```rust\\nfn main() {\\n    let mut s = String::from(\\"hello\\");\\n\\n    change(&mut s);\\n}\\n\\nfn change(some_string: &mut String) {\\n    some_string.push_str(\\", world\\");\\n}\\n```\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u5c06 `s` \u6539\u4e3a `mut`\u3002\u7136\u540e\u5fc5\u987b\u5728\u8c03\u7528 `change` \u51fd\u6570\u7684\u5730\u65b9\u521b\u5efa\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528 `&mut s`\uff0c\u5e76\u66f4\u65b0\u51fd\u6570\u7b7e\u540d\u4ee5\u63a5\u53d7\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528 `some_string: &mut String`\u3002\u8fd9\u5c31\u975e\u5e38\u6e05\u695a\u5730\u8868\u660e\uff0c`change` \u51fd\u6570\u5c06\u6539\u53d8\u5b83\u6240\u501f\u7528\u7684\u503c\u3002\\n\\n\u4e0d\u8fc7\u53ef\u53d8\u5f15\u7528\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u9650\u5236\uff1a\u5728\u540c\u4e00\u65f6\u95f4\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u5bf9\u67d0\u4e00\u7279\u5b9a\u6570\u636e\u7684\u53ef\u53d8\u5f15\u7528\u3002\u5c1d\u8bd5\u521b\u5efa\u4e24\u4e2a\u53ef\u53d8\u5f15\u7528\u7684\u4ee3\u7801\u5c06\u4f1a\u5931\u8d25\uff1a\\n\\n```rust\\nfn main() {\\n    let mut s = String::from(\\"hello\\");\\n\\n    let r1 = &mut s;\\n    let r2 = &mut s;\\n\\n    println!(\\"r1 is {}, r2 is {}\\", r1, r2);\\n}\\n```\\n\\n\u9519\u8bef\u5982\u4e0b\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\ownership> cargo run\\n   Compiling ownership v0.1.0 (E:\\\\github\\\\rust-projects\\\\ownership)\\nerror[E0499]: cannot borrow `s` as mutable more than once at a time\\n --\x3e src\\\\main.rs:5:14\\n  |\\n4 |     let r1 = &mut s;\\n  |              ------ first mutable borrow occurs here\\n5 |     let r2 = &mut s;\\n  |              ^^^^^^ second mutable borrow occurs here\\n6 |\\n7 |     println!(\\"r1 is {}, r2 is {}\\", r1, r2);\\n  |                                    -- first borrow later used here\\n\\nFor more information about this error, try `rustc --explain E0499`.\\nerror: could not compile `ownership` (bin \\"ownership\\") due to previous error\\n```\\n\\n\u8fd9\u4e2a\u62a5\u9519\u8bf4\u8fd9\u6bb5\u4ee3\u7801\u662f\u65e0\u6548\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u591a\u6b21\u5c06 `s` \u4f5c\u4e3a\u53ef\u53d8\u53d8\u91cf\u501f\u7528\u3002\u7b2c\u4e00\u4e2a\u53ef\u53d8\u7684\u501f\u5165\u5728 `r1` \u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u6301\u7eed\u5230\u5728 `println!` \u4e2d\u4f7f\u7528\u5b83\uff0c\u4f46\u662f\u5728\u90a3\u4e2a\u53ef\u53d8\u5f15\u7528\u7684\u521b\u5efa\u548c\u5b83\u7684\u4f7f\u7528\u4e4b\u95f4\uff0c\u6211\u4eec\u53c8\u5c1d\u8bd5\u5728 `r2` \u4e2d\u521b\u5efa\u53e6\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c\u5b83\u501f\u7528\u4e86\u4e0e `r1` \u76f8\u540c\u7684\u6570\u636e\u3002\\n\\n\u9632\u6b62\u540c\u4e00\u65f6\u95f4\u5bf9\u540c\u4e00\u6570\u636e\u8fdb\u884c\u591a\u4e2a\u53ef\u53d8\u5f15\u7528\u7684\u9650\u5236\u5141\u8bb8\u53ef\u53d8\u6027\uff0c\u4e0d\u8fc7\u662f\u4ee5\u4e00\u79cd\u53d7\u9650\u5236\u7684\u65b9\u5f0f\u5141\u8bb8\u3002\\n\\n\u8fd9\u4e2a\u9650\u5236\u7684\u597d\u5904\u662f Rust \u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u5c31\u907f\u514d\u6570\u636e\u7ade\u4e89\u3002**\u6570\u636e\u7ade\u4e89**\uff08data race\uff09\u7c7b\u4f3c\u4e8e\u7ade\u6001\u6761\u4ef6\uff0c\u5b83\u7531\u8fd9\u4e09\u4e2a\u884c\u4e3a\u9020\u6210\uff1a\\n\\n- \u4e24\u4e2a\u6216\u66f4\u591a\u6307\u9488\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u6570\u636e\u3002\\n- \u81f3\u5c11\u6709\u4e00\u4e2a\u6307\u9488\u88ab\u7528\u6765\u5199\u5165\u6570\u636e\u3002\\n- \u6ca1\u6709\u540c\u6b65\u6570\u636e\u8bbf\u95ee\u7684\u673a\u5236\u3002\\n\\n\u6570\u636e\u7ade\u4e89\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u96be\u4ee5\u5728\u8fd0\u884c\u65f6\u8ffd\u8e2a\uff0c\u5e76\u4e14\u96be\u4ee5\u8bca\u65ad\u548c\u4fee\u590d\uff1bRust \u907f\u514d\u4e86\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\uff0c\u56e0\u4e3a\u5b83\u751a\u81f3\u4e0d\u4f1a\u7f16\u8bd1\u5b58\u5728\u6570\u636e\u7ade\u4e89\u7684\u4ee3\u7801\uff01\\n\\n\u4e00\u5982\u65e2\u5f80\uff0c\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u4ee5\u5141\u8bb8\u62e5\u6709\u591a\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c\u53ea\u662f\u4e0d\u80fd **\u540c\u65f6** \u62e5\u6709:\\n\\n```rust\\nfn main() {\\n    let mut s = String::from(\\"hello\\");\\n\\n    {\\n        let r1 = &mut s;\\n        println!(\\"r1 is {}\\", r1);\\n    } // r1 \u5728\u8fd9\u91cc\u79bb\u5f00\u4e86\u4f5c\u7528\u57df\uff0c\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5f15\u7528\\n\\n    let r2 = &mut s;\\n\\n    println!(\\"r2 is {}\\", r2);\\n}\\n```\\n\\n\u7c7b\u4f3c\u7684\u89c4\u5219\u4e5f\u5b58\u5728\u4e8e\u540c\u65f6\u4f7f\u7528\u53ef\u53d8\u4e0e\u4e0d\u53ef\u53d8\u5f15\u7528\u4e2d\u3002\u8fd9\u4e9b\u4ee3\u7801\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u9519\u8bef\uff1a\\n\\n```rust\\nfn main() {\\n    let mut s = String::from(\\"hello\\");\\n\\n    let r1 = &s; // \u6ca1\u95ee\u9898\\n    let r2 = &s; // \u6ca1\u95ee\u9898\\n    println!(\\"{} and {}\\", r1, r2);\\n    // \u6b64\u4f4d\u7f6e\u4e4b\u540e r1 \u548c r2 \u4e0d\u518d\u4f7f\u7528\\n\\n    let r3 = &mut s; // \u6ca1\u95ee\u9898\\n    println!(\\"{}\\", r3);\\n}\\n```\\n\\n\u4e0d\u53ef\u53d8\u5f15\u7528 `r1` \u548c `r2` \u7684\u4f5c\u7528\u57df\u5728 `println!` \u6700\u540e\u4e00\u6b21\u4f7f\u7528\u4e4b\u540e\u7ed3\u675f\uff0c\u8fd9\u4e5f\u662f\u521b\u5efa\u53ef\u53d8\u5f15\u7528 `r3` \u7684\u5730\u65b9\u3002\u5b83\u4eec\u7684\u4f5c\u7528\u57df\u6ca1\u6709\u91cd\u53e0\uff0c\u6240\u4ee5\u4ee3\u7801\u662f\u53ef\u4ee5\u7f16\u8bd1\u7684\u3002\u7f16\u8bd1\u5668\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u4e4b\u524d\u5224\u65ad\u4e0d\u518d\u4f7f\u7528\u7684\u5f15\u7528\u7684\u80fd\u529b\u88ab\u79f0\u4e3a\u975e\u8bcd\u6cd5\u4f5c\u7528\u57df\u751f\u547d\u5468\u671f\uff08Non-Lexical Lifetimes\uff0c\u7b80\u79f0 NLL\uff09\u3002\\n\\n### \u60ac\u5782\u5f15\u7528\\n\\n\u5728\u5177\u6709\u6307\u9488\u7684\u8bed\u8a00\u4e2d\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u91ca\u653e\u5185\u5b58\u65f6\u4fdd\u7559\u6307\u5411\u5b83\u7684\u6307\u9488\u800c\u9519\u8bef\u5730\u751f\u6210\u4e00\u4e2a **\u60ac\u5782\u6307\u9488**\uff08dangling pointer\uff09\uff0c\u6240\u8c13\u60ac\u5782\u6307\u9488\u662f\u5176\u6307\u5411\u7684\u5185\u5b58\u53ef\u80fd\u5df2\u7ecf\u88ab\u5206\u914d\u7ed9\u5176\u5b83\u6301\u6709\u8005\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728 Rust \u4e2d\u7f16\u8bd1\u5668\u786e\u4fdd\u5f15\u7528\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u53d8\u6210\u60ac\u5782\u72b6\u6001\uff1a\u5f53\u4f60\u62e5\u6709\u4e00\u4e9b\u6570\u636e\u7684\u5f15\u7528\uff0c\u7f16\u8bd1\u5668\u786e\u4fdd\u6570\u636e\u4e0d\u4f1a\u5728\u5176\u5f15\u7528\u4e4b\u524d\u79bb\u5f00\u4f5c\u7528\u57df\u3002\\n\\n\u8ba9\u6211\u4eec\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u60ac\u5782\u5f15\u7528\uff0cRust \u4f1a\u901a\u8fc7\u4e00\u4e2a\u7f16\u8bd1\u65f6\u9519\u8bef\u6765\u907f\u514d\uff1a\\n\\n```rust\\nfn main() {\\n    let reference = dangle();\\n}\\n\\nfn dangle() -> &String {\\n    let s = String::from(\\"hello\\");\\n\\n    &s\\n}\\n```\\n\\n\u8fd9\u91cc\u7684\u9519\u8bef\u662f\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\ownership> cargo run\\n   Compiling ownership v0.1.0 (E:\\\\github\\\\rust-projects\\\\ownership)\\nerror[E0106]: missing lifetime specifier\\n --\x3e src\\\\main.rs:5:16\\n  |\\n5 | fn dangle() -> &String {\\n  |                ^ expected named lifetime parameter\\n  |\\n  = help: this function\'s return type contains a borrowed value, but there is no value for it to be borrowed from\\nhelp: consider using the `\'static` lifetime\\n  |\\n5 | fn dangle() -> &\'static String {\\n  |                 +++++++\\n\\nFor more information about this error, try `rustc --explain E0106`.\\nerror: could not compile `ownership` (bin \\"ownership\\") due to previous error\\n```\\n\\n\u9519\u8bef\u4fe1\u606f\u5f15\u7528\u4e86\u4e00\u4e2a\u6211\u4eec\u8fd8\u672a\u4ecb\u7ecd\u7684\u529f\u80fd\uff1a\u751f\u547d\u5468\u671f\uff08lifetimes\uff09\u3002\\n\\n\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u6211\u4eec\u7684 `dangle` \u4ee3\u7801\u7684\u6bcf\u4e00\u6b65\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\uff1a\\n\\n```rust\\nfn dangle() -> &String {\\n    // dangle \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5f15\u7528\\n    let s = String::from(\\"hello\\"); // s \u662f\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\\n\\n    &s // \u8fd4\u56de\u5b57\u7b26\u4e32 s \u7684\u5f15\u7528\\n} // \u8fd9\u91cc s \u79bb\u5f00\u4f5c\u7528\u57df\u5e76\u88ab\u4e22\u5f03\u3002\u5176\u5185\u5b58\u88ab\u91ca\u653e\u3002\u5371\u9669\\n```\\n\\n\u56e0\u4e3a `s` \u662f\u5728 `dangle` \u51fd\u6570\u5185\u521b\u5efa\u7684\uff0c\u5f53 `dangle` \u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6bd5\u540e\uff0c`s` \u5c06\u88ab\u91ca\u653e\u3002\u4e0d\u8fc7\u6211\u4eec\u5c1d\u8bd5\u8fd4\u56de\u5b83\u7684\u5f15\u7528\u3002\u8fd9\u610f\u5473\u7740\u8fd9\u4e2a\u5f15\u7528\u4f1a\u6307\u5411\u4e00\u4e2a\u65e0\u6548\u7684 `String`\uff0c\u8fd9\u53ef\u4e0d\u5bf9\uff01Rust \u4e0d\u4f1a\u5141\u8bb8\u6211\u4eec\u8fd9\u4e48\u505a\u3002\\n\\n\u8fd9\u91cc\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u76f4\u63a5\u8fd4\u56de `String`\uff1a\\n\\n```rust\\nfn dangle() -> String {\\n  String::from(\\"hello\\")\\n}\\n```\\n\\n### \u5f15\u7528\u7684\u89c4\u5219\\n\\n\u8ba9\u6211\u4eec\u6982\u62ec\u4e00\u4e0b\u4e4b\u524d\u5bf9\u5f15\u7528\u7684\u8ba8\u8bba\uff1a\\n\\n- \u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\uff0c**\u8981\u4e48** \u53ea\u80fd\u6709\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c**\u8981\u4e48** \u53ea\u80fd\u6709\u591a\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528\u3002\\n- \u5f15\u7528\u5fc5\u987b\u603b\u662f\u6709\u6548\u7684\u3002\\n\\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u770b\u53e6\u4e00\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5f15\u7528\uff1aslice\u3002\\n\\n## \u5207\u7247 slice"},{"id":"/2023/10/09/rust-structure","metadata":{"permalink":"/my-website/blog/2023/10/09/rust-structure","source":"@site/blog/2023-10-09-rust-structure/index.md","title":"Rust \u7ed3\u6784\u4f53","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-09T00:00:00.000Z","formattedDate":"2023\u5e7410\u67089\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u7ed3\u6784\u4f53","permalink":"/my-website/blog/tags/\u7ed3\u6784\u4f53"},{"label":"\u5165\u95e8","permalink":"/my-website/blog/tags/\u5165\u95e8"}],"readingTime":0.28,"hasTruncateMarker":false,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u7ed3\u6784\u4f53","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u7ed3\u6784\u4f53","\u5165\u95e8"],"date":"2023-10-09T00:00:00.000Z","time":56580},"prevItem":{"title":"Rust \u6240\u6709\u6743","permalink":"/my-website/blog/2023/10/09/rust-ownership"},"nextItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41","permalink":"/my-website/blog/2023/10/08/control-flow"}},"content":"## \u5b9a\u4e49\u548c\u4e3e\u4f8b\u8bf4\u660e\u7ed3\u6784\u4f53\\n\\n### \u5b9a\u4e49\u5e76\u5b9e\u4f8b\u5316\u7ed3\u6784\u4f53\\n\\n#### \u53d8\u91cf\u4e0e\u5b57\u6bb5\u540c\u540d\u65f6\u7684\u5b57\u6bb5\u521d\u59cb\u5316\u7b80\u5199\u8bed\u6cd5\\n\\n#### \u4f7f\u7528\u7ed3\u6784\u4f53\u66f4\u65b0\u8bed\u6cd5\u4ece\u5176\u4ed6\u5b9e\u4f8b\u521b\u5efa\u5b9e\u4f8b"},{"id":"/2023/10/08/control-flow","metadata":{"permalink":"/my-website/blog/2023/10/08/control-flow","source":"@site/blog/2023-10-08-control-flow/index.md","title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-08T00:00:00.000Z","formattedDate":"2023\u5e7410\u67088\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u63a7\u5236\u6d41","permalink":"/my-website/blog/tags/\u63a7\u5236\u6d41"},{"label":"\u901a\u7528\u7f16\u7a0b\u6982\u5ff5","permalink":"/my-website/blog/tags/\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"}],"readingTime":18.915,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u63a7\u5236\u6d41","\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"],"date":"2023-10-08T00:00:00.000Z"},"prevItem":{"title":"Rust \u7ed3\u6784\u4f53","permalink":"/my-website/blog/2023/10/09/rust-structure"},"nextItem":{"title":"IEEE-754\u6807\u51c6","permalink":"/my-website/blog/2023/10/08/ieee-754"}},"content":"\u6839\u636e\u6761\u4ef6\u662f\u5426\u4e3a\u771f\u6765\u51b3\u5b9a\u662f\u5426\u6267\u884c\u67d0\u4e9b\u4ee3\u7801\uff0c\u6216\u6839\u636e\u6761\u4ef6\u662f\u5426\u4e3a\u771f\u6765\u91cd\u590d\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u662f\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002Rust \u4ee3\u7801\u4e2d\u6700\u5e38\u89c1\u7684\u7528\u6765\u63a7\u5236\u6267\u884c\u6d41\u7684\u7ed3\u6784\u662f `if` \u8868\u8fbe\u5f0f\u548c\u5faa\u73af\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## if \u8868\u8fbe\u5f0f\\n\\n`if` \u8868\u8fbe\u5f0f\u5141\u8bb8\u6839\u636e\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5206\u652f\u3002\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6761\u4ef6\u5e76\u8868\u793a \u201c\u5982\u679c\u6761\u4ef6\u6ee1\u8db3\uff0c\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff1b\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u4e0d\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u3002\u201d\\n\\n```rust\\nuse std::io;\\n\\nfn even_number(num: i32) -> bool {\\n    num % 2 == 0\\n}\\n\\nfn main() {\\n    println!(\\"Please input a number\\");\\n\\n    let mut number = String::new();\\n    io::stdin()\\n        .read_line(&mut number)\\n        .expect(\\"Failed to read line\\");\\n\\n    // number \u8f6c\u6362\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528 trim \u51fd\u6570\u5bf9\u5176\u7ed3\u5c3e\u7684\u6362\u884c\u8f6c\u79fb\u8fdb\u884c\u5220\u9664,\u5426\u5219 parse \u51fd\u6570\u8c03\u7528\u5c06\u62a5\u5f02\u5e38\\n    let number = number.trim().parse().expect(\\"Failed to parse number\\");\\n    let is_even = even_number(number);\\n\\n    if is_even {\\n        println!(\\"{} is even number.\\", number);\\n    } else {\\n        println!(\\"{} is odd number.\\", number);\\n    }\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\branches> cargo run\\n   Compiling branches v0.1.0 (E:\\\\github\\\\rust-projects\\\\branches)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.45s\\n     Running `target\\\\debug\\\\branches.exe`\\nPlease input a number\\n23\\n23 is odd number.\\n```\\n\\n\u6240\u6709\u7684 `if` \u8868\u8fbe\u5f0f\u90fd\u4ee5 `if` \u5173\u952e\u5b57\u5f00\u5934\uff0c\u5176\u540e\u8ddf\u4e00\u4e2a\u6761\u4ef6\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 `even_number` \u7528\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u5076\u6570\uff0c\u5e76\u8fd4\u56de `bool` \u7c7b\u578b\u7684\u7ed3\u679c\uff1b\u63a5\u7740\u6211\u4eec\u5728 `main` \u51fd\u6570\u4e2d\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u53c2\u6570\u662f\u7528\u6237\u4ece\u63a7\u5236\u53f0\u8f93\u5165\u7684\u6570\u5b57\uff1b\u63a5\u4e0b\u6765\u4f7f\u7528 `if` \u8868\u8fbe\u5f0f\u6839\u636e `even_number` \u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fdb\u884c\u5224\u65ad\uff0c\u6700\u540e\u4f7f\u7528 `println` \u5b8f\u6253\u5370\u76f8\u5e94\u7684\u7ed3\u679c\uff0c\u5e76\u7528\u8f93\u5165\u7684\u6570\u5b57\u56de\u586b\u5230\u6807\u51c6\u8f93\u5165\u5360\u4f4d\u7b26\u7684\u4f4d\u7f6e\u3002\\n\\n\u5728\u6761\u4ef6\u4e3a\u771f\u65f6\u5e0c\u671b\u6267\u884c\u7684\u4ee3\u7801\u5757\u4f4d\u4e8e\u7d27\u8ddf\u6761\u4ef6\u4e4b\u540e\u7684\u5927\u62ec\u53f7\u4e2d\u3002`if` \u8868\u8fbe\u5f0f\u4e2d\u4e0e\u6761\u4ef6\u5173\u8054\u7684\u4ee3\u7801\u5757\u6709\u65f6\u88ab\u53eb\u505a**\u5206\u652f**\uff08arm\uff09\uff0c\u4e5f\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684 else \u8868\u8fbe\u5f0f\u6765\u63d0\u4f9b\u4e00\u4e2a\u5728\u6761\u4ef6\u4e3a\u5047\u65f6\u5e94\u5f53\u6267\u884c\u7684\u4ee3\u7801\u5757\uff0c\u8fd9\u91cc\u6211\u4eec\u5c31\u8fd9\u4e48\u505a\u4e86\u3002\u5982\u679c\u4e0d\u63d0\u4f9b else \u8868\u8fbe\u5f0f\u5e76\u4e14\u6761\u4ef6\u4e3a\u5047\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u76f4\u63a5\u5ffd\u7565 if \u4ee3\u7801\u5757\u5e76\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u3002\\n\\n\u5c1d\u8bd5\u8f93\u5165\u4e0d\u540c\u7684\u503c\uff0c\u6839\u636e\u6761\u4ef6\u5224\u65ad\u5c06\u4f1a\u6253\u5370\u4e0d\u540c\u7684\u7ed3\u679c\u3002\\n\\n\u53e6\u5916\u503c\u5f97\u6ce8\u610f\u7684\u662f\u4ee3\u7801\u4e2d\u7684\u6761\u4ef6\u5fc5\u987b\u662f `bool` \u503c\u3002\u5982\u679c\u6761\u4ef6\u4e0d\u662f `bool` \u503c\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a\\n\\n```rust\\nfn main() {\\n    let number = 3;\\n    if number {\\n        println!(\\"number was three\\");\\n    }\\n}\\n```\\n\\n\u8fd9\u91cc `if` \u6761\u4ef6\u7684\u503c\u662f `3`\uff0cRust \u629b\u51fa\u4e86\u4e00\u4e2a\u9519\u8bef\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\branches> cargo run\\n   Compiling branches v0.1.0 (E:\\\\github\\\\rust-projects\\\\branches)\\nerror[E0308]: mismatched types\\n --\x3e src\\\\main.rs:3:8\\n  |\\n3 |     if number {\\n  |        ^^^^^^ expected `bool`, found integer\\n\\nFor more information about this error, try `rustc --explain E0308`.\\nerror: could not compile `branches` (bin \\"branches\\") due to previous error\\n```\\n\\n\u8fd9\u4e2a\u9519\u8bef\u8868\u660e Rust \u671f\u671b\u4e00\u4e2a `bool` \u5374\u5f97\u5230\u4e86\u4e00\u4e2a\u6574\u6570\u3002\u4e0d\u50cf Ruby \u6216 JavaScript \u8fd9\u6837\u7684\u8bed\u8a00\uff0cRust \u5e76\u4e0d\u4f1a\u5c1d\u8bd5\u81ea\u52a8\u5730\u5c06\u975e\u5e03\u5c14\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002\u4f60\u5fc5\u987b\u81ea\u59cb\u81f3\u7ec8\u663e\u5f0f\u5730\u4f7f\u7528\u5e03\u5c14\u503c\u4f5c\u4e3a `if` \u7684\u6761\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60f3\u8981 `if` \u4ee3\u7801\u5757\u53ea\u5728\u4e00\u4e2a\u6570\u5b57\u4e0d\u7b49\u4e8e `0` \u65f6\u6267\u884c\uff0c\u53ef\u4ee5\u628a `if` \u8868\u8fbe\u5f0f\u4fee\u6539\u6210\u4e0b\u9762\u8fd9\u6837\uff1a\\n\\n```rust\\nfn main() {\\n    let number = 3;\\n    if number != 0 {\\n        println!(\\"number was something other than zero\\");\\n    }\\n}\\n```\\n\\n\u8fd0\u884c\u4ee3\u7801\u4f1a\u6253\u5370\u51fa `number was something other than zero`\u3002\\n\\n### \u4f7f\u7528 else if \u5904\u7406\u591a\u91cd\u6761\u4ef6\\n\\n\u53ef\u4ee5\u5c06 `if` \u548c `else` \u7ec4\u6210\u7684 `else if` \u8868\u8fbe\u5f0f\u6765\u5b9e\u73b0\u591a\u91cd\u6761\u4ef6\u3002\u4f8b\u5982\uff1a\\n\\n```rust\\nuse std::io;\\n\\nfn main() {\\n    let mut number = String::new();\\n\\n    println!(\\"Please input a number: \\");\\n\\n    io::stdin().read_line(&mut number).expect(\\"Input Failed.\\");\\n\\n    let number: i32 = number.trim().parse().expect(\\"Input is not a number.\\");\\n\\n    if number % 3 == 0 {\\n        println!(\\"number is divisible by 3\\");\\n    } else if number % 5 == 0 {\\n        println!(\\"number is divisible by 5\\");\\n    } else if number % 7 == 0 {\\n        println!(\\"number is divisible by 7\\");\\n    } else {\\n        println!(\\"number is not divisible by 3, 5, or 7\\");\\n    }\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\branches> cargo run\\n   Compiling branches v0.1.0 (E:\\\\github\\\\rust-projects\\\\branches)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.82s\\n     Running `target\\\\debug\\\\branches.exe`\\nPlease input a number:\\n15\\nnumber is divisible by 3\\n```\\n\\n\u5f53\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u5b83\u6309\u987a\u5e8f\u68c0\u67e5\u6bcf\u4e2a `if` \u8868\u8fbe\u5f0f\u5e76\u6267\u884c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a\u771f\u7684\u4ee3\u7801\u5757\u3002\u6ce8\u610f\u53ca\u65f6 `15` \u53ef\u4ee5\u88ab `5` \u6574\u9664\uff0c\u4e5f\u4e0d\u4f1a\u8f93\u51fa `number is divisible by 5`\uff0c\u66f4\u4e0d\u4f1a\u8f93\u51fa `else `\u5757\u4e2d\u7684 `number is not divisible by 3, 5, or 7`\u3002\u539f\u56e0\u662f Rust \u53ea\u4f1a\u6267\u884c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a\u771f\u7684\u4ee3\u7801\u5757\uff0c\u5e76\u4e14\u4e00\u65e6\u5b83\u627e\u5230\u4e00\u4e2a\u4ee5\u540e\uff0c\u751a\u81f3\u90fd\u4e0d\u4f1a\u68c0\u67e5\u5269\u4e0b\u7684\u6761\u4ef6\u4e86\u3002\\n\\n\u4f7f\u7528\u8fc7\u591a\u7684 `else if` \u8868\u8fbe\u5f0f\u4f1a\u4f7f\u4ee3\u7801\u663e\u5f97\u6742\u4e71\u65e0\u7ae0\uff0c\u6240\u4ee5\u5982\u679c\u6709\u591a\u4e8e\u4e00\u4e2a `else if` \u8868\u8fbe\u5f0f\uff0c\u6700\u597d\u91cd\u6784\u4ee3\u7801\u3002\u4e3a\u5904\u7406\u8fd9\u4e9b\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528 `match` \u591a\u5206\u652f\u7ed3\u6784\u3002\\n\\n### \u5728 let \u8bed\u53e5\u4e2d\u4f7f\u7528 if\\n\\n\u56e0\u4e3a `if` \u662f\u4e00\u4e2a**\u8868\u8fbe\u5f0f**\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 `let` \u8bed\u53e5\u7684\u53f3\u4fa7\u4f7f\u7528\u5b83\u6765\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u5982\u4e0b\u793a\u4f8b\uff1a\\n\\n```rust\\nfn main() {\\n    let condition = true;\\n    let number = if condition { 5 } else { 6 };\\n\\n    println!(\\"The value of number is: {}\\", number);\\n}\\n```\\n\\n`number` \u53d8\u91cf\u5c06\u4f1a\u7ed1\u5b9a\u5230\u8868\u793a `if` \u8868\u8fbe\u5f0f\u7ed3\u679c\u7684\u503c\u4e0a\u3002\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u770b\u770b\u4f1a\u51fa\u73b0\u4ec0\u4e48\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\branches> cargo run\\n   Compiling branches v0.1.0 (E:\\\\github\\\\rust-projects\\\\branches)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.21s\\n     Running `target\\\\debug\\\\branches.exe`\\nThe value of number is: 5\\n```\\n\\n\u8bb0\u4f4f\uff0c\u4ee3\u7801\u5757\u7684\u503c\u662f\u5176\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u800c\u6570\u5b57\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6574\u4e2a `if` \u8868\u8fbe\u5f0f\u7684\u503c\u53d6\u51b3\u4e8e\u54ea\u4e2a\u4ee3\u7801\u5757\u88ab\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740 `if` \u7684\u6bcf\u4e2a\u5206\u652f\u7684\u53ef\u80fd\u7684\u8fd4\u56de\u503c\u90fd\u5fc5\u987b\u662f\u76f8\u540c\u7c7b\u578b\uff1b\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c`if` \u5206\u652f\u548c `else` \u5206\u652f\u7684\u7ed3\u679c\u90fd\u662f `i32` \u6574\u578b\u3002\u5982\u679c\u5b83\u4eec\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5982\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5219\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\uff1a\\n\\n```rust\\nfn main() {\\n    let condition = true;\\n    let number = if condition { 5 } else { \\"six\\" };\\n\\n    println!(\\"The value of number is: {}\\", number);\\n}\\n```\\n\\n\u5f53\u7f16\u8bd1\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u3002`if` \u548c `else` \u5206\u652f\u7684\u503c\u7c7b\u578b\u662f\u4e0d\u76f8\u5bb9\u7684\uff0c\u540c\u65f6 Rust \u4e5f\u51c6\u786e\u5730\u6307\u51fa\u5728\u7a0b\u5e8f\u4e2d\u7684\u4f55\u5904\u53d1\u73b0\u7684\u8fd9\u4e2a\u95ee\u9898\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\branches> cargo run\\n   Compiling branches v0.1.0 (E:\\\\github\\\\rust-projects\\\\branches)\\nerror[E0308]: `if` and `else` have incompatible types\\n --\x3e src\\\\main.rs:3:44\\n  |\\n3 |     let number = if condition { 5 } else { \\"six\\" };\\n  |                                 -          ^^^^^ expected integer, found `&str`\\n  |                                 |\\n  |                                 expected because of this\\n\\nFor more information about this error, try `rustc --explain E0308`.\\nerror: could not compile `branches` (bin \\"branches\\") due to previous error\\n```\\n\\n`if` \u4ee3\u7801\u5757\u4e2d\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\uff0c\u800c `else` \u4ee3\u7801\u5757\u4e2d\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u53d8\u91cf\u5fc5\u987b\u53ea\u6709\u4e00\u4e2a\u7c7b\u578b\u3002Rust \u9700\u8981\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5207\u5730\u77e5\u9053 `number` \u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u9a8c\u8bc1\u5728\u6bcf\u5904\u4f7f\u7528\u7684 `number` \u53d8\u91cf\u7684\u7c7b\u578b\u662f\u6709\u6548\u7684\u3002\u82e5 `number` \u7684\u7c7b\u578b\u4ec5\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\uff0c\u5219 Rust \u5c06\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff1b\u800c\u4e14\u82e5\u7f16\u8bd1\u5668\u5fc5\u987b\u8ddf\u8e2a\u4efb\u610f\u53d8\u91cf\u7684\u591a\u79cd\u5047\u8bbe\u7c7b\u578b\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u53d8\u5f97\u66f4\u590d\u6742\uff0c\u5e76\u4e14\u5bf9\u4ee3\u7801\u7684\u4fdd\u8bc1\u4e5f\u4f1a\u51cf\u5c11\u3002\\n\\n## \u4f7f\u7528\u5faa\u73af\u91cd\u590d\u6267\u884c\\n\\n\u591a\u6b21\u6267\u884c\u540c\u4e00\u6bb5\u4ee3\u7801\u662f\u5f88\u5e38\u7528\u7684\uff0cRust \u4e3a\u6b64\u63d0\u4f9b\u4e86\u591a\u79cd**\u5faa\u73af**\uff08loop\uff09\uff0c\u5b83\u4eec\u904d\u5386\u6267\u884c\u5faa\u73af\u4f53\u4e2d\u7684\u4ee3\u7801\u76f4\u5230\u7ed3\u5c3e\u5e76\u7d27\u63a5\u7740\u56de\u5230\u5f00\u5934\u7ee7\u7eed\u6267\u884c\u3002\u4e3a\u4e86\u8bd5\u9a8c\u5faa\u73af\uff0c\u8ba9\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a _loops_ \u7684\u9879\u76ee\u3002\\n\\nRust \u6709\u4e09\u79cd\u5faa\u73af\uff1a`loop`\u3001`while` \u548c `for`\u3002\u6211\u4eec\u6bcf\u4e00\u4e2a\u90fd\u8bd5\u8bd5\u3002\\n\\n### \u4f7f\u7528 loop \u91cd\u590d\u6267\u884c\u4ee3\u7801\\n\\n`loop` \u5173\u952e\u5b57\u544a\u8bc9 Rust \u4e00\u904d\u53c8\u4e00\u904d\u5730\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u76f4\u5230\u4f60\u660e\u786e\u8981\u6c42\u505c\u6b62\u3002\\n\\n```rust\\nfn main() {\\n    loop {\\n        println!(\\"again!\\");\\n    }\\n}\\n```\\n\\n\u5f53\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8fde\u7eed\u7684\u53cd\u590d\u6253\u5370 `again!`\uff0c\u76f4\u5230\u6211\u4eec\u624b\u52a8\u505c\u6b62\u7a0b\u5e8f\u3002\u5927\u90e8\u5206\u7ec8\u7aef\u90fd\u652f\u6301\u4e00\u4e2a\u5feb\u6377\u952e `ctrl-c` \u6765\u7ec8\u6b62\u4e00\u4e2a\u9677\u5165\u65e0\u9650\u5faa\u73af\u7684\u7a0b\u5e8f\u3002\u5c1d\u8bd5\u4e00\u4e0b\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\loops> cargo run\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\\n     Running `target\\\\debug\\\\loops.exe`\\nagain!\\nagain!\\nagain!\\n^Cagain!\\n```\\n\\n\u7b26\u53f7 `^C` \u4ee3\u8868\u4f60\u5728\u8fd9\u6309\u4e0b\u4e86`ctrl-c`\u3002\u5728 `^C` \u4e4b\u540e\u4f60\u53ef\u80fd\u770b\u5230\u4e5f\u53ef\u80fd\u770b\u4e0d\u5230 `again!` \uff0c\u8fd9\u53d6\u51b3\u4e8e\u5728\u63a5\u6536\u5230\u7ec8\u6b62\u4fe1\u53f7\u65f6\u4ee3\u7801\u6267\u884c\u5230\u4e86\u5faa\u73af\u7684\u4f55\u5904\u3002\\n\\n\u5e78\u8fd0\u7684\u662f\uff0cRust \u4e5f\u63d0\u4f9b\u4e86\u4e00\u79cd\u4ece\u4ee3\u7801\u4e2d\u8df3\u51fa\u5faa\u73af\u7684\u65b9\u6cd5\u3002\u53ef\u4ee5\u4f7f\u7528 `break` \u5173\u952e\u5b57\u6765\u544a\u8bc9\u7a0b\u5e8f\u4f55\u65f6\u505c\u6b62\u5faa\u73af\u3002\\n\\n\u5faa\u73af\u4e2d\u7684 `continue` \u5173\u952e\u5b57\u544a\u8bc9\u7a0b\u5e8f\u8df3\u8fc7\u8fd9\u4e2a\u5faa\u73af\u8fed\u4ee3\u4e2d\u7684\u4efb\u4f55\u5269\u4f59\u4ee3\u7801\uff0c\u5e76\u8f6c\u5230\u4e0b\u4e00\u4e2a\u8fed\u4ee3\u3002\\n\\n\u5982\u679c\u5b58\u5728\u5d4c\u5957\u5faa\u73af\uff0c`break` \u548c `continue` \u5e94\u7528\u4e8e\u6b64\u65f6\u6700\u5185\u5c42\u7684\u5faa\u73af\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u5728\u4e00\u4e2a\u5faa\u73af\u4e0a\u6307\u5b9a\u4e00\u4e2a**\u5faa\u73af\u6807\u7b7e**\uff08loop label\uff09\uff0c\u7136\u540e\u5c06\u6807\u7b7e\u4e0e `break` \u6216 `continue` \u4e00\u8d77\u4f7f\u7528\uff0c\u4f7f\u8fd9\u4e9b\u5173\u952e\u5b57\u5e94\u7528\u4e8e\u5df2\u6807\u8bb0\u7684\u5faa\u73af\u800c\u4e0d\u662f\u6700\u5185\u5c42\u7684\u5faa\u73af\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u5d4c\u5957\u5faa\u73af\u7684\u793a\u4f8b\uff1a\\n\\n```rust\\nfn main() {\\n    let mut count = 0;\\n    \'counting_up: loop {\\n        println!(\\"count = {}\\", count);\\n        let mut remaining = 10;\\n\\n        loop {\\n            println!(\\"remaining = {}\\", remaining);\\n\\n            if remaining == 9 {\\n                break;\\n            }\\n\\n            if count == 2 {\\n                break \'counting_up;\\n            }\\n            remaining -= 1;\\n        }\\n\\n        count += 1;\\n    }\\n    println!(\\"End count = {}\\", count);\\n}\\n```\\n\\n\u5916\u5c42\u5faa\u73af\u6709\u4e00\u4e2a\u6807\u7b7e `counting_up`\uff0c\u5b83\u5c06\u4ece `0` \u6570\u5230 `2`\u3002\u6ca1\u6709\u6807\u7b7e\u7684\u5185\u90e8\u5faa\u73af\u4ece `10` \u5411\u4e0b\u6570\u5230 `9`\u3002\u7b2c\u4e00\u4e2a\u6ca1\u6709\u6307\u5b9a\u6807\u7b7e\u7684 `break` \u5c06\u53ea\u9000\u51fa\u5185\u5c42\u5faa\u73af\u3002`break \'counting_up;` \u8bed\u53e5\u5c06\u9000\u51fa\u5916\u5c42\u5faa\u73af\u3002\u8fd9\u4e2a\u4ee3\u7801\u6253\u5370:\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\loops> cargo run\\n   Compiling loops v0.1.0 (E:\\\\github\\\\rust-projects\\\\loops)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.47s\\n     Running `target\\\\debug\\\\loops.exe`\\ncount = 0\\nremaining = 10\\nremaining = 9\\ncount = 1\\nremaining = 10\\nremaining = 9\\ncount = 2\\nremaining = 10\\nEnd count = 2\\n```\\n\\n### \u4ece\u5faa\u73af\u8fd4\u56de\\n\\n`loop` \u7684\u4e00\u4e2a\u7528\u4f8b\u662f\u91cd\u8bd5\u53ef\u80fd\u4f1a\u5931\u8d25\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u68c0\u67e5\u7ebf\u7a0b\u662f\u5426\u5b8c\u6210\u4e86\u4efb\u52a1\u3002\u7136\u800c\u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u4ece\u5faa\u73af\u4e2d\u4f20\u9012\u7ed9\u5176\u5b83\u7684\u4ee3\u7801\u3002\u4e3a\u6b64\uff0c\u4f60\u53ef\u4ee5\u5728\u7528\u4e8e\u505c\u6b62\u5faa\u73af\u7684 `break` \u8868\u8fbe\u5f0f\u6dfb\u52a0\u4f60\u60f3\u8981\u8fd4\u56de\u7684\u503c\uff1b\u8be5\u503c\u5c06\u4ece\u5faa\u73af\u4e2d\u8fd4\u56de\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```rust\\nfn main() {\\n    let mut counter = 0;\\n    let result = loop {\\n        counter += 1;\\n\\n        if counter == 10 {\\n            break counter * 2;\\n        }\\n    };\\n\\n    println!(\\"The result is {}\\", result);\\n}\\n```\\n\\n\u5728\u5faa\u73af\u4e4b\u524d\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a `counter` \u7684\u53d8\u91cf\u5e76\u521d\u59cb\u5316\u4e3a `0`\u3002\u63a5\u7740\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a `result` \u6765\u5b58\u653e\u5faa\u73af\u7684\u8fd4\u56de\u503c\u3002\u5728\u5faa\u73af\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5c06 `counter` \u53d8\u91cf\u52a0 `1`\uff0c\u63a5\u7740\u68c0\u67e5\u8ba1\u6570\u662f\u5426\u7b49\u4e8e `10`\u3002\u5f53\u76f8\u7b49\u65f6\uff0c\u4f7f\u7528 `break` \u5173\u952e\u5b57\u8fd4\u56de\u503c `counter * 2`\u3002\u5faa\u73af\u4e4b\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u5206\u53f7\u7ed3\u675f\u8d4b\u503c\u7ed9 `result` \u7684\u8bed\u53e5\u3002\u6700\u540e\u6253\u5370\u51fa `result` \u7684\u503c\uff0c\u4e5f\u5c31\u662f `20`\u3002\\n\\n### while \u6761\u4ef6\u5faa\u73af\\n\\n\u5728\u7a0b\u5e8f\u4e2d\u8ba1\u7b97\u5faa\u73af\u7684\u6761\u4ef6\u4e5f\u5f88\u5e38\u89c1\u3002\u5f53\u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884c\u5faa\u73af\u3002\u5f53\u6761\u4ef6\u4e0d\u518d\u4e3a\u771f\uff0c\u8c03\u7528 `break` \u505c\u6b62\u5faa\u73af\u3002\u8fd9\u4e2a\u5faa\u73af\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408 `loop`\u3001`if`\u3001`else` \u548c `break` \u6765\u5b9e\u73b0\uff1b\u5982\u679c\u4f60\u559c\u6b22\u7684\u8bdd\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u8bd5\u8bd5\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u592a\u5e38\u7528\u4e86\uff0cRust \u4e3a\u6b64\u5185\u7f6e\u4e86\u4e00\u4e2a\u8bed\u8a00\u7ed3\u6784\uff0c\u5b83\u88ab\u79f0\u4e3a `while` \u5faa\u73af\u3002\\n\\n```rust\\nfn main() {\\n    let mut number = 3;\\n    while number != 0 {\\n        println!(\\"{}\\", number);\\n\\n        number -= 1;\\n    }\\n\\n    println!(\\"LIFTOFF!!!\\");\\n}\\n```\\n\\n\u8fd9\u79cd\u7ed3\u6784\u6d88\u9664\u4e86\u5f88\u591a\u4f7f\u7528 `loop`\u3001`if`\u3001`else` \u548c `break` \u65f6\u6240\u5fc5\u987b\u7684\u5d4c\u5957\uff0c\u8fd9\u6837\u66f4\u52a0\u6e05\u6670\u3002\u5f53\u6761\u4ef6\u4e3a\u771f\u5c31\u6267\u884c\uff0c\u5426\u5219\u9000\u51fa\u5faa\u73af\u3002\\n\\n### \u4f7f\u7528 for \u904d\u5386\u96c6\u5408\\n\\n\u53ef\u4ee5\u4f7f\u7528 `while` \u7ed3\u6784\u6765\u904d\u5386\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u6570\u7ec4\u3002\\n\\n```rust\\nfn main() {\\n    let mut index = 0;\\n    let a = [10, 20, 30, 40, 50];\\n\\n    while index < 5 {\\n        println!(\\"The value is: {}\\", a[index]);\\n\\n        index += 1;\\n    }\\n}\\n```\\n\\n\u5728\u8fd9\u91cc\uff0c\u4ee3\u7801\u5bf9\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8ba1\u6570\u3002\u5b83\u4ece\u7d22\u5f15 0 \u5f00\u59cb\uff0c\u5e76\u63a5\u7740\u5faa\u73af\u76f4\u5230\u9047\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\uff08\u5373 index < 5 \u4e0d\u518d\u4e3a\u771f\u65f6\uff09\u3002\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6253\u5370\u51fa\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\loops> cargo run\\n   Compiling loops v0.1.0 (E:\\\\github\\\\rust-projects\\\\loops)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.48s\\n     Running `target\\\\debug\\\\loops.exe`\\nThe value is: 10\\nThe value is: 20\\nThe value is: 30\\nThe value is: 40\\nThe value is: 50\\n```\\n\\n\u6570\u7ec4\u4e2d\u7684 5 \u4e2a\u5143\u7d20\u5168\u90e8\u90fd\u5982\u671f\u88ab\u6253\u5370\u51fa\u6765\u3002\u5c3d\u7ba1 `index` \u5728\u67d0\u4e00\u65f6\u523b\u4f1a\u5230\u8fbe\u503c `5`\uff0c\u4e0d\u8fc7\u5faa\u73af\u5728\u5176\u5c1d\u8bd5\u4ece\u6570\u7ec4\u83b7\u53d6\u7b2c 6 \u4e2a\u503c\uff08\u4f1a\u8d8a\u754c\uff09\u4e4b\u524d\u5c31\u505c\u6b62\u4e86\u3002\\n\\n\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u5bb9\u6613\u51fa\u9519\uff1b\u5982\u679c\u7d22\u5f15\u503c\u6216\u6d4b\u8bd5\u6761\u4ef6\u4e0d\u6b63\u786e\u4f1a\u5bfc\u81f4\u7a0b\u5e8f panic\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5c06 a \u6570\u7ec4\u7684\u5b9a\u4e49\u66f4\u6539\u4e3a\u5305\u542b 4 \u4e2a\u5143\u7d20\uff0c\u4f46\u5fd8\u8bb0\u5c06\u6761\u4ef6\u66f4\u65b0\u4e3a `while index < 4`\uff0c\u5219\u4ee3\u7801\u4f1a\u51fa\u73b0 panic\u3002\u8fd9\u4e5f\u4f7f\u7a0b\u5e8f\u66f4\u6162\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u4ee3\u7801\u6765\u5bf9\u6bcf\u6b21\u5faa\u73af\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\uff0c\u4ee5\u786e\u5b9a\u5728\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u7d22\u5f15\u662f\u5426\u5728\u6570\u7ec4\u7684\u8fb9\u754c\u5185\u3002\\n\\n\u4f5c\u4e3a\u66f4\u7b80\u6d01\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u53ef\u4ee5\u4f7f\u7528 `for` \u5faa\u73af\u6765\u5bf9\u4e00\u4e2a\u96c6\u5408\u7684\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\u3002`for` \u5faa\u73af\u770b\u8d77\u6765\u5982\u4e0b\u793a\u4f8b:\\n\\n```rust\\nfn main() {\\n    let a = [10, 20, 30, 40, 50];\\n\\n    for element in a {\\n        println!(\\"The value is: {}\\", element);\\n    }\\n}\\n```\\n\\n\u5f53\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u65f6\uff0c\u5176\u7ed3\u679c\u4e0e\u4f7f\u7528 `while` \u5b9e\u73b0\u7684\u793a\u4f8b\u4e00\u6837\u3002\u66f4\u4e3a\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u589e\u5f3a\u4e86\u4ee3\u7801\u5b89\u5168\u6027\uff0c\u5e76\u6d88\u9664\u4e86\u53ef\u80fd\u7531\u4e8e\u8d85\u51fa\u6570\u7ec4\u7684\u7ed3\u5c3e\u6216\u904d\u5386\u957f\u5ea6\u4e0d\u591f\u800c\u7f3a\u5c11\u4e00\u4e9b\u5143\u7d20\u800c\u5bfc\u81f4\u7684 bug\u3002\\n\\n\u4f7f\u7528 `for` \u5faa\u73af\u7684\u8bdd\uff0c\u5c31\u4e0d\u9700\u8981\u60e6\u8bb0\u7740\u5728\u6539\u53d8\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u65f6\u4fee\u6539\u5176\u4ed6\u7684\u4ee3\u7801\u4e86\uff0c\u5c31\u50cf\u4f7f\u7528\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u4e00\u6837\u3002\\n\\n`for` \u5faa\u73af\u7684\u5b89\u5168\u6027\u548c\u7b80\u6d01\u6027\u4f7f\u5f97\u5b83\u6210\u4e3a Rust \u4e2d\u4f7f\u7528\u6700\u591a\u7684\u5faa\u73af\u7ed3\u6784\u3002\u5373\u4f7f\u662f\u5728\u60f3\u8981\u5faa\u73af\u6267\u884c\u4ee3\u7801\u7279\u5b9a\u6b21\u6570\u65f6\uff0c\u5927\u90e8\u5206\u4e5f\u4f1a\u503e\u5411\u4e8e\u4f7f\u7528 `for` \u5faa\u73af\u5b9e\u73b0\u3002\\n\\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 `for` \u5faa\u73af\u6765\u5012\u8ba1\u65f6\u7684\u4f8b\u5b50\uff0c\u5b83\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e2a\u6211\u4eec\u8fd8\u672a\u8bb2\u5230\u7684\u65b9\u6cd5\uff0c`rev` \u7528\u6765\u53cd\u8f6c\u533a\u95f4:\\n\\n```rust\\nfn main() {\\n    for element in (1..4).rev() {\\n        println!(\\"The value is: {}\\", element);\\n    }\\n}\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c:\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\loops> cargo run\\n   Compiling loops v0.1.0 (E:\\\\github\\\\rust-projects\\\\loops)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.55s\\n     Running `target\\\\debug\\\\loops.exe`\\nThe value is: 3\\nThe value is: 2\\nThe value is: 1\\n```\\n\\n## \u7ec3\u4e60\\n\\n1. `n` \u9636\u6bb5\u6590\u6ce2\u90a3\u5951\u6570\u5217\\n\\n   <details>\\n   <summary>\u70b9\u51fb\u67e5\u770b\u5b9e\u73b0</summary>\\n   \u601d\u8def:\\n\\n   F(0)=1\uff0cF(1)=1\uff0cF(n)=F(n-1)+F(n-2)\uff08n\u22652\uff0cn\u2208N\\\\*\uff09\\n\\n   \u4ee3\u7801:\\n\\n   ```rust\\n   fn fibonacci_sequence(n: i32) -> i32 {\\n       if n == 1 {\\n           return 1;\\n       } else if n == 2 {\\n           return 1;\\n       } else {\\n           return fibonacci_sequence(n - 1) + fibonacci_sequence(n - 2);\\n       }\\n   }\\n   ```\\n\\n   </details>\\n\\n2. \u534e\u6c0f\u6e29\u5ea6\u548c\u6444\u6c0f\u5ea6\u4e4b\u95f4\u8f6c\u6362\\n\\n   <details>\\n   <summary>\u70b9\u51fb\u67e5\u770b\u5b9e\u73b0</summary>\\n   \u601d\u8def:\\n\\n   \u534e\u6c0f\u6e29\u5ea6\u548c\u6444\u6c0f\u5ea6\u4e4b\u95f4\u7684\u6e29\u5ea6\u8f6c\u6362\u516c\u5f0f\u5982\u4e0b\uff1a\\n\\n   \u5c06\u6444\u6c0f\u5ea6\u8f6c\u6362\u4e3a\u534e\u6c0f\u6e29\u5ea6\uff1a\\n   F = C \\\\* 9/5 + 32\\n\\n   \u5176\u4e2d\uff0cF \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\uff0cC \u4ee3\u8868\u6444\u6c0f\u5ea6\u3002\\n\\n   \u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u5ea6\uff1a\\n   C = (F - 32) \\\\* 5/9\\n\\n   \u5176\u4e2d\uff0cF \u4ee3\u8868\u534e\u6c0f\u6e29\u5ea6\uff0cC \u4ee3\u8868\u6444\u6c0f\u5ea6\u3002\\n\\n   \u4f8b\u5982\uff1a\u5982\u679c\u4e00\u4e2a\u7269\u4f53\u7684\u6e29\u5ea6\u662f 37 \u6444\u6c0f\u5ea6\uff0c\u90a3\u4e48\u7528\u4e0a\u8ff0\u7684\u8f6c\u6362\u516c\u5f0f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5b83\u5bf9\u5e94\u7684\u534e\u6c0f\u6e29\u5ea6\u4e3a 37\\\\*9/5+32=98.6 \u5ea6\u3002\\n\\n   \u4ee3\u7801\u5b9e\u73b0:\\n\\n   ```rust\\n   fn main() {\\n       let degrees: f64 = 37.0;\\n       println!(\\n           \\"The fahrenheit of {} is: {}\\",\\n           degrees,\\n           degrees_to_fahrenheit(degrees)\\n       );\\n       let fahrenheit: f64 = 98.6;\\n       println!(\\n           \\"The fahrenheit of {} is: {}\\",\\n           fahrenheit,\\n           fahrenheit_to_degrees(fahrenheit)\\n       );\\n   }\\n\\n   // \u6444\u6c0f\u5ea6\u8f6c\u534e\u6c0f\u5ea6\\n   fn degrees_to_fahrenheit(degrees: f64) -> f64 {\\n       return degrees * 9.0 / 5.0 + 32.0;\\n   }\\n\\n   // \u534e\u6c0f\u5ea6\u8f6c\u6444\u6c0f\u5ea6\\n   fn fahrenheit_to_degrees(fahrenheit: f64) -> f64 {\\n       return (fahrenheit - 32.0) * (5.0 / 9.0);\\n   }\\n   ```\\n\\n   </details>"},{"id":"/2023/10/08/ieee-754","metadata":{"permalink":"/my-website/blog/2023/10/08/ieee-754","source":"@site/blog/2023-10-08-ieee-754/index.md","title":"IEEE-754\u6807\u51c6","description":"\u8bb0\u5f55\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-08T00:00:00.000Z","formattedDate":"2023\u5e7410\u67088\u65e5","tags":[{"label":"\u6807\u51c6","permalink":"/my-website/blog/tags/\u6807\u51c6"},{"label":"\u8ba1\u7b97\u673a","permalink":"/my-website/blog/tags/\u8ba1\u7b97\u673a"}],"readingTime":10.435,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"IEEE-754\u6807\u51c6","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u5b66\u4e60\u8fc7\u7a0b","tags":["\u6807\u51c6","\u8ba1\u7b97\u673a"],"date":"2023-10-08T00:00:00.000Z"},"prevItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41","permalink":"/my-website/blog/2023/10/08/control-flow"},"nextItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b","permalink":"/my-website/blog/2023/10/08/rust-data-type"}},"content":"IEEE 754 \u662f\u4e00\u4e2a\u7531\u7535\u5b50\u7535\u6c14\u5de5\u7a0b\u5e08\u534f\u4f1a\uff08Institute of Electrical and Electronics Engineers\uff0c\u7b80\u79f0 IEEE\uff09\u5236\u5b9a\u7684\u6807\u51c6\uff0c\u7528\u4e8e\u5b9a\u4e49\u6d6e\u70b9\u6570\u7684\u8868\u793a\u548c\u8fd0\u7b97\u89c4\u5219\u3002\u8fd9\u4e2a\u6807\u51c6\u5b9a\u4e49\u4e86\u6d6e\u70b9\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u65b9\u5f0f\u3001\u8fd0\u7b97\u89c4\u5219\u548c\u7cbe\u5ea6\u7b49\u91cd\u8981\u5185\u5bb9\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8ba1\u7b97\u673a\u79d1\u5b66\u548c\u5de5\u7a0b\u9886\u57df\uff0c\u4ee5\u786e\u4fdd\u6d6e\u70b9\u6570\u5728\u4e0d\u540c\u8ba1\u7b97\u5e73\u53f0\u4e0a\u7684\u4e00\u81f4\u6027\u548c\u53ef\u79fb\u690d\u6027\u3002\\n\\nIEEE 754 \u6807\u51c6\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff1a\\n\\n1. **\u6d6e\u70b9\u6570\u683c\u5f0f**\uff1aIEEE 754 \u5b9a\u4e49\u4e86\u591a\u79cd\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5305\u62ec\u5355\u7cbe\u5ea6\uff0832 \u4f4d\uff09\u3001\u53cc\u7cbe\u5ea6\uff0864 \u4f4d\uff09\u548c\u62d3\u5c55\u7cbe\u5ea6\u683c\u5f0f\uff0c\u5b83\u4eec\u90fd\u5177\u6709\u56fa\u5b9a\u7684\u4f4d\u6570\u7528\u4e8e\u8868\u793a\u7b26\u53f7\u3001\u6307\u6570\u548c\u5c3e\u6570\uff08\u4e5f\u79f0\u4e3a\u5c3e\u6570\u3001\u5c3e\u6570\u4f4d\u6570\uff09\uff0c\u4ee5\u53ca\u89c4\u5b9a\u4e86\u5982\u4f55\u5c06\u4e8c\u8fdb\u5236\u4f4d\u89e3\u91ca\u4e3a\u5b9e\u9645\u7684\u6d6e\u70b9\u6570\u503c\u3002\\n\\n2. **\u7279\u6b8a\u503c**\uff1aIEEE 754 \u6807\u51c6\u8fd8\u5b9a\u4e49\u4e86\u7279\u6b8a\u503c\uff0c\u5982\u6b63\u65e0\u7a77\u5927\u3001\u8d1f\u65e0\u7a77\u5927\u3001NaN\uff08\u975e\u6570\u503c\uff09\u7b49\uff0c\u4ee5\u5904\u7406\u5728\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38\u60c5\u51b5\u3002\\n\\n3. **\u6d6e\u70b9\u6570\u8fd0\u7b97**\uff1a\u6807\u51c6\u89c4\u5b9a\u4e86\u6d6e\u70b9\u6570\u7684\u56db\u5219\u8fd0\u7b97\uff08\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u548c\u9664\u6cd5\uff09\u548c\u53d6\u4f59\u7b49\u64cd\u4f5c\u7684\u89c4\u5219\uff0c\u5305\u62ec\u820d\u5165\u89c4\u5219\u548c\u6ea2\u51fa\u5904\u7406\u65b9\u5f0f\u3002\\n\\n4. **\u7cbe\u5ea6**\uff1aIEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u548c\u6709\u6548\u4f4d\u6570\uff0c\u4ee5\u53ca\u820d\u5165\u65b9\u5f0f\uff0c\u4ee5\u786e\u4fdd\u5728\u4e0d\u540c\u8ba1\u7b97\u5e73\u53f0\u4e0a\u7684\u4e00\u81f4\u6027\u3002\\n\\n5. **\u8f6c\u6362**\uff1a\u6807\u51c6\u8fd8\u5b9a\u4e49\u4e86\u6d6e\u70b9\u6570\u548c\u6574\u6570\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\u89c4\u5219\u3002\\n\\n6. **\u8bed\u8a00\u652f\u6301**\uff1aIEEE 754 \u6807\u51c6\u88ab\u5e7f\u6cdb\u652f\u6301\u548c\u5b9e\u73b0\u5728\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u786c\u4ef6\u5e73\u53f0\u4e2d\uff0c\u5305\u62ec C\u3001C++\u3001Java\u3001Python \u7b49\uff0c\u4ee5\u53ca CPU\u3001GPU \u548c FPGA \u7b49\u786c\u4ef6\u5e73\u53f0\u3002\\n\\nIEEE 754 \u6807\u51c6\u7684\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u79cd\u901a\u7528\u7684\u6d6e\u70b9\u6570\u8868\u793a\u548c\u8fd0\u7b97\u65b9\u5f0f\uff0c\u4ee5\u4fbf\u4e0d\u540c\u8ba1\u7b97\u5e73\u53f0\u4e0a\u7684\u7a0b\u5e8f\u80fd\u591f\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u6d6e\u70b9\u6570\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7279\u6b8a\u6027\u8d28\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u4e86\u89e3\u6807\u51c6\u4e2d\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u4ee5\u907f\u514d\u7531\u4e8e\u820d\u5165\u8bef\u5dee\u548c\u6d6e\u70b9\u6570\u7cbe\u5ea6\u95ee\u9898\u800c\u5bfc\u81f4\u7684\u6f5c\u5728\u95ee\u9898\u3002\u5728\u7f16\u5199\u9700\u8981\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u7cbe\u5ea6\u63a7\u5236\u548c\u6570\u503c\u5206\u6790\u6280\u5de7\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6d6e\u70b9\u6570\u683c\u5f0f\\n\\n### \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\\n\\nIEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u591a\u79cd\u6d6e\u70b9\u6570\u683c\u5f0f\uff0c\u5305\u62ec\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08Single Precision Floating-Point\uff09\u3002\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4f7f\u7528 32 \u4f4d\u4e8c\u8fdb\u5236\u4f4d\u6765\u8868\u793a\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u7b26\u53f7\u4f4d\u3001\u4e00\u4e2a\u6307\u6570\u4f4d\u548c\u5269\u4f59\u7684\u5c3e\u6570\u4f4d\u3002\\n\\n\u4ee5\u4e0b\u662f\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u4e00\u822c\u7ed3\u6784\uff1a\\n\\n- \u7b26\u53f7\u4f4d\uff081 \u4f4d\uff09\uff1a\u6307\u793a\u6d6e\u70b9\u6570\u7684\u6b63\u8d1f\u30020 \u8868\u793a\u6b63\u6570\uff0c1 \u8868\u793a\u8d1f\u6570\u3002\\n- \u6307\u6570\u4f4d\uff088 \u4f4d\uff09\uff1a\u8868\u793a\u6307\u6570\u7684\u504f\u79fb\u503c\uff0c\u901a\u5e38\u91c7\u7528\u504f\u79fb\u8868\u793a\u6cd5\u3002\u8fd9\u610f\u5473\u7740\u5b58\u50a8\u7684\u6307\u6570\u503c\u5fc5\u987b\u51cf\u53bb\u4e00\u4e2a\u504f\u79fb\u503c\uff0c\u4ee5\u5f97\u5230\u5b9e\u9645\u7684\u6307\u6570\u3002\u8fd9\u5141\u8bb8\u8868\u793a\u4e00\u5b9a\u8303\u56f4\u7684\u6307\u6570\u503c\u3002\\n- \u5c3e\u6570\u4f4d\uff0823 \u4f4d\uff09\uff1a\u4e5f\u79f0\u4e3a\u5c3e\u6570\u6216\u5c3e\u6570\u4f4d\u6570\uff0c\u7528\u4e8e\u5b58\u50a8\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u90e8\u5206\u3002\\n\\n\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u6307\u6570\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4ece -126 \u5230 127 \u7684\u6307\u6570\u8303\u56f4\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u8868\u793a\u975e\u5e38\u5927\u548c\u975e\u5e38\u5c0f\u7684\u6d6e\u70b9\u6570\u3002\\n\\n\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u9075\u5faa IEEE 754 \u6807\u51c6\u5b9a\u4e49\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u89c4\u5219\uff0c\u5305\u62ec\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u4ee5\u53ca\u5904\u7406\u7279\u6b8a\u503c\uff08\u5982\u65e0\u7a77\u5927\u548c NaN\uff09\u7684\u89c4\u5219\u3002\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u901a\u5e38\u7528\u4e8e\u9700\u8981\u8f83\u5c0f\u5b58\u50a8\u7a7a\u95f4\u6216\u9700\u8981\u8f83\u5feb\u8fd0\u7b97\u901f\u5ea6\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002\\n\\n\u5728 C \u8bed\u8a00\u4e2d\uff0c\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u901a\u5e38\u4f7f\u7528`float`\u7c7b\u578b\u6765\u8868\u793a\u3002\u4f8b\u5982\uff1a\\n\\n```c\\nfloat myFloat = 3.14f;  // \u4f7f\u7528f\u540e\u7f00\u8868\u793a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\\n```\\n\\n\u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u5305\u62ec C\u3001C++\u3001Java \u7b49\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u3001\u56fe\u5f62\u5904\u7406\u548c\u5176\u4ed6\u9700\u8981\u9ad8\u6027\u80fd\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u9886\u57df\u3002\u4f46\u9700\u8981\u6ce8\u610f\uff0c\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u901a\u5e38\u6bd4\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7cbe\u5ea6\u4f4e\uff0c\u56e0\u6b64\u5728\u9700\u8981\u66f4\u9ad8\u7cbe\u5ea6\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u3002\\n\\n### \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\\n\\nIEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08Double Precision Floating-Point\uff09\uff0c\u5b83\u662f\u4e00\u79cd\u7528\u4e8e\u8868\u793a\u6d6e\u70b9\u6570\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u63d0\u4f9b\u66f4\u9ad8\u7684\u7cbe\u5ea6\u548c\u8303\u56f4\uff0c\u76f8\u5bf9\u4e8e\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u800c\u8a00\u3002\\n\\n\u4ee5\u4e0b\u662f\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u4e00\u822c\u7ed3\u6784\uff1a\\n\\n- \u7b26\u53f7\u4f4d\uff081 \u4f4d\uff09\uff1a\u6307\u793a\u6d6e\u70b9\u6570\u7684\u6b63\u8d1f\u30020 \u8868\u793a\u6b63\u6570\uff0c1 \u8868\u793a\u8d1f\u6570\u3002\\n- \u6307\u6570\u4f4d\uff0811 \u4f4d\uff09\uff1a\u8868\u793a\u6307\u6570\u7684\u504f\u79fb\u503c\uff0c\u901a\u5e38\u91c7\u7528\u504f\u79fb\u8868\u793a\u6cd5\u3002\u8fd9\u610f\u5473\u7740\u5b58\u50a8\u7684\u6307\u6570\u503c\u5fc5\u987b\u51cf\u53bb\u4e00\u4e2a\u504f\u79fb\u503c\uff0c\u4ee5\u5f97\u5230\u5b9e\u9645\u7684\u6307\u6570\u3002\u8fd9\u5141\u8bb8\u8868\u793a\u66f4\u5927\u8303\u56f4\u7684\u6307\u6570\u503c\u3002\\n- \u5c3e\u6570\u4f4d\uff0852 \u4f4d\uff09\uff1a\u4e5f\u79f0\u4e3a\u5c3e\u6570\u6216\u5c3e\u6570\u4f4d\u6570\uff0c\u7528\u4e8e\u5b58\u50a8\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u90e8\u5206\u3002\\n\\n\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u6307\u6570\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4ece -1022 \u5230 1023 \u7684\u6307\u6570\u8303\u56f4\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u8868\u793a\u975e\u5e38\u5927\u548c\u975e\u5e38\u5c0f\u7684\u6d6e\u70b9\u6570\uff0c\u5e76\u4e14\u5177\u6709\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u76f8\u5bf9\u4e8e\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u3002\\n\\n\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u9075\u5faa IEEE 754 \u6807\u51c6\u5b9a\u4e49\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u89c4\u5219\uff0c\u5305\u62ec\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u4ee5\u53ca\u5904\u7406\u7279\u6b8a\u503c\uff08\u5982\u65e0\u7a77\u5927\u548c NaN\uff09\u7684\u89c4\u5219\u3002\\n\\n\u5728 C \u8bed\u8a00\u4e2d\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u901a\u5e38\u4f7f\u7528 `double` \u7c7b\u578b\u6765\u8868\u793a\u3002\u4f8b\u5982\uff1a\\n\\n```c\\ndouble myDouble = 3.141592653589793;  // \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\\n```\\n\\n\u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u5305\u62ec C\u3001C++\u3001Java \u7b49\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u662f\u9ed8\u8ba4\u7684\u6d6e\u70b9\u6570\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u8f83\u9ad8\u7684\u7cbe\u5ea6\uff0c\u9002\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u3001\u5de5\u7a0b\u5e94\u7528\u3001\u56fe\u5f62\u5904\u7406\u548c\u5176\u4ed6\u9700\u8981\u9ad8\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u9886\u57df\u3002\u4f46\u8bf7\u6ce8\u610f\uff0c\u6d6e\u70b9\u6570\u8fd0\u7b97\u4ecd\u7136\u53ef\u80fd\u6d89\u53ca\u5230\u7cbe\u5ea6\u8bef\u5dee\u548c\u820d\u5165\u8bef\u5dee\uff0c\u56e0\u6b64\u5728\u8fdb\u884c\u6d6e\u70b9\u6570\u8ba1\u7b97\u65f6\u9700\u8981\u8c28\u614e\u5904\u7406\u3002\\n\\n## \u6d6e\u70b9\u6570\u8fd0\u7b97\\n\\nIEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u6d6e\u70b9\u6570\u7684\u8fd0\u7b97\u89c4\u5219\uff0c\u5305\u62ec\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u4ee5\u53ca\u5904\u7406\u7279\u6b8a\u503c\uff08\u5982\u65e0\u7a77\u5927\u548c NaN\uff09\u7684\u89c4\u5219\u3002\u8fd9\u4e9b\u89c4\u5219\u65e8\u5728\u786e\u4fdd\u5728\u4e0d\u540c\u8ba1\u7b97\u5e73\u53f0\u4e0a\u6267\u884c\u76f8\u540c\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u65f6\uff0c\u80fd\u591f\u83b7\u5f97\u4e00\u81f4\u7684\u7ed3\u679c\u3002\u4ee5\u4e0b\u662f IEEE 754 \u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u4e00\u4e9b\u5173\u952e\u89c4\u5219\uff1a\\n\\n1. **\u52a0\u6cd5\u548c\u51cf\u6cd5**\uff1a\\n\\n   - \u5bf9\u4e8e\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u52a0\u6cd5\u548c\u51cf\u6cd5\uff0c\u9996\u5148\u9700\u8981\u6bd4\u8f83\u5b83\u4eec\u7684\u6307\u6570\u90e8\u5206\uff0c\u5c06\u6307\u6570\u8f83\u5c0f\u7684\u6570\u8fdb\u884c\u6307\u6570\u5bf9\u9f50\uff0c\u7136\u540e\u5c06\u5c3e\u6570\u76f8\u52a0\u6216\u76f8\u51cf\u3002\\n   - \u5728\u8fdb\u884c\u52a0\u6cd5\u548c\u51cf\u6cd5\u8fd0\u7b97\u540e\uff0c\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u820d\u5165\uff0c\u4ee5\u5c06\u5176\u89c4\u8303\u5316\u4e3a IEEE 754 \u6807\u51c6\u4e2d\u7684\u683c\u5f0f\u3002\\n\\n2. **\u4e58\u6cd5**\uff1a\\n\\n   - \u4e58\u6cd5\u8fd0\u7b97\u6d89\u53ca\u5c06\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u5c3e\u6570\u76f8\u4e58\uff0c\u5e76\u5c06\u6307\u6570\u76f8\u52a0\u3002\\n   - \u4e58\u6cd5\u8fd0\u7b97\u540e\uff0c\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u820d\u5165\uff0c\u4ee5\u5c06\u5176\u89c4\u8303\u5316\u3002\\n\\n3. **\u9664\u6cd5**\uff1a\\n\\n   - \u9664\u6cd5\u8fd0\u7b97\u6d89\u53ca\u5c06\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u5c3e\u6570\u76f8\u9664\uff0c\u5e76\u5c06\u6307\u6570\u76f8\u51cf\u3002\\n   - \u9664\u6cd5\u8fd0\u7b97\u540e\uff0c\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u820d\u5165\uff0c\u4ee5\u5c06\u5176\u89c4\u8303\u5316\u3002\\n\\n4. **\u7279\u6b8a\u503c\u7684\u5904\u7406**\uff1a\\n\\n   - IEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u6d6e\u70b9\u6570\u503c\uff0c\u5982\u6b63\u65e0\u7a77\u5927\u3001\u8d1f\u65e0\u7a77\u5927\u3001NaN\uff08\u975e\u6570\u503c\uff09\u7b49\u3002\u8fd9\u4e9b\u7279\u6b8a\u503c\u7684\u8fd0\u7b97\u89c4\u5219\u4e5f\u5728\u6807\u51c6\u4e2d\u5b9a\u4e49\uff0c\u4ee5\u786e\u4fdd\u4e00\u81f4\u6027\u548c\u5b89\u5168\u6027\u3002\\n\\n5. **\u820d\u5165\u89c4\u5219**\uff1a\\n\\n   - IEEE 754 \u6807\u51c6\u5b9a\u4e49\u4e86\u591a\u79cd\u820d\u5165\u6a21\u5f0f\uff0c\u5305\u62ec\u5411\u6700\u63a5\u8fd1\u7684\u5076\u6570\u820d\u5165\u3001\u5411\u96f6\u820d\u5165\u3001\u5411\u6b63\u65e0\u7a77\u5927\u820d\u5165\u3001\u5411\u8d1f\u65e0\u7a77\u5927\u820d\u5165\u7b49\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u6839\u636e\u9700\u8981\u9009\u62e9\u9002\u5f53\u7684\u820d\u5165\u6a21\u5f0f\u3002\\n\\n6. **\u7cbe\u5ea6\u548c\u6ea2\u51fa**\uff1a\\n   - \u6807\u51c6\u8fd8\u89c4\u5b9a\u4e86\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u8981\u6c42\uff0c\u4ee5\u53ca\u5982\u4f55\u5904\u7406\u6ea2\u51fa\u60c5\u51b5\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6d6e\u70b9\u6570\u8fd0\u7b97\u53ef\u80fd\u4f1a\u5f15\u5165\u820d\u5165\u8bef\u5dee\uff0c\u7279\u522b\u662f\u5728\u5927\u8303\u56f4\u7684\u503c\u6216\u6781\u5c0f\u7684\u503c\u4e0a\u3002\u56e0\u6b64\uff0c\u5728\u8fdb\u884c\u6d6e\u70b9\u6570\u8fd0\u7b97\u65f6\uff0c\u7a0b\u5e8f\u5458\u5e94\u8be5\u8c28\u614e\u5904\u7406\uff0c\u907f\u514d\u4f9d\u8d56\u4e8e\u7cbe\u786e\u7684\u6bd4\u8f83\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u6d6e\u70b9\u6570\u8fd0\u7b97\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u7a33\u5b9a\u7684\u884c\u4e3a\uff0c\u7279\u522b\u662f\u5728\u6570\u503c\u5206\u6790\u4e2d\u3002\\n\\n\u603b\u4e4b\uff0cIEEE 754 \u6d6e\u70b9\u6570\u8fd0\u7b97\u89c4\u5219\u662f\u786e\u4fdd\u6d6e\u70b9\u6570\u5728\u8ba1\u7b97\u673a\u4e0a\u8fdb\u884c\u4e00\u81f4\u548c\u53ef\u9884\u6d4b\u8fd0\u7b97\u7684\u5173\u952e\u6807\u51c6\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u9700\u8981\u4e86\u89e3\u5176\u5c40\u9650\u6027\u548c\u53ef\u80fd\u5f15\u5165\u7684\u8bef\u5dee\u3002"},{"id":"/2023/10/08/rust-data-type","metadata":{"permalink":"/my-website/blog/2023/10/08/rust-data-type","source":"@site/blog/2023-10-08-rust-data-type/index.md","title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-08T00:00:00.000Z","formattedDate":"2023\u5e7410\u67088\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u6570\u636e\u7c7b\u578b","permalink":"/my-website/blog/tags/\u6570\u636e\u7c7b\u578b"},{"label":"\u901a\u7528\u7f16\u7a0b\u6982\u5ff5","permalink":"/my-website/blog/tags/\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"}],"readingTime":20.22,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u6570\u636e\u7c7b\u578b","\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"],"date":"2023-10-08T00:00:00.000Z"},"prevItem":{"title":"IEEE-754\u6807\u51c6","permalink":"/my-website/blog/2023/10/08/ieee-754"},"nextItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u51fd\u6570","permalink":"/my-website/blog/2023/10/08/rust-function"}},"content":"Rust \u662f\u4e00\u79cd**\u9759\u6001\u7c7b\u578b**(statically typed)\u7684\u8bed\u8a00\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u95f4\u5c31\u8981\u77e5\u9053\u6240\u6709\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u7f16\u8bd1\u5668\u901a\u5e38\u53ef\u4ee5\u6839\u636e\u503c\u548c\u4f7f\u7528\u65b9\u5f0f\u63a8\u5bfc\u51fa\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u3002\u5728\u7c7b\u578b\u53ef\u80fd\u662f\u591a\u79cd\u60c5\u51b5\u65f6\uff0c\u4f8b\u5982\u6211\u4eec\u4f7f\u7528 `parse` \u5c06 `String` \u8f6c\u6362\u6210\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u5fc5\u987b\u52a0\u4e0a\u4e00\u4e2a\u7c7b\u578b\u6807\u6ce8\uff1a\\n\\n```rust\\nlet guess: u32 = \\"42\\".parse().expect(\\"Not a number\\");\\n```\\n\\n\u5982\u679c\u4e0d\u6dfb\u52a0\u7c7b\u578b\u6807\u6ce8\u7684\u8bdd\uff0cRust \u5c06\u663e\u793a\u5982\u4e0b\u9519\u8bef\\n\\n```\\nerror[E0282]: type annotations needed\\n --\x3e src\\\\main.rs:2:9\\n  |\\n2 |     let guess = \\"42\\".parse().expect(\\"Not a number\\");\\n  |         ^^^^^\\n  |\\nhelp: consider giving `guess` an explicit type\\n  |\\n2 |     let guess: /* Type */ = \\"42\\".parse().expect(\\"Not a number\\");\\n  |              ++++++++++++\\n\\nFor more information about this error, try `rustc --explain E0282`.\\nerror: could not compile `guessing` (bin \\"guessing\\") due to previous error\\n```\\n\\n\u5e2e\u52a9\u4fe1\u606f\u4e2d\u7ed9\u51fa\u4e86\u4fee\u6539\u5efa\u8bae `consider giving \'guess\' an explicit type`[\u8003\u8651\u7ed9 guess \u4e00\u4e2a\u660e\u786e\u7684\u7c7b\u578b]\\n\\n\x3c!--truncate--\x3e\\n\\n## \u6807\u91cf\u7c7b\u578b\\n\\n\u6807\u91cf\uff08scalar\uff09\u7c7b\u578b\u8868\u793a\u5355\u4e2a\u503c\u3002Rust \u6709 4 \u4e2a\u57fa\u672c\u7684\u6807\u91cf\u7c7b\u578b\uff1a\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001\u5e03\u5c14\u578b\u548c\u5b57\u7b26\u3002\u4f60\u53ef\u80fd\u4ece\u5176\u4ed6\u8bed\u8a00\u4e86\u89e3\u8fc7\u8fd9\u4e9b\u7c7b\u578b\u3002\u4e0b\u9762\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u5b83\u4eec\u5728 Rust \u4e2d\u7684\u7528\u6cd5\u3002\\n\\n### \u6574\u6570\u7c7b\u578b\\n\\n\u6574\u6570\uff08integer\uff09\u662f\u6ca1\u6709\u5c0f\u6570\u90e8\u5206\u7684\u6570\u5b57\u3002\u4f8b\u5982 `u32`\uff0c\u6b64\u7c7b\u578b\u58f0\u660e\u8868\u660e\u5b83\u5173\u8054\u7684\u503c\u5e94\u8be5\u662f\u5360\u7528 32 \u4f4d\u7a7a\u95f4\u7684\u65e0\u7b26\u53f7\u6574\u578b\uff08\u6709\u7b26\u53f7\u6574\u578b\u4ee5 i \u5f00\u59cb\uff0ci \u662f\u82f1\u6587\u5355\u8bcd integer \u7684\u9996\u5b57\u6bcd\uff0c\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f u\uff0c\u4ee3\u8868\u65e0\u7b26\u53f7 unsigned \u7c7b\u578b\uff09\u3002\u4e0b\u8868\u663e\u793a\u4e86 Rust \u4e2d\u5185\u7f6e\u7684\u6574\u6570\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5b9a\u4e49\u5f62\u5f0f\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6765\u58f0\u660e\u6574\u6570\u503c\u7684\u7c7b\u578b\u3002\\n\\n| \u957f\u5ea6   | \u6709\u7b26\u53f7\u7c7b\u578b | \u65e0\u7b26\u53f7\u7c7b\u578b |\\n| ------ | ---------- | ---------- |\\n| 8 \u4f4d   | i8         | u8         |\\n| 16 \u4f4d  | i16        | u16        |\\n| 32 \u4f4d  | i32        | u32        |\\n| 64 \u4f4d  | i64        | u64        |\\n| 128 \u4f4d | i128       | u128       |\\n| arch   | isize      | usize      |\\n\\n\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u8868\u793a\u6570\u5b57\u80fd\u5426\u53d6\u8d1f\u6570\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u6570\u662f\u5426\u53ef\u80fd\u662f\u8d1f\u6570\uff08\u6709\u7b26\u53f7\u7c7b\u578b\uff09\uff0c\u6216\u4e00\u76f4\u4e3a\u6b63\u800c\u4e0d\u9700\u8981\u5e26\u4e0a\u7b26\u53f7\uff08\u65e0\u7b26\u53f7\u7c7b\u578b\uff09\u3002\\n\\n\u6bcf\u4e2a\u6709\u7b26\u53f7\u7c7b\u578b\u89c4\u5b9a\u7684\u6570\u5b57\u8303\u56f4\u662f -(2n - 1) ~ 2n - 1 - 1\uff0c\u5176\u4e2d n \u662f\u8be5\u5b9a\u4e49\u5f62\u5f0f\u7684\u4f4d\u957f\u5ea6\u3002\u6240\u4ee5 i8 \u53ef\u5b58\u50a8\u6570\u5b57\u8303\u56f4\u662f -(27) ~ 27 - 1\uff0c\u5373 -128 ~ 127\u3002\u65e0\u7b26\u53f7\u7c7b\u578b\u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u5b57\u8303\u56f4\u662f 0 ~ 2n - 1\uff0c\u6240\u4ee5 u8 \u80fd\u591f\u5b58\u50a8\u7684\u6570\u5b57\u4e3a 0 ~ 28 - 1\uff0c\u5373 0 ~ 255\u3002\\n\\n\u6b64\u5916\uff0c`isize` \u548c `usize` \u7c7b\u578b\u53d6\u51b3\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\uff0c\u5728\u8868\u4e2d\u8868\u793a\u4e3a\u201carch\u201d\uff1a\u82e5\u4f7f\u7528 64 \u4f4d\u67b6\u6784\u7cfb\u7edf\u5219\u4e3a 64 \u4f4d\uff0c\u82e5\u4f7f\u7528 32 \u4f4d\u67b6\u6784\u7cfb\u7edf\u5219\u4e3a 32 \u4f4d\u3002\\n\\n\u53ef\u6309\u4e0b\u8868\u4e2d\u6240\u793a\u7684\u4efb\u610f\u5f62\u5f0f\u6765\u7f16\u5199\u6574\u578b\u7684\u5b57\u9762\u91cf\u3002\u6ce8\u610f\uff0c\u53ef\u80fd\u5c5e\u4e8e\u591a\u79cd\u6570\u5b57\u7c7b\u578b\u7684\u6570\u5b57\u5b57\u9762\u91cf\u5141\u8bb8\u4f7f\u7528\u7c7b\u578b\u540e\u7f00\u6765\u6307\u5b9a\u7c7b\u578b\uff0c\u4f8b\u5982 `57u8`\u3002\u6570\u5b57\u5b57\u9762\u91cf\u8fd8\u53ef\u4ee5\u4f7f\u7528 `_` \u4f5c\u4e3a\u53ef\u89c6\u5206\u9694\u7b26\u4ee5\u65b9\u4fbf\u8bfb\u6570\uff0c\u5982 `1_000`\uff0c\u6b64\u503c\u548c `1000` \u76f8\u540c\u3002\\n\\n| \u6570\u5b57\u5b57\u9762\u91cf         | \u793a\u4f8b          |\\n| ------------------ | ------------- |\\n| \u5341\u8fdb\u5236             | `98_222`      |\\n| \u5341\u516d\u8fdb\u5236           | `0xff`        |\\n| \u516b\u8fdb\u5236             | `0o77`        |\\n| \u4e8c\u8fdb\u5236             | `0b1111_0000` |\\n| \u5b57\u8282 (\u4ec5\u9650\u4e8e `u8`) | `b\'A\'`        |\\n\\n\u90a3\u4e48\u8be5\u4f7f\u7528\u54ea\u79cd\u7c7b\u578b\u7684\u6574\u578b\u5462\uff1f\u5982\u679c\u4e0d\u786e\u5b9a\uff0c**Rust \u7684\u9ed8\u8ba4\u5f62\u5f0f\u901a\u5e38\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u6574\u578b\u9ed8\u8ba4\u662f `i32`**\u3002`isize` \u548c `usize` \u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u7528\u4f5c\u67d0\u4e9b\u96c6\u5408\u7684\u7d22\u5f15\u3002\\n\\n:::caution\\n\\n#### \u6574\u578b\u6ea2\u51fa\\n\\n\u6bd4\u65b9\u8bf4\u6709\u4e00\u4e2a `u8` \u7c7b\u578b\u7684\u53d8\u91cf \uff0c\u5b83\u53ef\u4ee5\u5b58\u653e\u4ece `0` \u5230 `255` \u7684\u503c\u3002\u90a3\u4e48\u5f53\u4f60\u5c06\u5176\u4fee\u6539\u4e3a\u8303\u56f4\u4e4b\u5916\u7684\u503c\uff0c\u6bd4\u5982 `256`\uff0c\u5219\u4f1a\u53d1\u751f**\u6574\u578b\u6ea2\u51fa**\uff08integer overflow\uff09\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e24\u79cd\u884c\u4e3a\u7684\u5176\u4e2d\u4e00\u79cd\u3002\u5f53\u5728\u8c03\u8bd5\uff08debug\uff09\u6a21\u5f0f\u7f16\u8bd1\u65f6\uff0cRust \u4f1a\u68c0\u67e5\u6574\u578b\u6ea2\u51fa\uff0c\u82e5\u5b58\u5728\u8fd9\u4e9b\u95ee\u9898\u5219\u4f7f\u7a0b\u5e8f\u5728\u7f16\u8bd1\u65f6 panic\u3002Rust \u4f7f\u7528 panic \u8fd9\u4e2a\u672f\u8bed\u6765\u8868\u660e\u7a0b\u5e8f\u56e0\u9519\u8bef\u800c\u9000\u51fa\u3002\\n\\n\u5728\u5f53\u4f7f\u7528 --release \u53c2\u6570\u8fdb\u884c\u53d1\u5e03\uff08release\uff09\u6a21\u5f0f\u6784\u5efa\u65f6\uff0cRust **\u4e0d**\u68c0\u6d4b\u4f1a\u5bfc\u81f4 panic \u7684\u6574\u578b\u6ea2\u51fa\u3002\u76f8\u53cd\u5f53\u68c0\u6d4b\u5230\u6574\u578b\u6ea2\u51fa\u65f6\uff0cRust \u4f1a\u8fdb\u884c\u4e00\u79cd\u88ab\u79f0\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801\u5305\u88f9\uff08two\u2019s complement wrapping\uff09\u7684\u64cd\u4f5c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5927\u4e8e\u8be5\u7c7b\u578b\u6700\u5927\u503c\u7684\u6570\u503c\u4f1a\u88ab\u201c\u5305\u88f9\u201d\u6210\u8be5\u7c7b\u578b\u80fd\u591f\u652f\u6301\u7684\u5bf9\u5e94\u6570\u5b57\u7684\u6700\u5c0f\u503c\u3002\u6bd4\u5982\u5728 u8 \u7684\u60c5\u51b5\u4e0b\uff0c256 \u53d8\u6210 0\uff0c257 \u53d8\u6210 1\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u7a0b\u5e8f\u4e0d\u4f1a `panic`\uff0c\u4f46\u662f\u8be5\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4e0d\u662f\u4f60\u671f\u671b\u7684\u503c\u3002\u4f9d\u8d56\u6574\u578b\u6ea2\u51fa\u5305\u88f9\u7684\u884c\u4e3a\u4e0d\u662f\u4e00\u79cd\u6b63\u786e\u7684\u505a\u6cd5\u3002\\n\\n\u8981\u663e\u5f0f\u5904\u7406\u6ea2\u51fa\u7684\u53ef\u80fd\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5e93\u9488\u5bf9\u539f\u59cb\u6570\u5b57\u7c7b\u578b\u63d0\u4f9b\u7684\u4ee5\u4e0b\u4e00\u7cfb\u5217\u65b9\u6cd5\uff1a\\n\\n- \u4f7f\u7528 `wrapping_*` \u65b9\u6cd5\u5728\u6240\u6709\u6a21\u5f0f\u4e0b\u8fdb\u884c\u5305\u88f9\uff0c\u4f8b\u5982 wrapping_add\\n- \u5982\u679c\u4f7f\u7528 `checked_*` \u65b9\u6cd5\u65f6\u53d1\u751f\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de None \u503c\\n- \u4f7f\u7528 `overflowing_*` \u65b9\u6cd5\u8fd4\u56de\u8be5\u503c\u548c\u4e00\u4e2a\u6307\u793a\u662f\u5426\u5b58\u5728\u6ea2\u51fa\u7684\u5e03\u5c14\u503c\\n- \u4f7f\u7528 `saturating_*` \u65b9\u6cd5\u4f7f\u503c\u8fbe\u5230\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\\n\\n:::\\n\\n### \u6d6e\u70b9\u7c7b\u578b\\n\\n**\u6d6e\u70b9\u6570**\uff08floating-point number\uff09\u662f\u5e26\u6709\u5c0f\u6570\u70b9\u7684\u6570\u5b57\uff0c\u5728 Rust \u4e2d\u6d6e\u70b9\u7c7b\u578b\uff08\u7b80\u79f0\u6d6e\u70b9\u578b\uff09\u6570\u5b57\u4e5f\u6709\u4e24\u79cd\u57fa\u672c\u7c7b\u578b\u3002Rust \u7684\u6d6e\u70b9\u578b\u662f `f32` \u548c `f64`\uff0c\u5b83\u4eec\u7684\u5927\u5c0f\u5206\u522b\u4e3a `32` \u4f4d\u548c `64` \u4f4d\u3002\u9ed8\u8ba4\u6d6e\u70b9\u7c7b\u578b\u662f `f64`\uff0c\u56e0\u4e3a\u5728\u73b0\u4ee3\u7684 CPU \u4e2d\u5b83\u7684\u901f\u5ea6\u4e0e `f32` \u7684\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u7cbe\u5ea6\u66f4\u9ad8\u3002**\u6240\u6709\u6d6e\u70b9\u578b\u90fd\u662f\u6709\u7b26\u53f7\u7684\u3002**\\n\\n\u4e0b\u9762\u662f\u4e00\u4e2a\u6f14\u793a\u6d6e\u70b9\u6570\u7684\u793a\u4f8b:\\n\\n```rust\\nfn main() {\\n    let x = 2.0; // f64\\n\\n    ley y: f32 = 3.0; // f32\\n}\\n```\\n\\n\u6d6e\u70b9\u6570\u6309\u7167 IEEE-754 \u6807\u51c6\u8868\u793a\u3002`f32` \u7c7b\u578b\u662f\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c`f64` \u4e3a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u3002\\n\\n### \u6570\u5b57\u8fd0\u7b97\\n\\nRust \u7684\u6240\u6709\u6570\u5b57\u7c7b\u578b\u90fd\u652f\u6301\u57fa\u672c\u6570\u5b66\u8fd0\u7b97\uff1a\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u548c\u53d6\u6a21\u8fd0\u7b97\u3002**\u6574\u6570\u9664\u6cd5\u4f1a\u5411\u4e0b\u53d6\u6574\u3002**\u4e0b\u9762\u4ee3\u7801\u6f14\u793a\u4e86\u5404\u4f7f\u7528\u4e00\u6761 let \u8bed\u53e5\u6765\u8bf4\u660e\u76f8\u5e94\u6570\u5b57\u8fd0\u7b97\u7684\u7528\u6cd5\uff1a\\n\\n```rust\\nfn main() {\\n    let sum = 5 + 10;\\n\\n    let difference = 95.5 - 4.3;\\n\\n    let product = 4 * 30;\\n\\n    let quotient = 56.7 / 32.2;\\n    let floored = 2 / 3; // Results in 0\\n\\n    let remainder = 43 % 5;\\n\\n    println!(\\n        \\"sum: {}, difference: {}, product: {}, quotient: {}, floored: {}, remainder: {}\\",\\n        sum, difference, product, quotient, floored, remainder\\n    );\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nsum: 15, difference: 91.2, product: 120, quotient: 1.7608695652173911, floored: 0, remainder: 3\\n```\\n\\n### \u5e03\u5c14\u7c7b\u578b\\n\\n\u548c\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0cRust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u4e5f\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u503c\uff1a`true` \u548c `false`\u3002\u5e03\u5c14\u503c\u7684\u5927\u5c0f\u4e3a 1 \u4e2a\u5b57\u8282\u3002Rust \u4e2d\u7684\u5e03\u5c14\u7c7b\u578b\u4f7f\u7528 `bool` \u58f0\u660e\u3002\u4f8b\u5982\uff1a\\n\\n```rust\\nfn main() {\\n    let t = true;\\n\\n    let f: bool = false;\\n}\\n```\\n\\n### \u5b57\u7b26\u7c7b\u578b\\n\\nRust \u7684 `char`\uff08\u5b57\u7b26\uff09\u7c7b\u578b\u662f\u8be5\u8bed\u8a00\u6700\u57fa\u672c\u7684\u5b57\u6bcd\u7c7b\u578b\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u58f0\u660e `char` \u503c\u7684\u4f8b\u5b50\uff1a\\n\\n```rust\\nfn main() {\\n    let c = \'z\';\\n    let z = \'\u2124\';\\n    let heart_eyed_cat = \'\ud83d\ude3b\';\\n    println!(\\"c: {}, z: {}, heart_eyed_cat: {}\\", c, z, heart_eyed_cat);\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\ncountry: z, province: \u2124, heart_eyed_cat: \ud83d\ude3b\\n```\\n\\n:::caution\\n\u6ce8\u610f\uff0c\u6211\u4eec\u58f0\u660e\u7684 `char` \u5b57\u9762\u91cf\u91c7\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765 [\u53cc\u5f15\u53f7\u4e5f\u53ef\u4ee5]\uff0c\u8fd9\u4e0e **\u5b57\u7b26\u4e32** \u5b57\u9762\u91cf\u4e0d\u540c\uff0c\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u3002Rust \u7684\u5b57\u7b26\u7c7b\u578b\u5927\u5c0f\u4e3a 4 \u4e2a\u5b57\u8282\uff0c\u8868\u793a\u7684\u662f\u4e00\u4e2a Unicode \u6807\u91cf\u503c\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u8868\u793a\u7684\u8fdc\u8fdc\u4e0d\u6b62\u662f ASCII\u3002\u6807\u97f3\u5b57\u6bcd\uff0c\u4e2d\u6587/\u65e5\u6587/\u97e9\u6587\u7684\u6587\u5b57\uff0cemoji\uff0c\u8fd8\u6709\u96f6\u5bbd\u7a7a\u683c(zero width space)\u5728 Rust \u4e2d\u90fd\u662f\u5408\u6cd5\u7684\u5b57\u7b26\u7c7b\u578b\u3002Unicode \u503c\u7684\u8303\u56f4\u4e3a `U+0000 ~ U+D7FF` \u548c `U+E000~U+10FFFF`\u3002\u4e0d\u8fc7\u201c\u5b57\u7b26\u201d\u5e76\u4e0d\u662f Unicode \u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u6240\u4ee5\u4eba\u5728\u76f4\u89c9\u4e0a\u5bf9\u201c\u5b57\u7b26\u201d\u7684\u7406\u89e3\u548c Rust \u7684\u5b57\u7b26\u6982\u5ff5\u5e76\u4e0d\u4e00\u81f4\u3002\\n:::\\n\\n\u5b57\u7b26\u4e32\u793a\u4f8b:\\n\\n```rust\\nfn main() {\\n    let country = \\"China\\";\\n    let province = \\"Hubei\\";\\n    let heart_eyed_cat = \\"\ud83d\ude3b\\";\\n\\n    println!(\\n        \\"country: {}, province: {}, heart_eyed_cat: {}\\",\\n        country, province, heart_eyed_cat\\n    );\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\ncountry: China, province: Hubei, heart_eyed_cat: \ud83d\ude3b\\n```\\n\\n:::caution\\n\\n\u5b57\u7b26\u4e32\u5e38\u91cf\u53ea\u80fd\u4f7f\u7528\u53cc\u5f15\u53f7`\\"`\u5305\u88f9\uff0c\u4e0d\u80fd\u7528\u5355\u5f15\u53f7`\'`\u5305\u88f9\uff0c\u5426\u5219 Rust \u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002\\n\\n```\\nerror: character literal may only contain one codepoint\\n --\x3e src\\\\main.rs:2:19\\n  |\\n2 |     let country = \'China\';\\n  |                   ^^^^^^^\\n  |\\nhelp: if you meant to write a `str` literal, use double quotes\\n  |\\n2 |     let country = \\"China\\";\\n  |                   ~~~~~~~\\nerror: character literal may only contain one codepoint\\n --\x3e src\\\\main.rs:3:20\\n  |\\n3 |     let province = \'Hubei\';\\n  |                    ^^^^^^^\\n  |\\nhelp: if you meant to write a `str` literal, use double quotes\\n  |\\n3 |     let province = \\"Hubei\\";\\n  |                    ~~~~~~~\\n\\nerror: could not compile `guessing` (bin \\"guessing\\") due to 2 previous errors\\n```\\n\\n\u4e0a\u8ff0\u63d0\u793a\u4e2d `if you meant to write a \'str\' literal, use double quotes` \u5df2\u7ecf\u7ed9\u51fa\u4e86\u5f88\u660e\u786e\u7684\u63d0\u793a\u4e86 `\u5982\u679c\u4f60\u60f3\u5199\u4e00\u4e2a\' str \'\u5b57\u9762\u503c\uff0c\u8bf7\u4f7f\u7528\u53cc\u5f15\u53f7`\uff0c\u5e76\u7ed9\u51fa\u4e86\u6b63\u786e\u7684\u683c\u5f0f\u3002\\n\\n:::\\n\\n## \u590d\u5408\u7c7b\u578b\\n\\n**\u590d\u5408\u7c7b\u578b**\uff08compound type\uff09\u53ef\u4ee5\u5c06\u591a\u4e2a\u503c\u7ec4\u5408\u6210\u4e00\u4e2a\u7c7b\u578b\u3002Rust \u6709\u4e24\u79cd\u57fa\u672c\u7684\u590d\u5408\u7c7b\u578b\uff1a\u5143\u7ec4\uff08tuple\uff09\u548c\u6570\u7ec4\uff08array\uff09\u3002\\n\\n### \u5143\u7ec4\u7c7b\u578b\\n\\n\u5143\u7ec4\u662f\u5c06\u591a\u79cd\u7c7b\u578b\u7684\u591a\u4e2a\u503c\u7ec4\u5408\u5230\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u4e2d\u7684\u4e00\u79cd\u57fa\u672c\u65b9\u5f0f\u3002\u5143\u7ec4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff1a\u58f0\u660e\u540e\uff0c\u5b83\u4eec\u5c31\u65e0\u6cd5\u589e\u957f\u6216\u7f29\u5c0f\u3002\\n\\n\u6211\u4eec\u901a\u8fc7\u5728\u5c0f\u62ec\u53f7\u5185\u5199\u5165\u4ee5\u9017\u53f7\u5206\u9694\u7684\u503c\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u3002\u5143\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\uff0c\u5e76\u4e14\u5143\u7ec4\u4e2d\u4e0d\u540c\u503c\u7684\u7c7b\u578b\u4e0d\u8981\u6c42\u662f\u76f8\u540c\u7684\u3002\u6211\u4eec\u5728\u4e0b\u9762\u793a\u4f8b\u4e2d\u6dfb\u52a0\u4e86\u53ef\u9009\u7684\u7c7b\u578b\u6807\u6ce8\uff1a\\n\\n```rust\\nfn main() {\\n    let tup: (i32, f64, u8) = (500, 6.4, 1);\\n}\\n```\\n\\n\u53d8\u91cf tup \u7ed1\u5b9a\u5230\u6574\u4e2a\u5143\u7ec4\uff0c\u56e0\u4e3a\u5143\u7ec4\u88ab\u8ba4\u4f5c\u662f\u5355\u4e2a\u590d\u5408\u5143\u7d20\u3002 \u60f3\u4ece\u5143\u7ec4\u4e2d\u83b7\u53d6\u4e2a\u522b\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d\u6765\u89e3\u6784\uff08destructure\uff09\u5143\u7ec4\u7684\u4e00\u4e2a\u503c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```rust\\nfn main() {\\n    let tup: (i32, f64, u8) = (500, 6.4, 1);\\n    let (x, y, z) = tup;\\n    println!(\\"The value of tup is: ({}, {}, {})\\", x, y, z);\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nThe value of tup is: (500, 6.4, 1)\\n```\\n\\n\u8be5\u7a0b\u5e8f\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5143\u7ec4\u5e76\u5c06\u5176\u7ed1\u5b9a\u5230\u53d8\u91cf tup \u4e0a\u3002 \u7136\u540e\u5b83\u501f\u52a9 let \u6765\u4f7f\u7528\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d tup\uff0c\u5e76\u5c06\u5b83\u5206\u89e3\u6210\u4e09\u4e2a\u5355\u72ec\u7684\u53d8\u91cf x\u3001y \u548c z\u3002 \u8fd9\u8fc7\u7a0b\u79f0\u4e3a\u89e3\u6784\uff08destructuring\uff09\uff0c\u56e0\u4e3a\u5b83\u5c06\u5355\u4e2a\u5143\u7ec4\u5206\u4e3a\u4e09\u90e8\u5206\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u6253\u5370\u51fa y \u503c\uff0c\u4e3a 6.4\u3002\\n\\n\u9664\u4e86\u901a\u8fc7\u6a21\u5f0f\u5339\u914d\u8fdb\u884c\u89e3\u6784\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53e5\u70b9\uff08.\uff09\u8fde\u4e0a\u8981\u8bbf\u95ee\u7684\u503c\u7684\u7d22\u5f15\u6765\u76f4\u63a5\u8bbf\u95ee\u5143\u7ec4\u5143\u7d20\u3002\u4f8b\u5982\uff1a\\n\\n```rust\\nfn main() {\\n    let tup: (i32, f64, u8) = (500, 6.4, 1);\\n    println!(\\"The value of tup is: ({}, {}, {})\\", tup.0, tup.1, tup.2);\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nThe value of tup is: (500, 6.4, 1)\\n```\\n\\n\u548c\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e00\u6837\uff0c\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7d22\u5f15\u4e3a 0\u3002\\n\\n\u6ca1\u6709\u4efb\u4f55\u503c\u7684\u5143\u7ec4 () \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\uff0c\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u4e5f\u5199\u6210 ()\u3002\u8be5\u7c7b\u578b\u88ab\u79f0\u4e3a\u5355\u5143\u7c7b\u578b\uff08unit type\uff09\uff0c\u8be5\u503c\u88ab\u79f0\u4e3a\u5355\u5143\u503c\uff08unit value\uff09\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e0d\u8fd4\u56de\u4efb\u4f55\u5176\u4ed6\u503c\uff0c\u5c31\u9690\u5f0f\u5730\u8fd4\u56de\u5355\u5143\u503c\u3002\\n\\n### \u6570\u7ec4\u7c7b\u578b\\n\\n\u5c06\u591a\u4e2a\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528\u6570\u7ec4\uff08array\uff09\u3002\u4e0e\u5143\u7ec4\u4e0d\u540c\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b\u3002\u4e0e\u67d0\u4e9b\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u4e0d\u540c\uff0cRust \u4e2d\u7684\u6570\u7ec4\u5177\u6709\u56fa\u5b9a\u957f\u5ea6\u3002\\n\\n\u6211\u4eec\u5728\u65b9\u62ec\u53f7\u5185\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u5f62\u5f0f\u5c06\u503c\u5199\u5230\u6570\u7ec4\u4e2d\uff1a\\n\\n```rust\\nfn main() {\\n    let a = [1, 2, 3, 4, 5];\\n}\\n```\\n\\n\u5f53\u4f60\u5e0c\u671b\u5c06\u6570\u636e\u5206\u914d\u5230\u6808\uff08stack\uff09\u800c\u4e0d\u662f\u5806\uff08heap\uff09\u65f6\uff0c\u6216\u8005\u5f53\u4f60\u5e0c\u671b\u786e\u4fdd\u59cb\u7ec8\u5177\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u5143\u7d20\u65f6\uff0c\u6570\u7ec4\u7279\u522b\u6709\u7528\u3002\u4f46\u5b83\u4eec\u4e0d\u50cf vector\uff08\u8bd1\u6ce8\uff1a\u4e2d\u6587\u5b57\u9762\u7ffb\u8bd1\u4e3a\u201c\u5411\u91cf\u201d\uff0c\u5728 Rust \u4e2d\u610f\u4e49\u4e3a\u201c\u52a8\u6001\u6570\u7ec4\uff0c\u53ef\u53d8\u6570\u7ec4\u201d\uff09\u7c7b\u578b\u90a3\u4e48\u7075\u6d3b\u3002vector \u7c7b\u578b\u7c7b\u4f3c\u4e8e\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u7684\u96c6\u5408\u7c7b\u578b\uff0c\u5176\u5927\u5c0f\u5141\u8bb8\u589e\u957f\u6216\u7f29\u5c0f\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u662f\u4f7f\u7528\u6570\u7ec4\u8fd8\u662f vector\uff0c\u90a3\u5c31\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a vector\u3002\\n\\n\u4e0d\u8fc7\u5f53\u4f60\u660e\u786e\u5143\u7d20\u6570\u91cf\u4e0d\u9700\u8981\u6539\u53d8\u65f6\uff0c\u6570\u7ec4\u4f1a\u66f4\u6709\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u6708\u4efd\u7684\u540d\u79f0\uff0c\u4f60\u5f88\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u7684\u662f\u6570\u7ec4\u800c\u4e0d\u662f vector\uff0c\u56e0\u4e3a\u4f60\u77e5\u9053\u5b83\u59cb\u7ec8\u5305\u542b 12 \u4e2a\u5143\u7d20\uff1a\\n\\n```rust\\nlet months = [\\"January\\", \\"February\\", \\"March\\", \\"April\\", \\"May\\", \\"June\\", \\"July\\",\\n              \\"August\\", \\"September\\", \\"October\\", \\"November\\", \\"December\\"];\\n```\\n\\n\u4f7f\u7528\u65b9\u62ec\u53f7\u7f16\u5199\u6570\u7ec4\u7684\u7c7b\u578b\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u3001\u5206\u53f7\uff0c\u7136\u540e\u662f\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```rust\\nlet a: [i32; 5] = [1, 2, 3, 4, 5];\\n```\\n\\n\u8fd9\u91cc\uff0c`i32` \u662f\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u3002\u5206\u53f7\u4e4b\u540e\uff0c\u6570\u5b57 `5` \u8868\u660e\u8be5\u6570\u7ec4\u5305\u542b 5 \u4e2a\u5143\u7d20\u3002\\n\\n\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u7f16\u5199\u6570\u7ec4\u7684\u7c7b\u578b\u770b\u8d77\u6765\u7c7b\u4f3c\u4e8e\u521d\u59cb\u5316\u6570\u7ec4\u7684\u53e6\u4e00\u79cd\u8bed\u6cd5\uff1a\u5982\u679c\u8981\u4e3a\u6bcf\u4e2a\u5143\u7d20\u521b\u5efa\u5305\u542b\u76f8\u540c\u503c\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u6307\u5b9a\u521d\u59cb\u503c\uff0c\u540e\u8ddf\u5206\u53f7\uff0c\u7136\u540e\u5728\u65b9\u62ec\u53f7\u4e2d\u6307\u5b9a\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```rust\\nfn main() {\\n    let a: [i32; 5] = [3; 5];\\n    println!(\\n        \\"The value of a is: [{}, {}, {}, {}, {}]\\",\\n        a[0], a[1], a[2], a[3], a[4]\\n    );\\n}\\n```\\n\\n\u53d8\u91cf\u540d\u4e3a `a` \u7684\u6570\u7ec4\u5c06\u5305\u542b `5` \u4e2a\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u7684\u503c\u521d\u59cb\u5316\u4e3a `3`\u3002\u8fd9\u79cd\u5199\u6cd5\u4e0e `let a = [3, 3, 3, 3, 3];` \u6548\u679c\u76f8\u540c\uff0c\u4f46\u66f4\u7b80\u6d01\u3002\\n\\n:::caution\\n\\n#### \u5143\u7ec4\u7d22\u5f15 vs \u6570\u7ec4\u7d22\u5f15\\n\\n```rust\\nfn main() {\\n    let a = [3; 5];\\n    println!(\\n        \\"The value of a is: [{}, {}, {}, {}, {}]\\",\\n        a.0, a.1, a.2, a.3, a.4\\n    );\\n}\\n```\\n\\n\u5982\u679c\u4e0a\u8ff0\u6570\u7ec4\u4f7f\u7528\u7684\u662f\u70b9\u53f7\u5f15\u7528\u6307\u5b9a\u7d22\u5f15\u7684\u6570\u636e\uff0c\u5c06\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef:\\n\\n```\\nerror[E0609]: no field `0` on type `[{integer}; 5]`\\n --\x3e src\\\\main.rs:5:11\\n  |\\n5 |         a.0, a.1, a.2, a.3, a.4\\n  |         --^\\n  |         |\\n  |         help: instead of using tuple indexing, use array indexing: `a[0]`\\n\\nerror[E0609]: no field `1` on type `[{integer}; 5]`\\n --\x3e src\\\\main.rs:5:16\\n  |\\n5 |         a.0, a.1, a.2, a.3, a.4\\n  |              --^\\n  |              |\\n  |              help: instead of using tuple indexing, use array indexing: `a[1]`\\n\\nerror[E0609]: no field `2` on type `[{integer}; 5]`\\n --\x3e src\\\\main.rs:5:21\\n  |\\n5 |         a.0, a.1, a.2, a.3, a.4\\n  |                   --^\\n  |                   |\\n  |                   help: instead of using tuple indexing, use array indexing: `a[2]`\\n\\nerror[E0609]: no field `3` on type `[{integer}; 5]`\\n --\x3e src\\\\main.rs:5:26\\n  |\\n5 |         a.0, a.1, a.2, a.3, a.4\\n  |                        |\\n  |                        help: instead of using tuple indexing, use array indexing: `a[3]`\\n\\nerror[E0609]: no field `4` on type `[{integer}; 5]`\\n --\x3e src\\\\main.rs:5:31\\n  |\\n5 |         a.0, a.1, a.2, a.3, a.4\\n  |                             --^\\n  |                             |\\n  |                             help: instead of using tuple indexing, use array indexing: `a[4]`\\n\\nFor more information about this error, try `rustc --explain E0609`.\\nerror: could not compile `guessing` (bin \\"guessing\\") due to 5 previous errors\\n```\\n\\n\u5e2e\u52a9\u63d0\u793a\u7ed9\u7684\u4e5f\u5f88\u6e05\u6670\uff0c\u63d0\u793a\u6211\u4eec\u4f7f\u7528\u6570\u7ec4\u7d22\u5f15 `a[0]` \u66ff\u6362\u5143\u7ec4\u7d22\u5f15 `a.0`\u3002\\n\\n:::\\n\\n#### \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\\n\\n\u6570\u7ec4\u662f\u53ef\u4ee5\u5728\u6808\u4e0a\u5206\u914d\u7684\u5df2\u77e5\u56fa\u5b9a\u5927\u5c0f\u7684\u5355\u4e2a\u5185\u5b58\u5757\u3002\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```rust\\nfn main() {\\n    let a = [1, 2, 3, 4, 5];\\n\\n    let first = a[0];\\n    let second = a[1];\\n}\\n```\\n\\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u540d\u4e3a `first` \u7684\u53d8\u91cf\u5c06\u83b7\u5f97\u503c `1`\uff0c\u56e0\u4e3a\u5b83\u662f\u6570\u7ec4\u4e2d\u7d22\u5f15 `[0]` \u5904\u7684\u503c\u3002\u540d\u4e3a second \u7684\u53d8\u91cf\u5c06\u4ece\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15 `[1]` \u4e2d\u83b7\u53d6\u5f97 `2`\u3002\\n\\n#### \u65e0\u6548\u7684\u6570\u7ec4\u5143\u7d20\u8bbf\u95ee\\n\\n```rust\\nuse std::io;\\n\\nfn main() {\\n    let a = [1, 3, 5, 7, 9];\\n    println!(\\"Please enter an array index.\\");\\n    let mut index = String::new();\\n\\n    io::stdin()\\n        .read_line(&mut index)\\n        .expect(\\"Failed to read line\\");\\n    let index: usize = index\\n        .trim()\\n        .parse()\\n        .expect(\\"Index entered was not a number\\");\\n\\n    let element = a[index];\\n    println!(\\n        \\"The value of the element at index {} is: {}\\",\\n        index, element\\n    );\\n}\\n```\\n\\n\u6b64\u4ee3\u7801\u7f16\u8bd1\u6210\u529f\u3002\u5982\u679c\u4f7f\u7528 cargo run \u6765\u8fd0\u884c\u6b64\u4ee3\u7801\u5e76\u8f93\u5165 0\u30011\u30012\u30013 \u6216 4\uff0c\u5219\u7a0b\u5e8f\u5c06\u6253\u5370\u6570\u7ec4\u5bf9\u5e94\u7d22\u5f15\u7684\u503c\u3002\u5982\u679c\u8f93\u5165\u7684\u662f\u8d85\u51fa\u6570\u7ec4\u672b\u5c3e\u7684\u6570\u5b57\uff0c\u4f8b\u5982 5\uff0c\u5219\u4f1a\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a\\n\\n```\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.02s\\n     Running `target\\\\debug\\\\guessing.exe`\\nPlease enter an array index.\\n5\\nthread \'main\' panicked at \'index out of bounds: the len is 5 but the index is 5\', src\\\\main.rs:16:19\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\\nerror: process didn\'t exit successfully: `target\\\\debug\\\\guessing.exe` (exit code: 101)\\n```\\n\\n\u8be5\u7a0b\u5e8f\u5728\u7d22\u5f15\u64cd\u4f5c\u4e2d\u4f7f\u7528\u65e0\u6548\u503c\u65f6\u5bfc\u81f4**\u8fd0\u884c\u65f6**\uff08runtime\uff09\u9519\u8bef\u3002\u7a0b\u5e8f\u9000\u51fa\u5e76\u663e\u793a\u9519\u8bef\u6d88\u606f\uff0c\u672a\u6267\u884c\u540e\u9762\u7684 println! \u8bed\u53e5\u3002\u5f53\u4f60\u5c1d\u8bd5\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u65f6\uff0cRust \u5c06\u68c0\u67e5\u4f60\u6307\u5b9a\u7684\u7d22\u5f15\u662f\u5426\u5c0f\u4e8e\u6570\u7ec4\u957f\u5ea6\u3002\u5982\u679c\u7d22\u5f15\u5927\u4e8e\u6216\u7b49\u4e8e\u6570\u7ec4\u957f\u5ea6\uff0cRust \u4f1a\u51fa\u73b0 `panic`\u3002\u8fd9\u79cd\u68c0\u67e5\u5fc5\u987b\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\uff0c\u5c24\u5176\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u53ef\u80fd\u65e0\u6cd5\u77e5\u9053\u7528\u6237\u4e4b\u540e\u8fd0\u884c\u4ee3\u7801\u65f6\u5c06\u8f93\u5165\u4ec0\u4e48\u503c\u3002\\n\\n\u8fd9\u662f Rust \u5728\u5b89\u5168\u539f\u5219\u5b9e\u8df5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u3002\u5728\u5f88\u591a\u4f4e\u7ea7\u8bed\u8a00\u4e2d\uff0c\u5e76\u4e0d\u8fdb\u884c\u8fd9\u79cd\u68c0\u67e5\uff0c\u800c\u4e14\u5728\u4f60\u4f7f\u7528\u4e0d\u6b63\u786e\u7684\u7d22\u5f15\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95ee\u65e0\u6548\u7684\u5185\u5b58\u3002Rust \u901a\u8fc7\u7acb\u5373\u9000\u51fa\u6765\u7684\u65b9\u5f0f\u9632\u6b62\u8fd9\u79cd\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5141\u8bb8\u5185\u5b58\u8bbf\u95ee\u5e76\u7ee7\u7eed\u8fd0\u884c\u7a0b\u5e8f\u3002"},{"id":"/2023/10/08/rust-function","metadata":{"permalink":"/my-website/blog/2023/10/08/rust-function","source":"@site/blog/2023-10-08-rust-function/index.md","title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u51fd\u6570","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-08T00:00:00.000Z","formattedDate":"2023\u5e7410\u67088\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u51fd\u6570","permalink":"/my-website/blog/tags/\u51fd\u6570"},{"label":"\u901a\u7528\u7f16\u7a0b\u6982\u5ff5","permalink":"/my-website/blog/tags/\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"}],"readingTime":11.265,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u51fd\u6570","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u51fd\u6570","\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"],"date":"2023-10-08T00:00:00.000Z"},"prevItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u6570\u636e\u7c7b\u578b","permalink":"/my-website/blog/2023/10/08/rust-data-type"},"nextItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u53d8\u91cf","permalink":"/my-website/blog/2023/10/07/rust-valiables"}},"content":"\u51fd\u6570\u5728 Rust \u4ee3\u7801\u4e2d\u5f88\u666e\u904d\u3002\u4f60\u5df2\u7ecf\u89c1\u8fc7\u8bed\u8a00\u4e2d\u6700\u91cd\u8981\u7684\u51fd\u6570\u4e4b\u4e00\uff1a`main` \u51fd\u6570\uff0c\u5b83\u662f\u5f88\u591a\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\u4f60\u4e5f\u89c1\u8fc7 `fn` \u5173\u952e\u5b57\uff0c\u5b83\u7528\u6765\u58f0\u660e\u65b0\u51fd\u6570\u3002\\n\\nRust \u4ee3\u7801\u4e2d\u7684\u51fd\u6570\u548c\u53d8\u91cf\u540d\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\uff08snake case\uff0c\u76f4\u8bd1\u4e3a\u86c7\u5f62\u547d\u540d\u6cd5\uff09\u89c4\u8303\u98ce\u683c\u3002\u5728\u4e0b\u5212\u7ebf\u547d\u540d\u6cd5\u4e2d\uff0c\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u5e76\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u9694\u5355\u8bcd\u3002\u8fd9\u662f\u4e00\u4e2a\u5305\u542b\u51fd\u6570\u5b9a\u4e49\u793a\u4f8b\u7684\u7a0b\u5e8f\uff1a\\n\\n```rust\\nfn main() {\\n    println!(\\"Hello, world!\\");\\n\\n    another_function();\\n}\\n\\nfn another_function() {\\n    println!(\\"Another function.\\");\\n}\\n```\\n\\n\x3c!--truncate--\x3e\\n\\nRust \u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u4ee5 `fn` \u5f00\u59cb\uff0c\u540e\u8ddf\u7740\u51fd\u6570\u540d\u548c\u4e00\u5bf9\u5706\u62ec\u53f7\u3002\u5927\u62ec\u53f7\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u4f53\u5728\u54ea\u91cc\u5f00\u59cb\u548c\u7ed3\u675f\u3002\\n\\n\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u540d\u540e\u8ddf\u5706\u62ec\u53f7\u6765\u8c03\u7528\u6211\u4eec\u5b9a\u4e49\u8fc7\u7684\u4efb\u610f\u51fd\u6570\u3002\u56e0\u4e3a\u7a0b\u5e8f\u4e2d\u5df2\u5b9a\u4e49 `another_function` \u51fd\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728 `main` \u51fd\u6570\u4e2d\u8c03\u7528\u5b83\u3002\u6ce8\u610f\uff0c\u6e90\u7801\u4e2d `another_function` \u5b9a\u4e49\u5728 `main` \u51fd\u6570**\u4e4b\u540e**\uff1b\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5728\u4e4b\u524d\u3002**Rust \u4e0d\u5173\u5fc3\u51fd\u6570\u5b9a\u4e49\u4e8e\u4f55\u5904\uff0c\u53ea\u8981\u5b9a\u4e49\u4e86\u5c31\u884c\u3002**\\n\\n### \u53c2\u6570\\n\\n\u51fd\u6570\u4e5f\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u62e5\u6709\u53c2\u6570\uff08parameter\uff09\uff0c\u53c2\u6570\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u662f\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206\u3002\u5f53\u51fd\u6570\u62e5\u6709\u53c2\u6570\uff08\u5f62\u53c2\uff09\u65f6\uff0c\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u53c2\u6570\u63d0\u4f9b\u5177\u4f53\u7684\u503c\uff08\u5b9e\u53c2\uff09\u3002\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u4e9b\u5177\u4f53\u503c\u88ab\u79f0\u4e3a\u5b9e\u53c2\uff08argument\uff09\uff0c\u4f46\u662f\u5728\u65e5\u5e38\u4ea4\u6d41\u4e2d\uff0c\u4eba\u4eec\u503e\u5411\u4e8e\u4e0d\u533a\u5206\u4f7f\u7528 parameter \u548c argument \u6765\u8868\u793a\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u53d8\u91cf\u6216\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u5165\u7684\u5177\u4f53\u503c\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u6709\u591a\u4e2a\u53c2\u6570\u65f6\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u793a\u4f8b:\\n\\n```rust\\nfn main() {\\n    println!(\\"Hello, world!\\");\\n\\n    another_function(3, 4);\\n}\\n\\nfn another_function(x: i32, y: i32) {\\n    println!(\\"The sum of x and y is: {}\\", x + y);\\n}\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c:\\n\\n```\\nHello, world!\\nThe sum of a and b is: 7\\n```\\n\\n`another_function` \u51fd\u6570\u4e2d\u58f0\u660e\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u547d\u540d\u4e3a `x` \u548c `y`\uff0c\u5e76\u6307\u5b9a\u7c7b\u578b\u4e3a `i32`\u3002\u5f53\u6211\u4eec\u5c06 `3` \u548c `4` \u4f20\u7ed9 `another_function` \u51fd\u6570\u65f6\uff0c`println!` \u5b8f\u5c06 `x` \u548c `y` \u76f8\u52a0\u7684\u548c\u653e\u5165\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e2d\u5927\u62ec\u53f7\u7684\u4f4d\u7f6e\u3002\\n\\n\u5728\u51fd\u6570\u7b7e\u540d\u4e2d\uff0c\u5fc5\u987b\u58f0\u660e\u6bcf\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u5728 Rust \u8bbe\u8ba1\u4e2d\u7ecf\u8fc7\u614e\u91cd\u8003\u8651\u7684\u51b3\u5b9a\uff1a\u8981\u6c42\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u63d0\u4f9b\u7c7b\u578b\u6807\u6ce8\uff0c\u610f\u5473\u7740\u7f16\u8bd1\u5668\u51e0\u4e4e\u4ece\u4e0d\u9700\u8981\u4f60\u5728\u4ee3\u7801\u7684\u5176\u4ed6\u5730\u65b9\u6ce8\u660e\u7c7b\u578b\u6765\u6307\u51fa\u4f60\u7684\u610f\u56fe\u3002\\n\\n### \u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\\n\\n\u51fd\u6570\u4f53\u7531\u4e00\u7cfb\u5217\u8bed\u53e5\u7ec4\u6210\uff0c\u4e5f\u53ef\u9009\u62e9\u4ee5\u8868\u8fbe\u5f0f\u7ed3\u5c3e\u3002\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4ecb\u7ecd\u7684\u51fd\u6570\u8fd8\u6ca1\u6709\u5305\u542b\u7ed3\u5c3e\u8868\u8fbe\u5f0f\uff0c\u4e0d\u8fc7\u4f60\u5df2\u7ecf\u770b\u5230\u4e86\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u3002\u56e0\u4e3a Rust \u662f\u4e00\u95e8\u57fa\u4e8e\u8868\u8fbe\u5f0f\uff08expression-based\uff09\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u7406\u89e3\u7684\u91cd\u8981\u533a\u522b\u3002\u5176\u4ed6\u8bed\u8a00\u6ca1\u6709\u8fd9\u6837\u7684\u533a\u522b\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u770b\u770b\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u533a\u522b\u5982\u4f55\u5f71\u54cd\u51fd\u6570\u4f53\u3002\\n\\n**\u8bed\u53e5**\uff08statement\uff09\u662f\u6267\u884c\u4e00\u4e9b\u64cd\u4f5c\u4f46\u4e0d\u8fd4\u56de\u503c\u7684\u6307\u4ee4\u3002\u8868\u8fbe\u5f0f\uff08expression\uff09\u8ba1\u7b97\u5e76\u4ea7\u751f\u4e00\u4e2a\u503c\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e9b\u4f8b\u5b50\uff1a\\n\\n\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u8fc7\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u3002\u4f7f\u7528 `let` \u5173\u952e\u5b57\u521b\u5efa\u53d8\u91cf\u5e76\u7ed1\u5b9a\u4e00\u4e2a\u503c\u662f\u4e00\u4e2a\u8bed\u53e5\u3002\u4f8b\u5982\uff0c`let y = 6;` \u662f\u4e00\u4e2a\u8bed\u53e5\u3002\\n\\n\u51fd\u6570\u5b9a\u4e49\u4e5f\u662f\u8bed\u53e5\uff0c\u4e0a\u9762\u6574\u4e2a\u4f8b\u5b50\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u8bed\u53e5\u3002\\n\\n\u8bed\u53e5\u4e0d\u8fd4\u56de\u503c\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u628a `let` \u8bed\u53e5\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u4ee3\u7801\u5c1d\u8bd5\u505a\u7684\u90a3\u6837\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\uff1a\\n\\n```rust\\nfn main() {\\n    let x = (let y = 6);\\n}\\n```\\n\\n\u5f53\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u9519\u8bef\uff1a\\n\\n```\\n   Compiling function-demo v0.1.0 (E:\\\\github\\\\rust-projects\\\\function-demo)\\nerror: expected expression, found `let` statement\\n --\x3e src\\\\main.rs:2:14\\n  |\\n2 |     let x = (let y = 6);\\n  |              ^^^\\n\\nerror: expected expression, found statement (`let`)\\n --\x3e src\\\\main.rs:2:14\\n  |\\n2 |     let x = (let y = 6);\\n  |              ^^^^^^^^^\\n  |\\n  = note: variable declaration using `let` is a statement\\n\\nerror[E0658]: `let` expressions in this position are unstable\\n --\x3e src\\\\main.rs:2:14\\n  |\\n2 |     let x = (let y = 6);\\n  |              ^^^^^^^^^\\n  |\\n  = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\\n\\nwarning: unnecessary parentheses around assigned value\\n --\x3e src\\\\main.rs:2:13\\n  |\\n2 |     let x = (let y = 6);\\n  |             ^         ^\\n  |\\n  = note: `#[warn(unused_parens)]` on by default\\nhelp: remove these parentheses\\n  |\\n2 -     let x = (let y = 6);\\n2 +     let x = let y = 6;\\n  |\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nwarning: `function-demo` (bin \\"function-demo\\") generated 1 warning\\nerror: could not compile `function-demo` (bin \\"function-demo\\") due to 3 previous errors; 1 warning emitted\\n```\\n\\n`let y = 6` \u8bed\u53e5\u5e76\u4e0d\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u6ca1\u6709\u53ef\u4ee5\u7ed1\u5b9a\u5230 `x` \u4e0a\u7684\u503c\u3002\u8fd9\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u4f8b\u5982 `C` \u548c `Ruby`\uff0c\u5b83\u4eec\u7684\u8d4b\u503c\u8bed\u53e5\u4f1a\u8fd4\u56de\u6240\u8d4b\u7684\u503c\u3002\u5728\u8fd9\u4e9b\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u4e48\u5199 `x = y = 6`\uff0c\u8fd9\u6837 `x` \u548c `y` \u7684\u503c\u90fd\u662f `6`\uff1b**Rust \u4e2d\u4e0d\u80fd\u8fd9\u6837\u5199**\u3002\\n\\n\u8868\u8fbe\u5f0f\u4f1a\u8ba1\u7b97\u51fa\u4e00\u4e2a\u503c\uff0c\u5e76\u4e14\u4f60\u63a5\u4e0b\u6765\u8981\u7528 Rust \u7f16\u5199\u7684\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u7531\u8868\u8fbe\u5f0f\u7ec4\u6210\u3002\u8003\u8651\u4e00\u4e2a\u6570\u5b66\u8fd0\u7b97\uff0c\u6bd4\u5982 `5 + 6`\uff0c\u8fd9\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u5e76\u8ba1\u7b97\u51fa\u503c `11`\u3002\u51fd\u6570\u8c03\u7528\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u5b8f\u8c03\u7528\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u6211\u4eec\u7528\u6765\u521b\u5efa\u65b0\u4f5c\u7528\u57df\u7684\u5927\u62ec\u53f7\uff08\u4ee3\u7801\u5757\uff09 {} \u4e5f\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982\uff1a\\n\\n```rust\\nfn main() {\\n    let y = {\\n        let x = 3;\\n        x + 1\\n    };\\n\\n    println!(\\"The value of y is: {}\\", y);\\n}\\n```\\n\\n\u8f93\u51fa:\\n\\n```\\nThe value of y is: 4\\n```\\n\\n\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u8ba1\u7b97\u7ed3\u679c\u662f `4`\u3002\u8fd9\u4e2a\u503c\u4f5c\u4e3a `let` \u8bed\u53e5\u7684\u4e00\u90e8\u5206\u88ab\u7ed1\u5b9a\u5230 `y` \u4e0a\u3002\u6ce8\u610f\uff0c`x + 1` **\u884c\u7684\u672b\u5c3e\u6ca1\u6709\u5206\u53f7**\uff0c\u8fd9\u4e0e\u4f60\u76ee\u524d\u89c1\u8fc7\u7684\u5927\u90e8\u5206\u4ee3\u7801\u884c\u4e0d\u540c\u3002**\u8868\u8fbe\u5f0f\u7684\u7ed3\u5c3e\u6ca1\u6709\u5206\u53f7\u3002\u5982\u679c\u5728\u8868\u8fbe\u5f0f\u7684\u672b\u5c3e\u52a0\u4e0a\u5206\u53f7\uff0c\u90a3\u4e48\u5b83\u5c31\u8f6c\u6362\u4e3a\u8bed\u53e5\uff0c\u800c\u8bed\u53e5\u4e0d\u4f1a\u8fd4\u56de\u503c\u3002**\u5728\u63a5\u4e0b\u6765\u63a2\u8ba8\u51fd\u6570\u8fd4\u56de\u503c\u548c\u8868\u8fbe\u5f0f\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u8fd9\u4e00\u70b9\u3002\\n\\n### \u5e26\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\\n\\n\u51fd\u6570\u53ef\u4ee5\u5411\u8c03\u7528\u5b83\u7684\u4ee3\u7801\u8fd4\u56de\u503c\u3002\u6211\u4eec\u5e76\u4e0d\u5bf9\u8fd4\u56de\u503c\u547d\u540d\uff0c\u4f46\u8981\u5728\u7bad\u5934\uff08`->`\uff09\u540e\u58f0\u660e\u5b83\u7684\u7c7b\u578b\u3002\u5728 Rust \u4e2d\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7b49\u540c\u4e8e\u51fd\u6570\u4f53\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u3002\u4f7f\u7528 `return` \u5173\u952e\u5b57\u548c\u6307\u5b9a\u503c\uff0c\u53ef\u4ee5\u4ece\u51fd\u6570\u4e2d\u63d0\u524d\u8fd4\u56de\uff1b\u4f46\u5927\u90e8\u5206\u51fd\u6570\u9690\u5f0f\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u51fd\u6570\u7684\u4f8b\u5b50\uff1a\\n\\n```rust\\nfn five() -> i32 {\\n    5\\n}\\n\\nfn main() {\\n    let y = five();\\n    println!(\\"The value of y is: {}\\", y);\\n}\\n```\\n\\n\u5728 `five` \u51fd\u6570\u4e2d\u6ca1\u6709\u51fd\u6570\u8c03\u7528\u3001\u5b8f\uff0c\u751a\u81f3\u6ca1\u6709 `let` \u8bed\u53e5\u2014\u2014\u53ea\u6709\u6570\u5b57 `5` \u672c\u8eab\u3002\u8fd9\u5728 Rust \u4e2d\u662f\u4e00\u4e2a\u5b8c\u5168\u6709\u6548\u7684\u51fd\u6570\u3002\u6ce8\u610f\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e5f\u88ab\u6307\u5b9a\u597d\uff0c\u5373 `-> i32`\u3002\u5c1d\u8bd5\u8fd0\u884c\u4ee3\u7801\uff1b\u8f93\u51fa\u5e94\u5982\u4e0b\u6240\u793a\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\function-demo> cargo run\\n   Compiling function-demo v0.1.0 (E:\\\\github\\\\rust-projects\\\\function-demo)\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.44s\\n     Running `target\\\\debug\\\\function-demo.exe`\\nThe value of y is: 5\\n```\\n\\n`five` \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f `5`\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u7c7b\u578b\u662f `i32`\u3002\u8ba9\u6211\u4eec\u4ed4\u7ec6\u68c0\u67e5\u4e00\u4e0b\u8fd9\u6bb5\u4ee3\u7801\u3002\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u90e8\u5206\uff1a\u9996\u5148\uff0c`let x = five();` \u8fd9\u4e00\u884c\u8868\u660e\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u7684\u8fd4\u56de\u503c\u521d\u59cb\u5316\u4e00\u4e2a\u53d8\u91cf\u3002\u56e0\u4e3a `five` \u51fd\u6570\u8fd4\u56de `5`\uff0c\u8fd9\u4e00\u884c\u4e0e\u5982\u4e0b\u4ee3\u7801\u76f8\u540c\uff1a\\n\\n```rust\\nlet y = 5;\\n```\\n\\n\u5176\u6b21\uff0c`five` \u51fd\u6570\u6ca1\u6709\u53c2\u6570\u5e76\u5b9a\u4e49\u4e86\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u4e0d\u8fc7\u51fd\u6570\u4f53\u53ea\u6709\u5355\u5355\u4e00\u4e2a `5` \u4e5f\u6ca1\u6709\u5206\u53f7\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6b63\u662f\u6211\u4eec\u60f3\u8981\u8fd4\u56de\u7684\u503c\u3002\\n\\n\u8ba9\u6211\u4eec\u770b\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\\n\\n```rust\\nfn main() {\\n    let y = plus_one(5);\\n    println!(\\"The value of y is: {}\\", y);\\n}\\n\\nfn plus_one(x: i32) -> i32 {\\n    x + 1\\n}\\n```\\n\\n\u8fd0\u884c\u4ee3\u7801\u4f1a\u6253\u5370\u51fa `The value of x is: 6`\u3002\u4f46\u5982\u679c\u5728\u5305\u542b `x + 1` \u7684\u884c\u5c3e\u52a0\u4e0a\u4e00\u4e2a\u5206\u53f7\uff0c\u628a\u5b83\u4ece\u8868\u8fbe\u5f0f\u53d8\u6210\u8bed\u53e5\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u3002\\n\\n```rust\\nfn main() {\\n    let y = plus_one(5);\\n    println!(\\"The value of y is: {}\\", y);\\n}\\n\\nfn plus_one(x: i32) -> i32 {\\n    x + 1;\\n}\\n```\\n\\n\u8fd0\u884c\u4ee3\u7801\u4f1a\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef\uff0c\u5982\u4e0b\uff1a\\n\\n```\\nPS E:\\\\github\\\\rust-projects\\\\function-demo> cargo run\\n   Compiling function-demo v0.1.0 (E:\\\\github\\\\rust-projects\\\\function-demo)\\nerror[E0308]: mismatched types\\n --\x3e src\\\\main.rs:6:24\\n  |\\n6 | fn plus_one(x: i32) -> i32 {\\n  |    --------            ^^^ expected `i32`, found `()`\\n  |    |\\n  |    implicitly returns `()` as its body has no tail or `return` expression\\n7 |     x + 1;\\n  |          - help: remove this semicolon to return this value\\n\\nFor more information about this error, try `rustc --explain E0308`.\\nerror: could not compile `function-demo` (bin \\"function-demo\\") due to previous error\\n```\\n\\n\u4e3b\u8981\u7684\u9519\u8bef\u4fe1\u606f \u201cmismatched types\u201d\uff08\u7c7b\u578b\u4e0d\u5339\u914d\uff09\u63ed\u793a\u4e86\u8fd9\u6bb5\u4ee3\u7801\u7684\u6838\u5fc3\u95ee\u9898\u3002\u51fd\u6570 `plus_one` \u7684\u5b9a\u4e49\u8bf4\u660e\u5b83\u8981\u8fd4\u56de\u4e00\u4e2a `i32` \u7c7b\u578b\u7684\u503c\uff0c\u4e0d\u8fc7\u8bed\u53e5\u5e76\u4e0d\u4f1a\u8fd4\u56de\u503c\uff0c\u6b64\u503c\u7531\u5355\u5143\u7c7b\u578b () \u8868\u793a\uff0c\u8868\u793a\u4e0d\u8fd4\u56de\u503c\u3002\u56e0\u4e3a\u4e0d\u8fd4\u56de\u503c\u4e0e\u51fd\u6570\u5b9a\u4e49\u76f8\u77db\u76fe\uff0c\u4ece\u800c\u51fa\u73b0\u4e00\u4e2a\u9519\u8bef\u3002\u5728\u8f93\u51fa\u4e2d\uff0cRust \u63d0\u4f9b\u4e86\u4e00\u6761\u4fe1\u606f\uff0c\u53ef\u80fd\u6709\u52a9\u4e8e\u7ea0\u6b63\u8fd9\u4e2a\u9519\u8bef\uff1a\u5b83\u5efa\u8bae\u5220\u9664\u5206\u53f7\uff0c\u8fd9\u5c06\u4fee\u590d\u9519\u8bef\u3002\\n\\n\u5982\u679c\u5728 `plus_one` \u51fd\u6570\u4e2d\u589e\u52a0\u8fd4\u56de\u8bed\u53e5\u7684\u8bdd\u4e5f\u80fd\u4fee\u590d\u4e0a\u8ff0\u9519\u8bef\uff0c\u4f7f\u7528 `return` \u8bed\u53e5\u663e\u793a\u5730\u8fd4\u56de\uff0c\u4fee\u6539\u5982\u4e0b:\\n\\n```rust\\nfn main() {\\n    let y = plus_one(5);\\n    println!(\\"The value of y is: {}\\", y);\\n}\\n\\nfn plus_one(x: i32) -> i32 {\\n    let result = x + 1;\\n    return result;\\n}\\n```\\n\\n\u7ecf\u8fc7\u4e0a\u8ff0\u4fee\u6539\u540e\u4e5f\u80fd\u6b63\u5e38\u8fd4\u56de\u8ba1\u7b97\u7684\u7ed3\u679c\u3002"},{"id":"/2023/10/07/rust-valiables","metadata":{"permalink":"/my-website/blog/2023/10/07/rust-valiables","source":"@site/blog/2023-10-07-rust-valiables/index.md","title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u53d8\u91cf","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-10-07T00:00:00.000Z","formattedDate":"2023\u5e7410\u67087\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"\u53d8\u91cf","permalink":"/my-website/blog/tags/\u53d8\u91cf"},{"label":"\u901a\u7528\u7f16\u7a0b\u6982\u5ff5","permalink":"/my-website/blog/tags/\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"}],"readingTime":18.065,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u53d8\u91cf","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","\u53d8\u91cf","\u901a\u7528\u7f16\u7a0b\u6982\u5ff5"],"date":"2023-10-07T00:00:00.000Z"},"prevItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u51fd\u6570","permalink":"/my-website/blog/2023/10/08/rust-function"},"nextItem":{"title":"Rust \u73af\u5883\u5b89\u88c5","permalink":"/my-website/blog/2023/09/26/rust-install"}},"content":"### \u53d8\u91cf\u548c\u53ef\u53d8\u6027\\n\\n\u5728 Rust \u4e2d\uff0c\u53d8\u91cf\u548c\u53ef\u53d8\u6027\u662f\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u7528\u4e8e\u7ba1\u7406\u6570\u636e\u7684\u72b6\u6001\u548c\u8bbf\u95ee\u6743\u9650\u3002\\n\\n1. **\u53d8\u91cf\uff08Variables\uff09**\uff1a\\n\\n   - \u5728 Rust \u4e2d\uff0c\u53d8\u91cf\u662f\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u6807\u8bc6\u7b26\u3002\u53d8\u91cf\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5e03\u5c14\u503c\u3001\u5b57\u7b26\u3001\u7ed3\u6784\u4f53\u7b49\u3002\\n   - \u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\uff08immutable\uff09\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u65e6\u8d4b\u503c\u540e\uff0c\u5176\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u4f8b\u5982\uff1a\\n     ```rust\\n     let x = 5;  // \u4e0d\u53ef\u53d8\u53d8\u91cf\\n     ```\\n   - \u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u597d\u5904\u662f\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u4e0d\u4f1a\u5728\u4e0d\u7ecf\u610f\u95f4\u88ab\u4fee\u6539\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u5b89\u5168\u6027\u3002\\n\\n2. **\u53ef\u53d8\u6027\uff08Mutability\uff09**\uff1a\\n   - \u5728 Rust \u4e2d\uff0c\u5982\u679c\u9700\u8981\u66f4\u6539\u53d8\u91cf\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528`mut`\u5173\u952e\u5b57\u6765\u58f0\u660e\u53ef\u53d8\u53d8\u91cf\u3002\u53ef\u53d8\u53d8\u91cf\u5141\u8bb8\u5728\u5176\u4f5c\u7528\u57df\u5185\u4fee\u6539\u5176\u503c\u3002\u4f8b\u5982\uff1a\\n     ```rust\\n     let mut y = 10;  // \u53ef\u53d8\u53d8\u91cf\\n     y = y + 1;       // \u53ef\u4ee5\u4fee\u6539 y \u7684\u503c\\n     ```\\n   - \u4f7f\u7528\u53ef\u53d8\u6027\u65f6\uff0c\u9700\u8981\u8c28\u614e\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u6f5c\u5728\u7684\u5e76\u53d1\u95ee\u9898\u548c\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002Rust \u7684\u53ef\u501f\u7528\u89c4\u5219\u548c\u6240\u6709\u6743\u7cfb\u7edf\u5e2e\u52a9\u786e\u4fdd\u4e86\u53ef\u53d8\u6027\u7684\u5b89\u5168\u4f7f\u7528\u3002\\n\\n\u603b\u7ed3\uff1a\\n\\n- \u53d8\u91cf\u7528\u4e8e\u5b58\u50a8\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u4e0d\u53ef\u53d8\u7684\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff09\u6216\u53ef\u53d8\u7684\uff08\u4f7f\u7528`mut`\u5173\u952e\u5b57\u58f0\u660e\uff09\u3002\\n- \u4e0d\u53ef\u53d8\u53d8\u91cf\u5728\u8d4b\u503c\u540e\u4e0d\u80fd\u66f4\u6539\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ee3\u7801\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\\n- \u53ef\u53d8\u53d8\u91cf\u5141\u8bb8\u5728\u5176\u4f5c\u7528\u57df\u5185\u4fee\u6539\u5176\u503c\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u53ef\u53d8\u6027\u5f15\u5165\u7684\u6f5c\u5728\u95ee\u9898\u3002\\n- Rust \u7684\u6240\u6709\u6743\u7cfb\u7edf\u548c\u501f\u7528\u89c4\u5219\u6709\u52a9\u4e8e\u786e\u4fdd\u53ef\u53d8\u6027\u7684\u5b89\u5168\u4f7f\u7528\uff0c\u9632\u6b62\u6570\u636e\u7ade\u6001\u548c\u5185\u5b58\u4e0d\u5b89\u5168\u95ee\u9898\u3002\\n\x3c!--truncate--\x3e\\n\\n### \u5e38\u91cf\\n\\n\u5728 Rust \u4e2d\uff0c\u5e38\u91cf\uff08constants\uff09\u662f\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u66f4\u6539\u5176\u503c\u7684\u53d8\u91cf\u3002\u5e38\u91cf\u7684\u540d\u79f0\u901a\u5e38\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u7684\u547d\u540d\u7ea6\u5b9a\uff0c\u5e76\u4e14\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u660e\u786e\u6307\u5b9a\u5176\u7c7b\u578b\u3002\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u4e0d\u540c\uff0c\u5e38\u91cf\u7684\u503c\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff0c\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u8ba1\u7b97\u6216\u66f4\u6539\u3002\u8fd9\u4f7f\u5f97\u5e38\u91cf\u975e\u5e38\u9002\u5408\u5b58\u50a8\u4e0d\u4f1a\u66f4\u6539\u7684\u914d\u7f6e\u53c2\u6570\u3001\u6570\u5b66\u5e38\u6570\u548c\u5176\u4ed6\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u503c\u3002\\n\\n\u4ee5\u4e0b\u662f\u5b9a\u4e49\u548c\u4f7f\u7528\u5e38\u91cf\u7684\u4e00\u822c\u8bed\u6cd5\uff1a\\n\\n```rust\\nconst THREE_HOURS_IN_SECONDS: u32 = 3;\\nfn main() {\\n    // const THREE_HOURS_IN_SECONDS: u32 = 3 * 60;\\n    // println!(\\n    //     \\"The value of THREE_HOURS_IN_SECONDS is: {}\\",\\n    //     THREE_HOURS_IN_SECONDS\\n    // );\\n    const THREE_HOURS_IN_SECONDS: u32 = 3 * 60 * 60;\\n    println!(\\n        \\"The value of THREE_HOURS_IN_SECONDS is: {}\\",\\n        THREE_HOURS_IN_SECONDS\\n    );\\n}\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c\uff1a\\n\\n```\\nwarning: constant `THREE_HOURS_IN_SECONDS` is never used\\n --\x3e src\\\\main.rs:1:7\\n  |\\n1 | const THREE_HOURS_IN_SECONDS: u32 = 42;\\n  |       ^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nwarning: `variables` (bin \\"variables\\") generated 1 warning\\n    Finished dev [unoptimized + debuginfo] target(s) in 0.45s\\n     Running `target\\\\debug\\\\variables.exe`\\nThe value of THREE_HOURS_IN_SECONDS is: 10800\\n```\\n\\n\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a `THREE_HOURS_IN_SECONDS` \u7684\u5e38\u91cf\uff0c\u7c7b\u578b\u4e3a `u32`\uff0c\u5e76\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a `3 * 60 * 60`\u3002\u7136\u540e\uff0c\u5728 `main` \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u6253\u5370\u4e86\u5e38\u91cf\u7684\u503c\u3002\\n\\n\u5982\u679c\u6253\u5f00\u6ce8\u91ca\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a\\n\\n```\\n   Compiling variables v0.1.0 (E:\\\\github\\\\rust-projects\\\\variables)\\nerror[E0428]: the name `THREE_HOURS_IN_SECONDS` is defined multiple times\\n --\x3e src\\\\main.rs:8:5\\n  |\\n3 |     const THREE_HOURS_IN_SECONDS: u32 = 3 * 60;\\n  |     ------------------------------------------- previous definition of the value `THREE_HOURS_IN_SECONDS` here\\n...\\n8 |     const THREE_HOURS_IN_SECONDS: u32 = 3 * 60 * 60;\\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `THREE_HOURS_IN_SECONDS` redefined here\\n  |\\n  = note: `THREE_HOURS_IN_SECONDS` must be defined only once in the value namespace of this block\\n\\nFor more information about this error, try `rustc --explain E0428`.\\nerror: could not compile `variables` (bin \\"variables\\") due to previous error\\n```\\n\\n\u603b\u7ed3\uff1a\\n\\n- \u5e38\u91cf\u7684\u7c7b\u578b\u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\uff0c\u5b83\u4e0d\u80fd\u50cf\u4e0d\u53ef\u53d8\u53d8\u91cf\u90a3\u6837\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad\u3002\\n- \u5e38\u91cf\u53ef\u4ee5\u5728\u4efb\u4f55\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\uff0c\u5e76\u4e14\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u53ef\u4ee5\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u8bbf\u95ee\u3002\\n- \u5e38\u91cf\u7684\u503c\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u66f4\u6539\uff0c\u5b83\u4eec\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u3002\\n- \u5e38\u91cf\u540d\u79f0\u901a\u5e38\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\u4ee5\u4fbf\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u533a\u5206\u5f00\u6765\u3002\\n- \u540c\u4e00\u4f5c\u7528\u57df\u5e38\u91cf\u4e0d\u53ef\u91cd\u590d\u58f0\u660e\uff0c\u4e0d\u540c\u4f5c\u7528\u57df\u5e38\u91cf\u53ef\u4ee5\u91cd\u590d\u58f0\u660e\uff0c\u4f46\u662f Rust \u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u62a5\u58f0\u660e\u7684\u53d8\u91cf\u672a\u5f15\u7528\u7684\u8b66\u544a\u3002\\n\\n\u5e38\u91cf\u5728 Rust \u4e2d\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u7f16\u7a0b\u5de5\u5177\uff0c\u7528\u4e8e\u5b58\u50a8\u7a0b\u5e8f\u7684\u914d\u7f6e\u4fe1\u606f\u3001\u5e38\u91cf\u53c2\u6570\u548c\u5176\u4ed6\u5728\u8fd0\u884c\u65f6\u4e0d\u4f1a\u66f4\u6539\u7684\u503c\u3002\u5b83\u4eec\u6709\u52a9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u5b89\u5168\u6027\u3002\\n\\n### \u906e\u853d\\n\\n\u5728 Rust \u4e2d\uff0c\u906e\u853d(shadowing)\u662f\u4e00\u79cd\u5c06\u4e00\u4e2a\u53d8\u91cf\u5f15\u5165\u5230\u4e00\u4e2a\u66f4\u5185\u90e8\u4f5c\u7528\u57df\u7684\u8fc7\u7a0b\uff0c\u4ee5\u9690\u85cf(\u6216\u906e\u853d)\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u53d8\u91cf\u3002\u906e\u853d\u5141\u8bb8\u6211\u4eec\u5728 **\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u540c\u540d\u53d8\u91cf** \uff0c\u6bcf\u6b21\u58f0\u660e\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u65b0\u7684\u53d8\u91cf\u4f1a\u9690\u85cf\u5148\u524d\u58f0\u660e\u7684\u540c\u540d\u53d8\u91cf\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u6539\u53d8\u53d8\u91cf\u7684\u53ef\u53d8\u6027\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u53d8\u53d8\u91cf\u7684\u503c\u548c\u7c7b\u578b\u3002\\n\\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u8bf4\u660e\u4e86 Rust \u4e2d\u7684\u906e\u853d:\\n\\n```rust\\nfn main() {\\n    let x = \\"\u4f60\u597d~\\";  // \u5916\u90e8\u4f5c\u7528\u57df\u7684 x\\n    println!(\\"x in outer scope: {}\\", x);    // \u6253\u5370\u5916\u90e8\u4f5c\u7528\u57df\u7684 x\\n\\n    {\\n        let x = 10; // \u5185\u90e8\u4f5c\u7528\u57df\u4e2d\u7684 x \u906e\u853d\u4e86\u5916\u90e8\u4f5c\u7528\u57df\u7684 x\\n        println!(\\"x in inner scope: {}\\", x);    // \u6253\u5370\u5185\u90e8\u4f5c\u7528\u57df\u7684 x\\n    }\\n\\n    // \u65b0\u58f0\u660e\u7684\u53d8\u91cf\u4f1a\u906e\u853d\u5148\u524d\u7684\u540c\u540d\u53d8\u91cf\\n    let x = x.len();\\n    // \u5728\u8fd9\u91cc\u53c8\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u7684 x, \u56e0\u4e3a\u5185\u90e8\u4f5c\u7528\u57df\u7684 x \u5df2\u7ecf\u8d85\u51fa\u4e86\u8303\u56f4\\n    println!(\\"x in outer scope: {}\\", x); // 6\\n}\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c:\\n\\n```\\nx in outer scope: \u4f60\u597d~\\nx in inner scope: 10\\nx in outer scope: 7\\n```\\n\\n\u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a x \u7684\u53d8\u91cf\uff0c\u5e76\u5728\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u8d4b\u4e88\u5b83\u503c \\"\u4f60\u597d~\\"\u3002\u7136\u540e\uff0c\u5728\u5185\u90e8\u4f5c\u7528\u57df\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a x \u7684\u65b0\u53d8\u91cf\uff0c\u5b83\u906e\u853d\u4e86\u5916\u90e8\u4f5c\u7528\u57df\u7684 x\u3002\u5728\u5185\u90e8\u4f5c\u7528\u57df\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u548c\u4fee\u6539\u5185\u90e8\u4f5c\u7528\u57df\u7684 x\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u4f5c\u7528\u57df\u7684 x\u3002\u4e00\u65e6\u5185\u90e8\u4f5c\u7528\u57df\u7ed3\u675f\uff0c\u5185\u90e8\u4f5c\u7528\u57df\u7684 x \u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u4f5c\u7528\u57df\u7684 x\u3002\\n\\n\u906e\u853d\u901a\u5e38\u7528\u4e8e\u5f15\u5165\u65b0\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u66f4\u6539\u73b0\u6709\u53d8\u91cf\u3002\u8fd9\u5141\u8bb8\u5728\u4e0d\u6539\u53d8\u53ef\u53d8\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u53d8\u91cf\u7684\u503c\u548c\u7c7b\u578b\u8fdb\u884c\u66f4\u6539\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cRust \u7684\u7f16\u8bd1\u5668\u4f1a\u8b66\u544a\u60a8\u5173\u4e8e\u672a\u4f7f\u7528\u7684\u53d8\u91cf\uff0c\u56e0\u6b64\u906e\u853d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8b66\u544a\uff0c\u4f46\u53ef\u4ee5\u5b89\u5168\u5730\u5ffd\u7565\u8fd9\u4e9b\u8b66\u544a\u3002\\n\\n### \u95ee\u9898\\n\\n1. \u4ee3\u7801\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c\uff1f\\n\\n   ```rust\\n   fn main() {\\n       println!(\\n       \\"The value of THREE_HOURS_IN_SECONDS is: {}\\",\\n       THREE_HOURS_IN_SECONDS\\n       );\\n       const THREE_HOURS_IN_SECONDS: u32 = 3 * 60 * 60;\\n    }\\n   ```\\n\\n   \u5728\u60a8\u63d0\u4f9b\u7684\u4ee3\u7801\u793a\u4f8b\u4e2d\uff0c\u867d\u7136\u5728 `println!` \u5b8f\u4e2d\u4f3c\u4e4e\u5f15\u7528\u4e86\u5e38\u91cf `THREE_HOURS_IN_SECONDS` \u5728\u5176\u58f0\u660e\u4e4b\u524d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\u8fd9\u662f\u56e0\u4e3a\u5728 Rust \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u9759\u6001\u5206\u6790\u5e76\u6267\u884c\u540d\u4e3a \\"\u540d\u5b57\u89e3\u6790\uff08name resolution\uff09\\" \u7684\u6b65\u9aa4\uff0c\u4ee5\u786e\u5b9a\u53d8\u91cf\u548c\u5e38\u91cf\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\u3002\\n\\n   \u5177\u4f53\u6765\u8bf4\uff0cRust \u7f16\u8bd1\u5668\u4f1a\u5728\u6574\u4e2a\u4ee3\u7801\u6587\u4ef6\u4e2d\u67e5\u627e\u5e38\u91cf `THREE_HOURS_IN_SECONDS` \u7684\u5b9a\u4e49\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728 `println!` \u5b8f\u7684\u5185\u90e8\u3002\u5982\u679c\u627e\u5230\u5e38\u91cf\u5b9a\u4e49\uff0c\u5b83\u5c31\u4f1a\u5c06\u8be5\u5e38\u91cf\u7684\u503c\u63d2\u5165\u5230 `println!` \u5b8f\u4e2d\uff0c\u7136\u540e\u5728\u8fd0\u884c\u65f6\u5c06\u5176\u6253\u5370\u51fa\u6765\u3002\\n\\n   \u8fd9\u662f\u56e0\u4e3a\u5e38\u91cf\u7684\u503c\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u95f4\u6267\u884c\u8fd9\u79cd\u64cd\u4f5c\u3002\u8fd9\u4e0e\u53d8\u91cf\u7684\u884c\u4e3a\u4e0d\u540c\uff0c\u53d8\u91cf\u7684\u503c\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4f7f\u7528\u4e4b\u524d\u58f0\u660e\u3002\\n\\n   \u867d\u7136\u8fd9\u5728 Rust \u4e2d\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u4e3a\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6e05\u6670\u6027\uff0c\u901a\u5e38\u5efa\u8bae\u5728\u4f7f\u7528\u5e38\u91cf\u4e4b\u524d\u5148\u58f0\u660e\u5b83\u4eec\uff0c\u4ee5\u9632\u6b62\u53ef\u80fd\u7684\u6df7\u6dc6\u6216\u8bef\u89e3\u3002\\n\\n2. Rust \u4e2d\u5e38\u91cf\u662f\u5426\u5b58\u5728\u906e\u853d\\n\\n   \u5728 Rust \u4e2d\uff0c\u5e38\u91cf\u4e0d\u4f1a\u53d1\u751f\u906e\u853d\uff08shadowing\uff09\u7684\u60c5\u51b5\u3002\u906e\u853d\u901a\u5e38\u662f\u4e0e\u53d8\u91cf\u76f8\u5173\u7684\u6982\u5ff5\uff0c\u800c\u4e0d\u662f\u5e38\u91cf\u3002\u5e38\u91cf\u5728\u5176\u4f5c\u7528\u57df\u5185\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u5141\u8bb8\u5728\u76f8\u540c\u4f5c\u7528\u57df\u5185\u591a\u6b21\u5b9a\u4e49\u76f8\u540c\u540d\u79f0\u7684\u5e38\u91cf\u3002\\n\\n   \u4f8b\u5982\uff0c\u4ee5\u4e0b\u793a\u4f8b\u662f\u975e\u6cd5\u7684\uff0c\u56e0\u4e3a\u5b83\u5c1d\u8bd5\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u5b9a\u4e49\u76f8\u540c\u540d\u79f0\u7684\u5e38\u91cf\uff1a\\n\\n   ```rust\\n   const MY_CONSTANT: i32 = 42;\\n   const MY_CONSTANT: f64 = 3.14;  // \u9519\u8bef\uff1a\u5e38\u91cf\u540d\u91cd\u590d\u5b9a\u4e49\\n\\n   fn main() {\\n       println!(\\"The value of MY_CONSTANT is: {}\\", MY_CONSTANT);\\n   }\\n   ```\\n\\n   \u4e0e\u53d8\u91cf\u4e0d\u540c\uff0c\u5e38\u91cf\u4e0d\u80fd\u88ab\u906e\u853d\u6216\u91cd\u65b0\u5b9a\u4e49\u3002\u4e00\u65e6\u5e38\u91cf\u5728\u67d0\u4e2a\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\uff0c\u5b83\u5c31\u4e0d\u80fd\u5728\u76f8\u540c\u7684\u4f5c\u7528\u57df\u5185\u518d\u6b21\u5b9a\u4e49\u6216\u4fee\u6539\u3002\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u5e38\u91cf\u7684\u552f\u4e00\u6027\u548c\u7a33\u5b9a\u6027\u3002\\n\\n   Rust \u5e38\u91cf\u662f\u5426\u5141\u8bb8\u5141\u8bb8\u58f0\u660e\u591a\u6b21\\n   \u5728 Rust \u4e2d\uff0c\u5e38\u91cf\u4e0d\u5141\u8bb8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\uff0c\u5373\u5e38\u91cf\u7684\u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u5e38\u91cf\uff0c\u7f16\u8bd1\u5668\u5c06\u4f1a\u4ea7\u751f\u9519\u8bef\u3002\\n\\n   \u8fd9\u662f\u56e0\u4e3a\u5e38\u91cf\u5728\u7f16\u8bd1\u65f6\u88ab\u8d4b\u4e88\u4e00\u4e2a\u786e\u5b9a\u7684\u3001\u4e0d\u53ef\u66f4\u6539\u7684\u503c\uff0c\u5e76\u4e14\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u591a\u6b21\u5b9a\u4e49\u76f8\u540c\u540d\u79f0\u7684\u5e38\u91cf\u3002\u8fd9\u6709\u52a9\u4e8e\u786e\u4fdd\u5e38\u91cf\u7684\u552f\u4e00\u6027\uff0c\u9632\u6b62\u5728\u7a0b\u5e8f\u4e2d\u5f15\u5165\u6df7\u6dc6\u6216\u4e0d\u4e00\u81f4\u7684\u503c\u3002\\n\\n   \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u76f8\u540c\u540d\u79f0\u7684\u5e38\u91cf\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff1a\\n\\n   ```rust\\n   const MY_CONSTANT: i32 = 42;\\n   const MY_CONSTANT: f64 = 3.14;  // \u9519\u8bef\uff1a\u5e38\u91cf\u540d\u91cd\u590d\u5b9a\u4e49\\n\\n   fn main() {\\n       println!(\\"The value of MY_CONSTANT is: {}\\", MY_CONSTANT);\\n   }\\n   ```\\n\\n   \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c1d\u8bd5\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u4e24\u6b21\u58f0\u660e\u540d\u4e3a`MY_CONSTANT`\u7684\u5e38\u91cf\uff0c\u4e00\u4e2a\u662f`i32`\u7c7b\u578b\uff0c\u53e6\u4e00\u4e2a\u662f`f64`\u7c7b\u578b\u3002\u8fd9\u5c06\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u5e38\u91cf\u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002\u8981\u89e3\u51b3\u6b64\u9519\u8bef\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u540d\u79f0\u6216\u5c06\u5b83\u4eec\u5206\u5f00\u5230\u4e0d\u540c\u7684\u4f5c\u7528\u57df\u4e2d\u3002\\n\\n3. Rust \u4e2d\u5e38\u91cf\u548c\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u533a\u522b\\n\\n   \u5728 Rust \u4e2d\uff0c\u5e38\u91cf\uff08constants\uff09\u548c\u4e0d\u53ef\u53d8\u53d8\u91cf\uff08immutable variables\uff09\u4e4b\u95f4\u6709\u4e00\u4e9b\u5173\u952e\u7684\u533a\u522b\uff0c\u5c3d\u7ba1\u5b83\u4eec\u90fd\u6d89\u53ca\u5230\u4e0d\u53ef\u53d8\u6027\u3002\\n\\n   1. **\u8d4b\u503c\u548c\u53ef\u53d8\u6027**\\n\\n      - **\u5e38\u91cf**: \u5e38\u91cf\u5728\u58f0\u660e\u65f6\u5fc5\u987b\u8d4b\u4e88\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\uff0c\u5e76\u4e14\u4e00\u65e6\u8d4b\u503c\u540e\uff0c\u5b83\u4eec\u7684\u503c\u5728\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u90fd\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u5e38\u91cf\u5728\u58f0\u660e\u65f6\u4f7f\u7528 `const` \u5173\u952e\u5b57\uff0c\u5e76\u4e14\u901a\u5e38\u91c7\u7528\u5927\u5199\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u7684\u547d\u540d\u7ea6\u5b9a\uff0c\u4f8b\u5982 `const THREE_HOURS_IN_SECONDS: i32 = 3 * 60 * 60;`\u3002\\n      - **\u4e0d\u53ef\u53d8\u53d8\u91cf**: \u4e0d\u53ef\u53d8\u53d8\u91cf\u5728\u58f0\u660e\u540e\u53ef\u4ee5\u8d4b\u503c\u4e00\u6b21\uff0c\u5e76\u4e14\u4e00\u65e6\u8d4b\u503c\u540e\uff0c\u5b83\u4eec\u7684\u503c\u4e5f\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u4e0d\u53ef\u53d8\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u4f7f\u7528`let` \u5173\u952e\u5b57\uff0c\u4f8b\u5982 `let x = 10;`\u3002\\n\\n   2. **\u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f**\\n\\n      - **\u5e38\u91cf**: \u5e38\u91cf\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\uff08global scope\uff09\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u8bbf\u95ee\uff0c\u65e0\u8bba\u5b83\u4eec\u88ab\u5b9a\u4e49\u5728\u54ea\u4e2a\u4f5c\u7528\u57df\u5185\u3002\\n      - **\u4e0d\u53ef\u53d8\u53d8\u91cf**: \u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u901a\u5e38\u662f\u6709\u9650\u7684\uff0c\u9650\u5b9a\u5728\u5b83\u4eec\u88ab\u58f0\u660e\u7684\u4ee3\u7801\u5757\u5185\u3002\u8fd9\u6709\u52a9\u4e8e\u51cf\u5c0f\u4e0d\u53ef\u53d8\u6027\u7684\u8303\u56f4\uff0c\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u7ef4\u62a4\u6027\u3002\\n\\n   3. **\u7c7b\u578b\u548c\u53ef\u53d8\u6027**\\n\\n      - **\u5e38\u91cf**: \u5e38\u91cf\u7684\u7c7b\u578b\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u660e\u786e\u6307\u5b9a\uff0c\u4e14\u4e0d\u80fd\u968f\u540e\u66f4\u6539\u3002\u5e38\u91cf\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u503c\uff0c\u4f8b\u5982\u6570\u5b66\u5e38\u6570\u6216\u914d\u7f6e\u4fe1\u606f\u3002\\n      - **\u4e0d\u53ef\u53d8\u53d8\u91cf**: \u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u7c7b\u578b\u63a8\u65ad\u81ea\u52a8\u786e\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a\u3002\u4e0d\u53ef\u53d8\u53d8\u91cf\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u8fd0\u884c\u65f6\u786e\u5b9a\u7684\u6570\u636e\u3002\\n\\n   4. **\u7f16\u7a0b\u60ef\u4f8b**\\n\\n      - **\u5e38\u91cf**: \u5e38\u91cf\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4e0d\u4f1a\u66f4\u6539\u7684\u6570\u636e\uff0c\u5982\u6570\u5b66\u5e38\u6570\u3001\u914d\u7f6e\u53c2\u6570\u3001\u5168\u5c40\u5e38\u91cf\u7b49\u3002\\n      - **\u4e0d\u53ef\u53d8\u53d8\u91cf**: \u4e0d\u53ef\u53d8\u53d8\u91cf\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4f1a\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d1\u751f\u53d8\u5316\u7684\u6570\u636e\uff0c\u4f46\u5728\u67d0\u4e2a\u7279\u5b9a\u70b9\u4e0a\u4e0d\u9700\u8981\u6539\u53d8\u7684\u6570\u636e\u3002\\n\\n   \u603b\u7684\u6765\u8bf4\uff0c\u5e38\u91cf\u548c\u4e0d\u53ef\u53d8\u53d8\u91cf\u90fd\u7528\u4e8e\u5b9e\u73b0\u4e0d\u53ef\u53d8\u6027\uff0c\u4f46\u5b83\u4eec\u7684\u7528\u9014\u548c\u8bed\u6cd5\u7565\u6709\u4e0d\u540c\u3002\u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u53d6\u51b3\u4e8e\u60a8\u7684\u9700\u6c42\uff1a\u5982\u679c\u9700\u8981\u5728\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u5171\u4eab\u4e0d\u4f1a\u66f4\u6539\u7684\u503c\uff0c\u5e38\u91cf\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff1b\u5982\u679c\u53ea\u9700\u8981\u5728\u7279\u5b9a\u4f5c\u7528\u57df\u5185\u4fdd\u6301\u4e0d\u53ef\u53d8\u6027\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u66f4\u5408\u9002\u3002\u4e0d\u7ba1\u54ea\u79cd\u65b9\u5f0f\uff0cRust \u7684\u5f3a\u7c7b\u578b\u7cfb\u7edf\u548c\u4e0d\u53ef\u53d8\u6027\u4fdd\u8bc1\u4e86\u4ee3\u7801\u7684\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002\\n\\n4. Rust \u4e2d\u906e\u853d\u548c mut \u7684\u533a\u522b\\n\\n   \u5728 Rust \u4e2d\uff0c\\"\u906e\u853d\\"\uff08Shadowing\uff09\u548c\\"mut\\"\uff08Mutable\uff09\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u7528\u4e8e\u5904\u7406\u53d8\u91cf\u7684\u4e0d\u53ef\u53d8\u6027\u548c\u53ef\u53d8\u6027\uff0c\u6709\u4e00\u4e9b\u533a\u522b\uff1a\\n\\n   1. \u906e\u853d\uff08Shadowing\uff09\uff1a\\n\\n      - \u906e\u853d\u662f\u6307\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u58f0\u660e\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u65b0\u53d8\u91cf\uff0c\u4ece\u800c\u9690\u85cf\uff08\u906e\u853d\uff09\u4e4b\u524d\u540c\u540d\u53d8\u91cf\u7684\u503c\u3002\u906e\u853d\u5141\u8bb8\u60a8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u6bcf\u6b21\u58f0\u660e\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u3002\\n      - \u906e\u853d\u53ef\u4ee5\u7528\u4e8e\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u6539\u53d8\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5148\u58f0\u660e\u4e00\u4e2a\u4e0d\u53ef\u53d8\u53d8\u91cf\uff0c\u7136\u540e\u906e\u853d\u5b83\u5e76\u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u53d8\u91cf\u3002\\n      - \u906e\u853d\u540e\u7684\u53d8\u91cf\uff0c\u5305\u62ec\u4e4b\u524d\u7684\u540c\u540d\u53d8\u91cf\uff0c\u90fd\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u7684\u7c7b\u578b\u548c\u503c\u3002\u906e\u853d\u901a\u5e38\u7528\u4e8e\u9700\u8981\u5728\u76f8\u540c\u4f5c\u7528\u57df\u5185\u5f15\u5165\u65b0\u53d8\u91cf\u5e76\u4fdd\u7559\u4e4b\u524d\u53d8\u91cf\u7684\u503c\u7684\u60c5\u51b5\u3002\\n\\n      ```rust\\n      let x = 5;  // \u4e0d\u53ef\u53d8\u53d8\u91cf\\n      let x = x + 1; // \u906e\u853d x\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4e0d\u53ef\u53d8\u53d8\u91cf\\n      let mut x = x * 2; // \u906e\u853d\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53ef\u53d8\u53d8\u91cf\\n      ```\\n\\n   2. mut \u5173\u952e\u5b57\uff08Mutable\uff09\uff1a\\n\\n      - \\"mut\\"\u662f Rust \u4e2d\u7684\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u58f0\u660e\u53ef\u53d8\u53d8\u91cf\u3002\u4f7f\u7528\\"mut\\"\u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u5176\u4f5c\u7528\u57df\u5185\u4fee\u6539\u5176\u503c\u3002\\n      - \u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u53d8\u91cf\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u91cd\u65b0\u8d4b\u503c\u7ed9\u5b83\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u58f0\u660e\u53d8\u91cf\u3002\u8fd9\u5141\u8bb8\u5bf9\u53d8\u91cf\u7684\u503c\u8fdb\u884c\u66f4\u6539\u3002\\n\\n      ```rust\\n      let mut y = 5;  // \u58f0\u660e\u4e00\u4e2a\u53ef\u53d8\u53d8\u91cf\\n      y = y + 1;      // \u53ef\u4ee5\u4fee\u6539 y \u7684\u503c\\n      ```\\n\\n   3. \u603b\u7ed3:\\n      - \u906e\u853d\u5141\u8bb8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u53d8\u91cf\uff0c\u6bcf\u6b21\u58f0\u660e\u90fd\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u6539\u53d8\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u503c\u3002\\n      - \\"mut\\"\u5173\u952e\u5b57\u7528\u4e8e\u58f0\u660e\u53ef\u53d8\u53d8\u91cf\uff0c\u5141\u8bb8\u5728\u5176\u4f5c\u7528\u57df\u5185\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002\u4e0d\u4f7f\u7528\u906e\u853d\uff0c\u53ea\u9700\u4f7f\u7528\\"mut\\"\u5173\u952e\u5b57\u5373\u53ef\u5b9e\u73b0\u53ef\u53d8\u6027\u3002\\n      - \u4e24\u8005\u901a\u5e38\u6839\u636e\u9700\u6c42\u9009\u62e9\u4f7f\u7528\u3002\u5982\u679c\u60a8\u53ea\u9700\u8981\u4fee\u6539\u53d8\u91cf\u7684\u503c\u800c\u4e0d\u9700\u8981\u6539\u53d8\u5176\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528\\"mut\\"\u5173\u952e\u5b57\u3002\u5982\u679c\u9700\u8981\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u5f15\u5165\u65b0\u7684\u540c\u540d\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u906e\u853d\u3002"},{"id":"/2023/09/26/rust-install","metadata":{"permalink":"/my-website/blog/2023/09/26/rust-install","source":"@site/blog/2023-09-26-rust-install/index.md","title":"Rust \u73af\u5883\u5b89\u88c5","description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","date":"2023-09-26T00:00:00.000Z","formattedDate":"2023\u5e749\u670826\u65e5","tags":[{"label":"rust","permalink":"/my-website/blog/tags/rust"},{"label":"cargo","permalink":"/my-website/blog/tags/cargo"},{"label":"\u5165\u95e8\u6307\u5357","permalink":"/my-website/blog/tags/\u5165\u95e8\u6307\u5357"}],"readingTime":2.42,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"Rust \u73af\u5883\u5b89\u88c5","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b","tags":["rust","cargo","\u5165\u95e8\u6307\u5357"],"date":"2023-09-26T00:00:00.000Z"},"prevItem":{"title":"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u53d8\u91cf","permalink":"/my-website/blog/2023/10/07/rust-valiables"},"nextItem":{"title":"\u901a\u8fc7 Github Actions \u90e8\u7f72 docusaurus \u521b\u5efa\u7684\u9759\u6001\u7f51\u7ad9","permalink":"/my-website/blog/2023/09/08/deploy-docusaurus"}},"content":"## \u73af\u5883\u5b89\u88c5\\n\\n### Linux \u5b89\u88c5\\n\\n1. \u5b89\u88c5\u6700\u65b0\u7248\u672c rust\\n\\n   ```\\n   curl --proto \'=https\' --tlsv1.2 https://sh.rustup.rs -sSf | sh\\n   ```\\n\\n   ![](linux-rust-install-01.png)\\n   ![](linux-rust-install-02.png)\\n\\n   Ubuntu \u6216\u8005 Debian \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\\n\\n   ```\\n   sudo apt install rust\\n   ```\\n\\n2. \u5982\u679c\u5f53\u524d Linux \u7f3a\u5c11 `cc` linker\uff0c\u5728\u4f7f\u7528 `rustc` \u7a0b\u5e8f\u65f6\u4f1a\u62a5\u9519\\n\\n   ![linker\u62a5\u9519](./rustc-linker-error.png)\\n\\n   \u5b89\u88c5 `cc` linker\\n\\n   ```\\n   sudo apt install build-essential\\n   ```\\n\\n3. \u68c0\u67e5 `rustc` \u548c `rustup` \u547d\u4ee4\u662f\u5426\u53ef\u7528\uff0c\u4f7f\u7528 `rustup` \u5bf9 rust \u8fdb\u884c\u66f4\u65b0\\n\\n   ![](linux-rust-install-result.png)\\n\\n4. \u5378\u8f7d rust\\n\\n   ![](linux-rust-install-uninstall.png)\\n\\n\x3c!--truncate--\x3e\\n\\n### Windows \u5b89\u88c5\\n\\n[\u53c2\u7167\u5b98\u65b9\u6559\u7a0b](https://rust-lang.github.io/rustup/installation/windows-msvc.html)\\n\\n1. \u4e0b\u8f7d rust \u5b89\u88c5\u7a0b\u5e8f\u5e76\u5b89\u88c5\\n\\n   ![](./windows-rust-install-step-01.png)\\n\\n2. \u6b64\u65f6 rust \u4f1a\u68c0\u6d4b\u5f53\u524d\u73af\u5883\u662f\u5426\u6ee1\u8db3 rust \u5b89\u88c5\u7a0b\u5e8f\u7684\u8981\u6c42\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u4f1a\u63d0\u793a\u7528\u6237\u5b89\u88c5\u5bf9\u5e94\u7684\u7a0b\u5e8f\\n\\n   ![](windows-rust-install-step-02.png)\\n\\n3. \u6211\u4eec\u9009\u62e9\u65b9\u6848 1\uff0c\u6b64\u65f6\u4f1a\u62c9\u8d77 `Visual Studio Installer` \u5b89\u88c5\u7a0b\u5e8f\uff0c\u6211\u4eec\u76f4\u63a5\u70b9\u51fb\u786e\u5b9a\u8fdb\u884c\u5b89\u88c5\\n\\n   ![](windows-rust-install-step-03.png)\\n\\n4. \u5b89\u88c5\u5b8c\u4e4b\u540e\u9700\u8981\u91cd\u542f\u7535\u8111\uff0c\u91cd\u542f\u6210\u529f\u4e4b\u540e\uff0c\u6211\u4eec\u91cd\u65b0\u70b9\u51fb rust \u5b89\u88c5\u7a0b\u5e8f\u8fdb\u884c\u5b89\u88c5\uff0c\u6b64\u65f6\u68c0\u6d4b\u5230\u7684\u5b89\u88c5\u73af\u5883\u5c06\u6ee1\u8db3 rust \u5b89\u88c5\u7a0b\u5e8f\u7684\u8981\u6c42\\n\\n   ![](windows-rust-install-step-04.png)\\n\\n   > \u5982\u679c\u770b\u5230\u63d0\u793a\u672a\u5b89\u88c5 C++ \u6784\u5efa\u5de5\u5177\u65f6\uff0c\u9700\u8981\u505c\u6b62\u5b89\u88c5\uff0c\u4e0b\u8f7d\u5b89\u88c5 Visual Studio 2017 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u5177\u4f53\u5b89\u88c5\u8be6\u89c1[\u5b98\u65b9 Windows \u5e73\u53f0\u5b89\u88c5\u7684\u6587\u6863](https://rust-lang.github.io/rustup/installation/windows-msvc.html)\\n\\n5. \u4e0b\u8f7d \u6700\u65b0\u7248\u672c\u7684 Visual Studio \uff0c\u70b9\u51fb\u5b89\u88c5\uff0c\u5b89\u88c5\u65f6\u9009\u62e9 `Desktop Development with C++`\uff0c\u5b89\u88c5\u8fc7\u7a0b\u8f83\u957f\uff0c\u4e14\u90e8\u5206\u5305\u9700\u8981 VPN \u624d\u80fd\u4e0b\u8f7d\uff0c\u5b89\u88c5\u6210\u529f\u540e\u518d\u56de\u5934\u6267\u884c Rust \u5b89\u88c5\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u770b\u5230\u672a\u5b89\u88c5 `C++ Build Tools` \u7684\u63d0\u793a\u4e86\\n\\n   ![](windows-rust-install-step-05.png)\\n\\n6. rust \u5b89\u88c5\u7a0b\u5e8f\u4f1a\u63d0\u793a\u9009\u62e9\u54ea\u79cd\u5b89\u88c5\u65b9\u5f0f\\n\\n   ![](windows-rust-install-step-06.png)\\n\\n7. \u6211\u4eec\u9009\u62e9\u65b9\u5f0f 1 \u8fdb\u884c\u5b89\u88c5\uff0c\u5b89\u88c5\u7ed3\u675f\u540e\u63d0\u793a\u6309\u56de\u8f66\u952e\u7ed3\u675f\\n\\n   ![](windows-rust-install-step-07.png)\\n\\n8. \u91cd\u65b0\u6253\u5f00 cmd\uff0c\u68c0\u67e5 rustc \u548c rustup \u662f\u5426\u53ef\u7528\\n\\n   ![](windows-rust-install-step-08.png)\\n\\n\u81f3\u6b64\uff0crust \u5b89\u88c5\u7a0b\u5e8f\u5c31\u6210\u529f\u4e86 \u03c6(\\\\*\uffe3 0 \uffe3)\u53ef\u4ee5\u5f00\u542f rust \u4e4b\u65c5\u4e86( \u2022\u0300 \u03c9 \u2022\u0301 )\u2727\\n\\n## \u53c2\u8003\\n\\n[Rust \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00](https://rustwiki.org/zh-CN/book/title-page.html)"},{"id":"/2023/09/08/deploy-docusaurus","metadata":{"permalink":"/my-website/blog/2023/09/08/deploy-docusaurus","source":"@site/blog/2023-09-08-deploy-docusaurus/index.md","title":"\u901a\u8fc7 Github Actions \u90e8\u7f72 docusaurus \u521b\u5efa\u7684\u9759\u6001\u7f51\u7ad9","description":"\u8bb0\u5f55 \u9759\u6001\u7f51\u7ad9 \u5b66\u4e60\u8fc7\u7a0b","date":"2023-09-08T00:00:00.000Z","formattedDate":"2023\u5e749\u67088\u65e5","tags":[{"label":"deploy","permalink":"/my-website/blog/tags/deploy"},{"label":"docusaurus","permalink":"/my-website/blog/tags/docusaurus"},{"label":"tutorial","permalink":"/my-website/blog/tags/tutorial"}],"readingTime":0.005,"hasTruncateMarker":false,"authors":[{"name":"hbche","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"\u901a\u8fc7 Github Actions \u90e8\u7f72 docusaurus \u521b\u5efa\u7684\u9759\u6001\u7f51\u7ad9","authors":{"name":"hbche","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 \u9759\u6001\u7f51\u7ad9 \u5b66\u4e60\u8fc7\u7a0b","tags":["deploy","docusaurus","tutorial"],"date":"2023-09-08T00:00:00.000Z"},"prevItem":{"title":"Rust \u73af\u5883\u5b89\u88c5","permalink":"/my-website/blog/2023/09/26/rust-install"},"nextItem":{"title":"NVM \u6559\u7a0b","permalink":"/my-website/blog/2023/09/04/nvm-tutorial"}},"content":"#"},{"id":"/2023/09/04/nvm-tutorial","metadata":{"permalink":"/my-website/blog/2023/09/04/nvm-tutorial","source":"@site/blog/2023-09-04-nvm-tutorial/index.md","title":"NVM \u6559\u7a0b","description":"\u8bb0\u5f55 NVM \u5b66\u4e60\u8fc7\u7a0b","date":"2023-09-04T00:00:00.000Z","formattedDate":"2023\u5e749\u67084\u65e5","tags":[{"label":"nvm","permalink":"/my-website/blog/tags/nvm"},{"label":"node","permalink":"/my-website/blog/tags/node"},{"label":"tutorial","permalink":"/my-website/blog/tags/tutorial"}],"readingTime":4.625,"hasTruncateMarker":true,"authors":[{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"}],"frontMatter":{"title":"NVM \u6559\u7a0b","authors":{"name":"Hanbin Che","title":"Front End Engineer","url":"https://github.com/hbche","image_url":"https://github.com/hbche.png","imageURL":"https://github.com/hbche.png"},"description":"\u8bb0\u5f55 NVM \u5b66\u4e60\u8fc7\u7a0b","tags":["nvm","node","tutorial"],"date":"2023-09-04T00:00:00.000Z"},"prevItem":{"title":"\u901a\u8fc7 Github Actions \u90e8\u7f72 docusaurus \u521b\u5efa\u7684\u9759\u6001\u7f51\u7ad9","permalink":"/my-website/blog/2023/09/08/deploy-docusaurus"}},"content":"### \u4ec0\u4e48\u662f NVM\\n\\n[![logo](./nvm-logo-black.svg#logo-width)](https://github.com/nvm-sh/nvm)\\n\\nnvm \u5168\u79f0 Node Version Manager\uff0c\u662f\u4e00\u79cd nodejs \u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u53ea\u901a\u8fc7\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5b9e\u73b0\u201c\u5feb\u901f\u201d\u5b89\u88c5\u548c\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 nodejs\u3002\\n\\n```cmd title=\u547d\u4ee4\u884c\u793a\u4f8b\\n$ nvm use 16\\nNow using node v16.9.1 (npm v7.21.1)\\n$ node -v\\nv16.9.1\\n$ nvm use 14\\nNow using node v14.18.0 (npm v6.14.15)\\n$ node -v\\nv14.18.0\\n$ nvm install 12\\nNow using node v12.22.6 (npm v6.14.5)\\n$ node -v\\nv12.22.6\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n### NVM \u5b89\u88c5\\n\\n\u5f53\u524d\u53ea\u8bb0\u5f55 Windows \u73af\u5883\u4e0b\u7684\u5b89\u88c5\u6559\u7a0b\uff0c\u5176\u4ed6\u5e73\u53f0\u7684\u53c2\u7167 [Installing and Updating](https://github.com/nvm-sh/nvm#installing-and-updating)\u3002\\n\\n\u8bbf\u95ee [nvm-windows](https://github.com/coreybutler/nvm-windows/releases) \u4ed3\u5e93\uff0c\u4e0b\u8f7d\u6307\u5b9a\u7248\u672c\u7684 `nvm-setup.exe` \u5b89\u88c5\u5305\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002\\n![](./nvm-setup-01.png)\\n![](./nvm-setup-02.png)\\n![](./nvm-setup-03.png)\\n\\n### NVM \u5e38\u89c1\u547d\u4ee4\u4f7f\u7528\\n\\nnvm \u5e2e\u52a9\u6587\u6863\\n\\n```\\nnvm\\n```\\n\\n\u8f93\u51fa\u7684\u5e2e\u52a9\u6587\u6863\u5982\u4e0b\uff1a\\n\\nRunning version 1.1.7.\\n\\n| Usage &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Description                                                                                                                                                                                                                                                                                                                        |\\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `vm arch`                                                                                                                                                                                                                                                                                                          | `Show if node is running in 32 or 64 bit mode.`                                                                                                                                                                                                                                                                                    |\\n| `nvm install <version> [arch]`                                                                                                                                                                                                                                                                                     | `The version can be a node.js version or \\"latest\\" for the latest stable version. Optionally specify whether to install the 32 or 64 bit version (defaults to system arch).Set [arch] to \\"all\\" to install 32 AND 64 bit versions.Add --insecure to the end of this command to bypass SSL validation of the remote download server.` |\\n| `nvm list [available]`                                                                                                                                                                                                                                                                                             | `List the node.js installations. Type \\"available\\" at the end to see what can be installed. Aliased as ls.`                                                                                                                                                                                                                         |\\n| `nvm on`                                                                                                                                                                                                                                                                                                           | `Enable node.js version management.`                                                                                                                                                                                                                                                                                               |\\n| `nvm off`                                                                                                                                                                                                                                                                                                          | `Disable node.js version management.`                                                                                                                                                                                                                                                                                              |\\n| `nvm proxy [url]`                                                                                                                                                                                                                                                                                                  | `Set a proxy to use for downloads. Leave [url] blank to see the current proxy.Set [url] to \\"none\\" to remove the proxy.`                                                                                                                                                                                                            |\\n| `nvm node_mirror [url]`                                                                                                                                                                                                                                                                                            | `Set the node mirror. Defaults to https://nodejs.org/dist/. Leave [url] blank to use default url.`                                                                                                                                                                                                                                 |\\n| `nvm npm_mirror [url]`                                                                                                                                                                                                                                                                                             | `Set the npm mirror. Defaults to https://github.com/npm/cli/archive/. Leave [url] blank to default url.`                                                                                                                                                                                                                           |\\n| `nvm uninstall <version>`                                                                                                                                                                                                                                                                                          | `The version must be a specific version.`                                                                                                                                                                                                                                                                                          |\\n| `nvm use [version] [arch]`                                                                                                                                                                                                                                                                                         | `Switch to use the specified version. Optionally specify 32/64bit architecture.nvm use <arch> will continue using the selected version, but switch to 32/64 bit mode.`                                                                                                                                                             |\\n| `nvm root [path]`                                                                                                                                                                                                                                                                                                  | `Set the directory where nvm should store different versions of node.js.If <path> is not set, the current root will be displayed.`                                                                                                                                                                                                 |\\n| `nvm version`                                                                                                                                                                                                                                                                                                      | `Displays the current running version of nvm for Windows. Aliased as v.`                                                                                                                                                                                                                                                           |\\n\\n\u67e5\u770b\u5f53\u524d\u8fdc\u7a0b\u955c\u50cf\u4ed3\u5e93\u4e2d\u53ef\u7528\u7684 node \u7248\u672c\\n\\n```\\nnvm list available\\n```\\n\\n> \u5982\u679c\u9047\u5230\u5982\u4e0b\u9519\u8bef\u53ef\u91cd\u65b0\u8fd0\u884c\u4e00\u6b21`nvm list available`\\n\\n```\\nCould not retrieve https://npmmirror.com/mirrors/node/index.json.\\n\\nGet \\"https://cdn.npmmirror.com/binaries/node/index.json\\": read tcp 10.106.22.43:52214->111.39.146.89:443: wsarecv: An existing connection was forcibly closed by the remote host.\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a\\n\\n| CURRENT | LTS     | OLD STABLE | OLD UNSTABLE |\\n| ------- | ------- | ---------- | ------------ |\\n| 20.6.0  | 18.17.1 | 0.12.18    | 0.11.16      |\\n| 20.5.1  | 18.17.0 | 0.12.17    | 0.11.15      |\\n| 20.5.0  | 18.16.1 | 0.12.16    | 0.11.14      |\\n| 20.4.0  | 18.16.0 | 0.12.15    | 0.11.13      |\\n| 20.3.1  | 18.15.0 | 0.12.14    | 0.11.12      |\\n| 20.3.0  | 18.14.2 | 0.12.13    | 0.11.11      |\\n| 20.2.0  | 18.14.1 | 0.12.12    | 0.11.10      |\\n| 20.1.0  | 18.14.0 | 0.12.11    | 0.11.9       |\\n| 20.0.0  | 18.13.0 | 0.12.10    | 0.11.8       |\\n| 19.9.0  | 18.12.1 | 0.12.9     | 0.11.7       |\\n| 19.8.1  | 18.12.0 | 0.12.8     | 0.11.6       |\\n| 19.8.0  | 16.20.2 | 0.12.7     | 0.11.5       |\\n| 19.7.0  | 16.20.1 | 0.12.6     | 0.11.4       |\\n| 19.6.1  | 16.20.0 | 0.12.5     | 0.11.3       |\\n| 19.6.0  | 16.19.1 | 0.12.4     | 0.11.2       |\\n| 19.5.0  | 16.19.0 | 0.12.3     | 0.11.1       |\\n| 19.4.0  | 16.18.1 | 0.12.2     | 0.11.0       |\\n| 19.3.0  | 16.18.0 | 0.12.1     | 0.9.12       |\\n| 19.2.0  | 16.17.1 | 0.12.0     | 0.9.11       |\\n| 19.1.0  | 16.17.0 | 0.10.48    | 0.9.10       |\\n\\nThis is a partial list. For a complete list, visit https://nodejs.org/en/download/releases\\n\\n\u4e0b\u8f7d\u3001\u7f16\u8bd1\u5e76\u5b89\u88c5**\u6307\u5b9a**\u7248\u672c\u7684 node\\n\\n```cmd\\nnvm install 18.17.1\\n```\\n\\n\u8f93\u51fa\u53ef\u80fd\u5982\u4e0b\uff1a\\n\\n```\\nDownloading node.js version 18.17.1 (64-bit)...\\nExtracting node and npm...\\nComplete\\nnpm v9.6.7 installed successfully.\\n\\n\\nInstallation complete. If you want to use this version, type\\n\\nnvm use 18.17.1\\n```\\n\\n\u9009\u62e9\u5f53\u524d\u4f7f\u7528\u7684 node \u7248\u672c\\n\\n```\\nnvm use 18.17.1\\n```\\n\\n\u8f93\u5165\u5982\u4e0b\uff1a\\n\\n```\\nNow using node v18.17.1 (64-bit)\\n```\\n\\n\u67e5\u770b\u672c\u5730\u5df2\u7ecf\u5b89\u88c5\u7684\u53ef\u7528 node \u7248\u672c\\n\\n```\\nnvm list\\n```\\n\\n\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u5982\u4e0b\uff1a\\n\\n```\\n* 18.17.1 (Currently using 64-bit executable)\\n  16.17.0\\n```\\n\\n### \u4fee\u6539 NVM \u955c\u50cf\u8def\u5f84\\n\\n1. \u65b9\u5f0f\u4e00\uff1a\\n\\n\u76f4\u63a5\u4fee\u6539 nvm \u5b89\u88c5\u76ee\u5f55\u4e0b `setting.txt`\u6587\u4ef6\\n\\n\u4fee\u6539\u524d\uff1a\\n\\n```\\nroot: D:\\\\devTool\\\\nvm\\npath: D:\\\\devTool\\\\nvm\\\\nodejs\\n```\\n\\n\u4fee\u6539\u540e\uff1a\\n\\n```\\nroot: D:\\\\devTool\\\\nvm\\npath: D:\\\\devTool\\\\nvm\\\\nodejs\\nnode_mirror: https://npmmirror.com/mirrors/node/\\nnpm_mirror: https://npmmirror.com/mirrors/npm/\\n```\\n\\n1. \u65b9\u5f0f\u4e8c\uff1a\\n\\n\u547d\u4ee4\u884c\u4fee\u6539\\n\\n```\\nnvm node_mirror https://npmmirror.com/mirrors/node/\\nnvm npm_mirror https://npmmirror.com/mirrors/npm/\\n```\\n\\n### NVM \u95ee\u9898\u8865\u5145\\n\\n\u5f85\u8865\u5145"}]}')}}]);