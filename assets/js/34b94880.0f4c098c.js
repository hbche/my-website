"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),b=i,d=m["".concat(u,".").concat(b)]||m[b]||c[b]||l;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=b;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:i,a[1]=o;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},2346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const l={title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41",authors:{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png"},description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",tags:["rust","\u63a7\u5236\u6d41","tutorial"],date:new Date("2023-10-08T00:00:00.000Z")},a=void 0,o={permalink:"/my-website/blog/2023/10/08/control-flow",source:"@site/blog/2023-10-08-control-flow/index.md",title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41",description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",date:"2023-10-08T00:00:00.000Z",formattedDate:"2023\u5e7410\u67088\u65e5",tags:[{label:"rust",permalink:"/my-website/blog/tags/rust"},{label:"\u63a7\u5236\u6d41",permalink:"/my-website/blog/tags/\u63a7\u5236\u6d41"},{label:"tutorial",permalink:"/my-website/blog/tags/tutorial"}],readingTime:2.37,hasTruncateMarker:!0,authors:[{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png",imageURL:"https://github.com/hbche.png"}],frontMatter:{title:"Rust \u901a\u7528\u7f16\u7a0b\u6982\u5ff5 - \u63a7\u5236\u6d41",authors:{name:"Hanbin Che",title:"Front End Engineer",url:"https://github.com/hbche",image_url:"https://github.com/hbche.png",imageURL:"https://github.com/hbche.png"},description:"\u8bb0\u5f55 Rust \u5b66\u4e60\u8fc7\u7a0b",tags:["rust","\u63a7\u5236\u6d41","tutorial"],date:"2023-10-08T00:00:00.000Z"},nextItem:{title:"IEEE-754\u6807\u51c6",permalink:"/my-website/blog/2023/10/08/ieee-754"}},u={authorsImageUrls:[void 0]},p=[{value:"if \u8868\u8fbe\u5f0f",id:"if-\u8868\u8fbe\u5f0f",level:2},{value:"\u4f7f\u7528 else if \u5904\u7406\u591a\u91cd\u6761\u4ef6",id:"\u4f7f\u7528-else-if-\u5904\u7406\u591a\u91cd\u6761\u4ef6",level:3},{value:"\u5728 let \u8bed\u53e5\u4e2d\u4f7f\u7528 if",id:"\u5728-let-\u8bed\u53e5\u4e2d\u4f7f\u7528-if",level:3},{value:"\u4f7f\u7528\u5faa\u73af\u91cd\u590d\u6267\u884c",id:"\u4f7f\u7528\u5faa\u73af\u91cd\u590d\u6267\u884c",level:2},{value:"\u4f7f\u7528 loop \u91cd\u590d\u6267\u884c\u4ee3\u7801",id:"\u4f7f\u7528-loop-\u91cd\u590d\u6267\u884c\u4ee3\u7801",level:3},{value:"\u4ece\u5faa\u73af\u8fd4\u56de",id:"\u4ece\u5faa\u73af\u8fd4\u56de",level:3},{value:"while \u6761\u4ef6\u5faa\u73af",id:"while-\u6761\u4ef6\u5faa\u73af",level:3},{value:"\u4f7f\u7528 for \u904d\u5386\u96c6\u5408",id:"\u4f7f\u7528-for-\u904d\u5386\u96c6\u5408",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],s={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u6839\u636e\u6761\u4ef6\u662f\u5426\u4e3a\u771f\u6765\u51b3\u5b9a\u662f\u5426\u6267\u884c\u67d0\u4e9b\u4ee3\u7801\uff0c\u6216\u6839\u636e\u6761\u4ef6\u662f\u5426\u4e3a\u771f\u6765\u91cd\u590d\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u662f\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002Rust \u4ee3\u7801\u4e2d\u6700\u5e38\u89c1\u7684\u7528\u6765\u63a7\u5236\u6267\u884c\u6d41\u7684\u7ed3\u6784\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u548c\u5faa\u73af\u3002"),(0,i.kt)("h2",{id:"if-\u8868\u8fbe\u5f0f"},"if \u8868\u8fbe\u5f0f"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u5141\u8bb8\u6839\u636e\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5206\u652f\u3002\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6761\u4ef6\u5e76\u8868\u793a \u201c\u5982\u679c\u6761\u4ef6\u6ee1\u8db3\uff0c\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff1b\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u4e0d\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\u3002\u201d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\n\nfn even_number(num: i32) -> bool {\n    num % 2 == 0\n}\n\nfn main() {\n    println!("Please input a number");\n\n    let mut number = String::new();\n    io::stdin()\n        .read_line(&mut number)\n        .expect("Failed to read line");\n\n    // number \u8f6c\u6362\u4e4b\u524d\u5fc5\u987b\u4f7f\u7528 trim \u51fd\u6570\u5bf9\u5176\u7ed3\u5c3e\u7684\u6362\u884c\u8f6c\u79fb\u8fdb\u884c\u5220\u9664,\u5426\u5219 parse \u51fd\u6570\u8c03\u7528\u5c06\u62a5\u5f02\u5e38\n    let number = number.trim().parse().expect("Failed to parse number");\n    let is_even = even_number(number);\n\n    if is_even {\n        println!("{} is even number.", number);\n    } else {\n        println!("{} is odd number.", number);\n    }\n}\n')),(0,i.kt)("p",null,"\u6240\u6709\u7684 if \u8868\u8fbe\u5f0f\u90fd\u4ee5 if \u5173\u952e\u5b57\u5f00\u5934\uff0c\u5176\u540e\u8ddf\u4e00\u4e2a\u6761\u4ef6\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 ",(0,i.kt)("inlineCode",{parentName:"p"},"even_number")," \u7528\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u5076\u6570\uff0c\u5e76\u8fd4\u56de ",(0,i.kt)("inlineCode",{parentName:"p"},"bool")," \u7c7b\u578b\u7684\u7ed3\u679c;\u63a5\u7740\u6211\u4eec\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," \u51fd\u6570\u4e2d\u8c03\u7528\u4e86\u8be5\u51fd\u6570\uff0c\u53c2\u6570\u662f\u7528\u6237\u4ece\u63a7\u5236\u53f0\u8f93\u5165\u7684\u6570\u5b57;\u63a5\u4e0b\u6765\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"if")," \u8868\u8fbe\u5f0f\u6839\u636e ",(0,i.kt)("inlineCode",{parentName:"p"},"even_number")," \u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fdb\u884c\u5224\u65ad\uff0c\u6700\u540e\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"println")," \u5b8f\u6253\u5370\u76f8\u5e94\u7684\u7ed3\u679c\uff0c\u5e76\u7528\u8f93\u5165\u7684\u6570\u5b57\u56de\u586b\u5230\u6807\u51c6\u8f93\u5165\u5360\u4f4d\u7b26\u7684\u4f4d\u7f6e\u3002"),(0,i.kt)("p",null,"\u8f93\u51fa:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"PS E:\\github\\rust-projects\\branches> cargo run\n   Compiling branches v0.1.0 (E:\\github\\rust-projects\\branches)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.45s\n     Running `target\\debug\\branches.exe`\nPlease input a number\n23\n23 is odd number.\n")),(0,i.kt)("h3",{id:"\u4f7f\u7528-else-if-\u5904\u7406\u591a\u91cd\u6761\u4ef6"},"\u4f7f\u7528 else if \u5904\u7406\u591a\u91cd\u6761\u4ef6"),(0,i.kt)("h3",{id:"\u5728-let-\u8bed\u53e5\u4e2d\u4f7f\u7528-if"},"\u5728 let \u8bed\u53e5\u4e2d\u4f7f\u7528 if"),(0,i.kt)("h2",{id:"\u4f7f\u7528\u5faa\u73af\u91cd\u590d\u6267\u884c"},"\u4f7f\u7528\u5faa\u73af\u91cd\u590d\u6267\u884c"),(0,i.kt)("h3",{id:"\u4f7f\u7528-loop-\u91cd\u590d\u6267\u884c\u4ee3\u7801"},"\u4f7f\u7528 loop \u91cd\u590d\u6267\u884c\u4ee3\u7801"),(0,i.kt)("h3",{id:"\u4ece\u5faa\u73af\u8fd4\u56de"},"\u4ece\u5faa\u73af\u8fd4\u56de"),(0,i.kt)("h3",{id:"while-\u6761\u4ef6\u5faa\u73af"},"while \u6761\u4ef6\u5faa\u73af"),(0,i.kt)("h3",{id:"\u4f7f\u7528-for-\u904d\u5386\u96c6\u5408"},"\u4f7f\u7528 for \u904d\u5386\u96c6\u5408"),(0,i.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"))}c.isMDXComponent=!0}}]);